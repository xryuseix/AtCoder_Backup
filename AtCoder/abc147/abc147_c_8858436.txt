問題文の引用元：https://atcoder.jp/contests/abc147/tasks/abc147_c
C - HonestOrUnkind2Editorial / $(function() {var ts = $('#task-statement span.lang');if (ts.children('span').size() <= 1) {$('#task-lang-btn').hide();ts.children('span').show();return;}var REMEMBER_LB = 5;var LS_KEY = 'task_lang';var taskLang = getLS(LS_KEY) || '';var changeTimes = 0;if (taskLang == 'ja' || taskLang == 'en') {changeTimes = REMEMBER_LB;} else {var changeTimes = parseInt(taskLang, 10);if (isNaN(changeTimes)) {changeTimes = 0;delLS(LS_KEY);}changeTimes++;taskLang = LANG;}ts.children('span.lang-' + taskLang).show();$('#task-lang-btn span').click(function() {var l = $(this).data('lang');ts.children('span').hide();ts.children('span.lang-' + l).show();if (changeTimes < REMEMBER_LB) setLS(LS_KEY, changeTimes);else setLS(LS_KEY, l);});});
Time Limit : 2 sec / Memory Limit : 1024 MB
配点 : 300 点
問題文 : 1 から N までの番号がついた N 人の人がいます。彼らはみな、必ず正しい証言を行う「正直者」か、真偽不明の証言を行う「不親切な人」のいずれかです。人 i は A_i 個の証言を行っています。人 i の j 個目の証言は 2 つの整数 x_{ij} , y_{ij} で表され、y_{ij} = 1 のときは「人 x_{ij} は正直者である」という証言であり、y_{ij} = 0 のときは「人 x_{ij} は不親切な人である」という証言です。この N 人の中には最大で何人の正直者が存在し得るでしょうか？
制約入力は全て整数1 ≤ N ≤ 150 \leq A_i \leq N - 11 \leq x_{ij} \leq Nx_{ij} \neq ix_{ij_1} \neq x_{ij_2} (j_1 \neq j_2)y_{ij} = 0, 1入力入力は以下の形式で標準入力から与えられる。NA_1x_{11} y_{11}x_{12} y_{12}:x_{1A_1} y_{1A_1}A_2x_{21} y_{21}x_{22} y_{22}:x_{2A_2} y_{2A_2}:A_Nx_{N1} y_{N1}x_{N2} y_{N2}:x_{NA_N} y_{NA_N}出力存在し得る正直者の最大人数を出力せよ。
// ソースコードの引用元 : https://atcoder.jp/contests/abc147/submissions/8858436
// 提出ID : 8858436
// 問題ID : abc147_c
// コンテストID : abc147
// ユーザID : xryuseix
// コード長 : 2859
// 実行時間 : 23



#include <iostream>
#include <cstdio>
#include <algorithm>
#include <cmath>
#include <vector>
#include <list>
#include <set>
#include <map>
#include <queue>
#include <stack>
#include <cctype>
#include <climits>
#include <string>
#include <bitset>
#include <cfloat>
#include <unordered_set>
using namespace std;
typedef long double ld;
typedef long long int ll;
typedef unsigned long long int ull;
typedef vector<int> vi;
typedef vector<char> vc;
typedef vector<bool> vb;
typedef vector<double> vd;
typedef vector<string> vs;
typedef vector<ll> vll;
typedef vector<pair<int,int> > vpii;
typedef vector<vector<int> > vvi;
typedef vector<vector<char> > vvc;
typedef vector<vector<string> > vvs;
typedef vector<vector<ll> > vvll;
#define rep(i,n) for(int i = 0; i < (n); ++i)
#define rrep(i,n) for(int i = 1; i <= (n); ++i)
#define drep(i,n) for(int i = (n) - 1; i >= 0; --i)
#define fin(ans) cout<<(ans)<<endl
#define STI(s) atoi(s.c_str())
#define mp(p,q) make_pair(p, q)
#define pb(n) push_back(n)
#define all(a) a.begin(), a.end()
#define rall(a) a.rbegin(), a.rend()
#define Sort(a) sort(a.begin(), a.end())
#define Rort(a) sort(a.rbegin(), a.rend())
#define MATHPI acos(-1)
#define itn int
template <class T> inline bool chmax(T& a,T b){if(a<b){a=b;return 1;}return 0;}
template <class T> inline bool chmin(T& a,T b){if(a>b){a=b;return 1;}return 0;}
struct io{io(){ios::sync_with_stdio(false);cin.tie(0);};};
const ll MOD = 1000000007;
const int INF = INT_MAX;
const ll LLINF = 1LL<<62;




int main(void){

    int bit=0;
    int ans=0;
    int n;
    cin>>n;
    vector<vpii> v(n,vpii());
    rep(i,n){
        int a;
        cin>>a;
        for(int j=0;j<a;j++){
            int x,y;
            cin>>x>>y;
            x--;
            v[i].pb(mp(x,y));
        }
    }
    while(bit<pow(2,n)){
        // fin(bit);
        string s="";
        int tmp=bit;
        while(tmp>0){
            s+=tmp%2+'0';
            tmp/=2;
        }
        while(s.size()<n)s+='0';
        reverse(all(s));
        // fin(s);
        
        int onestcount=0;
        bool allonest=true;
        for(int i=0;i<n;i++){
            bool isonest=true;
            if(s[i]=='1'){
                for(int j=0;j<v[i].size();j++){
                    if(bit==6){
                        // cout<<i<<j<<" "<<s[v[i][j].first]-'0'<<" "<<v[i][j].first<<" "<<v[i][j].second<<endl;
                    }
                    if(s[v[i][j].first]-'0' == v[i][j].second){;}
                    else isonest=false;
                }
            }
            if(isonest)onestcount++;
            else allonest=false;
        }
        if(allonest)ans=max(ans,(int)count(s.cbegin(), s.cend(), '1'));
        // cout<<onestcount<<endl<<endl;

        bit++;
    }
    fin(ans);

}
