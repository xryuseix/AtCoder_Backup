問題文の引用元：https://atcoder.jp/contests/sumitrust2019/tasks/sumitb2019_d
D - Lucky PINEditorial / $(function() {var ts = $('#task-statement span.lang');if (ts.children('span').size() <= 1) {$('#task-lang-btn').hide();ts.children('span').show();return;}var REMEMBER_LB = 5;var LS_KEY = 'task_lang';var taskLang = getLS(LS_KEY) || '';var changeTimes = 0;if (taskLang == 'ja' || taskLang == 'en') {changeTimes = REMEMBER_LB;} else {var changeTimes = parseInt(taskLang, 10);if (isNaN(changeTimes)) {changeTimes = 0;delLS(LS_KEY);}changeTimes++;taskLang = LANG;}ts.children('span.lang-' + taskLang).show();$('#task-lang-btn span').click(function() {var l = $(this).data('lang');ts.children('span').hide();ts.children('span.lang-' + l).show();if (changeTimes < REMEMBER_LB) setLS(LS_KEY, changeTimes);else setLS(LS_KEY, l);});});
Time Limit : 2 sec / Memory Limit : 1024 MB
配点: 400 点
問題文 : AtCoder 社は、オフィスの入り口に 3 桁の暗証番号を設定することにしました。  AtCoder 社には N 桁のラッキーナンバー S があります。社長の高橋君は、S から N-3 桁を消して残りの 3 桁を左から読んだものを暗証番号として設定することにしました。  このとき、設定されうる暗証番号は何種類あるでしょうか？  ただし、ラッキーナンバーや暗証番号はいずれも 0 から始まっても良いものとします。  
制約4 \leq N \leq 30000S は半角数字からなる長さ N の文字列入力入力は以下の形式で標準入力から与えられます。NS出力設定されうる暗証番号の種類数を出力してください。  
// ソースコードの引用元 : https://atcoder.jp/contests/sumitrust2019/submissions/8753633
// 提出ID : 8753633
// 問題ID : sumitb2019_d
// コンテストID : sumitrust2019
// ユーザID : xryuseix
// コード長 : 2337
// 実行時間 : 1826



#include <iostream>
#include <cstdio>
#include <algorithm>
#include <cmath>
#include <vector>
#include <list>
#include <set>
#include <map>
#include <queue>
#include <stack>
#include <cctype>
#include <climits>
#include <string>
#include <bitset>
#include <cfloat>
#include <unordered_set>
using namespace std;
typedef long double ld;
typedef long long int ll;
typedef unsigned long long int ull;
typedef vector<int> vi;
typedef vector<char> vc;
typedef vector<bool> vb;
typedef vector<double> vd;
typedef vector<string> vs;
typedef vector<ll> vll;
typedef vector<pair<int,int> > vpii;
typedef vector<vector<int> > vvi;
typedef vector<vector<char> > vvc;
typedef vector<vector<string> > vvs;
typedef vector<vector<ll> > vvll;
#define rep(i,n) for(int i = 0; i < (n); ++i)
#define rrep(i,n) for(int i = 1; i <= (n); ++i)
#define drep(i,n) for(int i = (n) - 1; i >= 0; --i)
#define fin(ans) cout<<(ans)<<endl
#define STI(s) atoi(s.c_str())
#define mp(p,q) make_pair(p, q)
#define pb(n) push_back(n)
#define all(a) a.begin(), a.end()
#define rall(a) a.rbegin(), a.rend()
#define Sort(a) sort(a.begin(), a.end())
#define Rort(a) sort(a.rbegin(), a.rend())
#define MATHPI acos(-1)
#define itn int
template <class T> inline bool chmax(T& a,T b){if(a<b){a=b;return 1;}return 0;}
template <class T> inline bool chmin(T& a,T b){if(a>b){a=b;return 1;}return 0;}
struct io{io(){ios::sync_with_stdio(false);cin.tie(0);};};
const ll MOD = 1000000007;
const int INF = INT_MAX;
const ll LLINF = 1LL<<62;

int lcs(string s, string t) {
    vvi dp(s.size() + 1, vi(t.size() + 1));
    
    for(int i = 0; i < s.size(); i++) {//LCS
        for(int j = 0; j < t.size(); j++) {
            if(s[i] == t[j]) {
                dp[i + 1][j + 1] = dp[i][j] + 1;
            }
            else{
                dp[i + 1][j + 1] = max(dp[i][j + 1], dp[i + 1][j]);
            }
        }
    }
    return dp[(int)s.size()][(int)t.size()];
}

int main(void){

   int n;
   string s;
   cin>>n>>s;
   ll ans=0;
   for(char i='0';i<='9';i++){
       for (char j = '0'; j <= '9'; j++)
       {
           for (char k = '0'; k <= '9'; k++)
           {
               string tmp="";tmp+=i;tmp+=j;tmp+=k;
               if(lcs(s,tmp)==3)ans++;
           }
       }
   }
   fin(ans);
}
