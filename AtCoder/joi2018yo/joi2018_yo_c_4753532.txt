問題文の引用元：https://atcoder.jp/contests/joi2018yo/tasks/joi2018_yo_c
C - 幹線道路 (Trunk Road)Editorial / $(function() {var ts = $('#task-statement span.lang');if (ts.children('span').size() <= 1) {$('#task-lang-btn').hide();ts.children('span').show();return;}var REMEMBER_LB = 5;var LS_KEY = 'task_lang';var taskLang = getLS(LS_KEY) || '';var changeTimes = 0;if (taskLang == 'ja' || taskLang == 'en') {changeTimes = REMEMBER_LB;} else {var changeTimes = parseInt(taskLang, 10);if (isNaN(changeTimes)) {changeTimes = 0;delLS(LS_KEY);}changeTimes++;taskLang = LANG;}ts.children('span.lang-' + taskLang).show();$('#task-lang-btn span').click(function() {var l = $(this).data('lang');ts.children('span').hide();ts.children('span.lang-' + l).show();if (changeTimes < REMEMBER_LB) setLS(LS_KEY, changeTimes);else setLS(LS_KEY, l);});});
Time Limit : 2 sec / Memory Limit : 256 MB
配点 : 100 点
問題文 : JOI 市は，東西方向にまっすぐに伸びる H 本の道路と，南北方向にまっすぐに伸びる W 本の道路によって，碁盤の目の形に区分けされている．道路と道路の間隔は 1 である．JOI 市では，これら H+W 本の道路から，東西方向に 1 本，南北方向に 1 本，合計 2 本の道路を幹線道路として選ぶことになった．北から i 本目 (1≦i≦H) の道路と，西から j 本目 (1≦j≦W) の道路の交差点を，交差点 (i,j) とする．交差点 (i,j) と北から m 本目 (1≦m≦H) の道路の距離は |i-m| であり，交差点 (i,j) と西から n 本目 (1≦n≦W) の道路の距離は |j-n| である．また，交差点 (i,j) の近くには A_{i,j} 人の住人が住んでいる．2 本の幹線道路を選んだときの，JOI 市の全ての住人に対する，最寄りの交差点から近い方の幹線道路への距離の総和の最小値を求めよ．
制約2 ≦ H ≦ 252 ≦ W ≦ 250 ≦ A_{i,j} ≦ 100 (1 ≦ i ≦ H, 1 ≦ j ≦ W)入力入力は以下の形式で標準入力から与えられる．H WA_{1,1} A_{1,2} ... A_{1,W}:A_{H,1} A_{H,2} ... A_{H,W}出力JOI 市の全ての住人に対する，最寄りの交差点から近い方の幹線道路への距離の総和の最小値を出力せよ．小課題 1 [10点]A_{i,j} = 1 (1 ≦ i ≦ H, 1 ≦ j ≦ W)小課題 2 [90点]追加の制限はない．
// ソースコードの引用元 : https://atcoder.jp/contests/joi2018yo/submissions/4753532
// 提出ID : 4753532
// 問題ID : joi2018_yo_c
// コンテストID : joi2018yo
// ユーザID : xryuseix
// コード長 : 716
// 実行時間 : 2



#include<stdio.h>
int main(void){
	int h,w,i,k,one,two,min=1000000,tate,yoko,sum,n,m;
	scanf("%d %d",&h,&w);
	int map[h+1][w+1],sin[h+1][w+1];
	for(i=1;i<=h;i++){
		for(k=1;k<=w;k++){
			scanf("%d",&map[i][k]);
		}
	}
	for(yoko=1;yoko<=h;yoko++){
		for(tate=1;tate<=w;tate++){
			sum=0;
			for(i=1;i<=h;i++){
				for(k=1;k<=w;k++){
					one=yoko-i;
					if(one<0) one*=-1;
					two=tate-k;
					if(two<0) two*=-1;
					if(one<two){
						sin[i][k]=map[i][k]*one;
					}
					else{
						sin[i][k]=map[i][k]*two;
					}
				}
			}
			for(n=0;n<h;n++){
				for(m=0;m<w;m++)
					sum+=sin[n+1][m+1];
			}
			if(min>sum){
				min=sum;
			}
		}
	}
	printf("%d\n",min);
	return 0;
}
