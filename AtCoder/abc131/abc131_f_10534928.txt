問題文の引用元：https://atcoder.jp/contests/abc131/tasks/abc131_f
F - Must Be Rectangular!Editorial / $(function() {var ts = $('#task-statement span.lang');if (ts.children('span').size() <= 1) {$('#task-lang-btn').hide();ts.children('span').show();return;}var REMEMBER_LB = 5;var LS_KEY = 'task_lang';var taskLang = getLS(LS_KEY) || '';var changeTimes = 0;if (taskLang == 'ja' || taskLang == 'en') {changeTimes = REMEMBER_LB;} else {var changeTimes = parseInt(taskLang, 10);if (isNaN(changeTimes)) {changeTimes = 0;delLS(LS_KEY);}changeTimes++;taskLang = LANG;}ts.children('span.lang-' + taskLang).show();$('#task-lang-btn span').click(function() {var l = $(this).data('lang');ts.children('span').hide();ts.children('span.lang-' + l).show();if (changeTimes < REMEMBER_LB) setLS(LS_KEY, changeTimes);else setLS(LS_KEY, l);});});
Time Limit : 2 sec / Memory Limit : 1024 MB
配点 : 600 点
問題文 : 2 次元平面上の N 個の点があり、i 番目の点の座標は (x_i, y_i) です。以下の操作を行える限り繰り返します。座標 (a, b), (a, d), (c, b), (c, d) のうちちょうど 3 箇所に点が存在するような整数 a, b, c, d (a \neq c, b \neq d) を選び、残りの 1 箇所に点を追加する。この操作は有限回しか行なうことができないことが証明できます。操作回数の最大値を求めてください。
制約1 \leq N \leq 10^51 \leq x_i, y_i \leq 10^5x_i \neq x_j または y_i \neq y_j (i \neq j)入力は全て整数である入力入力は以下の形式で標準入力から与えられる。Nx_1 y_1:x_N y_N出力操作回数の最大値を出力せよ。
// ソースコードの引用元 : https://atcoder.jp/contests/abc131/submissions/10534928
// 提出ID : 10534928
// 問題ID : abc131_f
// コンテストID : abc131
// ユーザID : xryuseix
// コード長 : 2334
// 実行時間 : 112



#include <iostream>
#include <cstdio>
#include <algorithm>
#include <cmath>
#include <vector>
#include <list>
#include <set>
#include <map>
#include <queue>
#include <stack>
#include <cctype>
#include <cassert>
#include <climits>
#include <string>
#include <bitset>
#include <cfloat>
#include <unordered_set>
#pragma GCC optimize("Ofast")
using namespace std;
typedef long double ld;
typedef long long int ll;
typedef unsigned long long int ull;
typedef vector<int> vi;
typedef vector<char> vc;
typedef vector<bool> vb;
typedef vector<double> vd;
typedef vector<string> vs;
typedef vector<ll> vll;
typedef vector<pair<int,int> > vpii;
typedef vector<vector<int> > vvi;
typedef vector<vector<char> > vvc;
typedef vector<vector<string> > vvs;
typedef vector<vector<ll> > vvll;
#define rep(i,n) for(int i = 0; i < (n); ++i)
#define rrep(i,n) for(int i = 1; i <= (n); ++i)
#define irep(it, stl) for(auto it = stl.begin(); it != stl.end(); it++)
#define drep(i,n) for(int i = (n) - 1; i >= 0; --i)
#define fin(ans) cout << (ans) << '\n'
#define STLL(s) strtoll(s.c_str(), NULL, 10)
#define mp(p,q) make_pair(p, q)
#define pb(n) push_back(n)
#define all(a) a.begin(), a.end()
#define rall(a) a.rbegin(), a.rend()
#define Sort(a) sort(a.begin(), a.end())
#define Rort(a) sort(a.rbegin(), a.rend())
#define MATHPI acos(-1)
#define itn int;
int dx[8] = {1, 0, -1, 0, 1, -1, -1, 1};
int dy[8] = {0, 1, 0, -1, 1, 1, -1, -1};
template <class T> inline bool chmax(T& a,T b){if(a<b){a=b;return 1;} return 0;}
template <class T> inline bool chmin(T& a,T b){if(a>b){a=b;return 1;} return 0;}
struct io{io(){ios::sync_with_stdio(false);cin.tie(0);}};
const int INF = INT_MAX;
const ll LLINF = 1LL<<60;
const ll MOD = 1000000007;
const double EPS = 1e-9;

int MX=100+1e5;
vvi v(2*MX);
vi used(2*MX,false);
vi cnt(2,0);

void dfs(int i,int n) {
    if(used[i])return;
    used[i] = 1;
    if(i>MX)cnt[1]++;
    else cnt[0]++;
    for(auto j: v[i]) dfs(j,n);
}

int main() {
    int n;
    cin>>n;
    ll ans=0;
    rep(i,n){
        int x,y;
        cin>>x>>y;
        y+=MX;
        v[x].pb(y);
        v[y].pb(x);
    }
    rep(i,MX) {
        if(used[i])continue;
        cnt = vi(2,0);
        dfs(i,n);
        ans+=(ll)cnt[0]*cnt[1];
    }
    fin(ans-n);
}
