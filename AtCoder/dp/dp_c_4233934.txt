問題文の引用元：https://atcoder.jp/contests/dp/tasks/dp_c
C - VacationEditorial / $(function() {var ts = $('#task-statement span.lang');if (ts.children('span').size() <= 1) {$('#task-lang-btn').hide();ts.children('span').show();return;}var REMEMBER_LB = 5;var LS_KEY = 'task_lang';var taskLang = getLS(LS_KEY) || '';var changeTimes = 0;if (taskLang == 'ja' || taskLang == 'en') {changeTimes = REMEMBER_LB;} else {var changeTimes = parseInt(taskLang, 10);if (isNaN(changeTimes)) {changeTimes = 0;delLS(LS_KEY);}changeTimes++;taskLang = LANG;}ts.children('span.lang-' + taskLang).show();$('#task-lang-btn span').click(function() {var l = $(this).data('lang');ts.children('span').hide();ts.children('span.lang-' + l).show();if (changeTimes < REMEMBER_LB) setLS(LS_KEY, changeTimes);else setLS(LS_KEY, l);});});
Time Limit : 2 sec / Memory Limit : 1024 MB
配点 : 100 点
問題文 : 明日から太郎君の夏休みが始まります。太郎君は夏休みの計画を立てることにしました。夏休みは N 日からなります。各 i (1 \leq i \leq N) について、i 日目には太郎君は次の活動のうちひとつを選んで行います。A: 海で泳ぐ。 幸福度 a_i を得る。B: 山で虫取りをする。 幸福度 b_i を得る。C: 家で宿題をする。 幸福度 c_i を得る。太郎君は飽き性なので、2 日以上連続で同じ活動を行うことはできません。太郎君が得る幸福度の総和の最大値を求めてください。
制約入力はすべて整数である。1 \leq N \leq 10^51 \leq a_i, b_i, c_i \leq 10^4入力入力は以下の形式で標準入力から与えられる。Na_1 b_1 c_1a_2 b_2 c_2:a_N b_N c_N出力太郎君が得る幸福度の総和の最大値を出力せよ。
// ソースコードの引用元 : https://atcoder.jp/contests/dp/submissions/4233934
// 提出ID : 4233934
// 問題ID : dp_c
// コンテストID : dp
// ユーザID : xryuseix
// コード長 : 960
// 実行時間 : 26



#include<iostream>
#include<algorithm>
#include<cmath>
#include<cstdio>
#include<string>
#include<vector>
#include<set>
#include<cctype>
using namespace std;
template<class T> inline bool chmax(T& a,T b){if(a<b){a=b;return 1;}return 0;}
template<class T> inline bool chmin(T& a,T b){if(a>b){a=b;return 1;}return 0;}
const long long INF = 1LL << 60;

int main(void){
	ios::sync_with_stdio(false); cin.tie(0);
	
	int n;
	cin>>n;
	long long tone[n+3][3],i,j,k;
	for(i=0;i<n;i++){
		for(j=0;j<3;j++)cin>>tone[i][j];
	}
	
	long long dp[n+3][3];
	for(i=1;i<n+3;i++)dp[i][0]=dp[i][1]=dp[i][2]=0;
	dp[0][0]=dp[0][1]=dp[0][2]=0;
	for(i=0;i<n;i++){
		for(j=0;j<3;j++){
			for(k=0;k<3;k++){
				if(j==k)continue;
				chmax(dp[i+1][k],dp[i][j]+tone[i][k]);
			}
		}
		
	}
//	cout<<max(dp[n][0],max(dp[n][1],dp[n][2]))<<endl;
	long long res = 0;
    for (j = 0; j < 3; ++j) chmax(res, dp[n][j]);
    cout << res << endl;
	return 0;
}
