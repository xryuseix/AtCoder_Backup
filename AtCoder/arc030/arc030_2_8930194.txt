問題文の引用元：https://atcoder.jp/contests/arc030/tasks/arc030_2
B - ツリーグラフEditorial / $(function() {var ts = $('#task-statement span.lang');if (ts.children('span').size() <= 1) {$('#task-lang-btn').hide();ts.children('span').show();return;}var REMEMBER_LB = 5;var LS_KEY = 'task_lang';var taskLang = getLS(LS_KEY) || '';var changeTimes = 0;if (taskLang == 'ja' || taskLang == 'en') {changeTimes = REMEMBER_LB;} else {var changeTimes = parseInt(taskLang, 10);if (isNaN(changeTimes)) {changeTimes = 0;delLS(LS_KEY);}changeTimes++;taskLang = LANG;}ts.children('span.lang-' + taskLang).show();$('#task-lang-btn span').click(function() {var l = $(this).data('lang');ts.children('span').hide();ts.children('span.lang-' + l).show();if (changeTimes < REMEMBER_LB) setLS(LS_KEY, changeTimes);else setLS(LS_KEY, l);});});
Time Limit : 2 sec / Memory Limit : 256 MB
問題文 : n 頂点から成るツリーグラフがあります．このグラフはちょうど n-1 本の辺からなり，連結であることが保障されています．このような性質を持つグラフは必ず閉路を持ちません．各頂点番号は 1 から n の相異なる整数で表され，辺のコストは全て 1 です．このグラフのいくつかの頂点には宝石が高々 1 つあります．宝石のある頂点にいるときのみ，その宝石を回収することができます．あなたは，とある頂点 x から出発し，全ての宝石を回収し再び頂点 x に戻ってくるような経路のうち，最短のものを求めたいと思っています．そのような経路の長さを求めなさい．経路の長さは，経路に含まれる辺のコストの総和で定義されます．入力入力は以下の形式で標準入力から与えられる．n xh_1 h_2 … h_na_1 b_1a_2 b_2:a_{n-1} b_{n-1}1 行目には，ツリーグラフの頂点の数を表す整数 n (1 ≦ n ≦ 100) と出発する頂点番号 x (1≦ x ≦n) が与えられる．2 行目には，頂点 i に存在する宝石の数を表す整数 h_i (0≦h_i≦1) が n 個，スペース区切りで与えられる．3 行から n-1 行，ツリーグラフの i 番目の辺が繋いでいる頂点の番号 a_i と b_i (1≦a_i,b_i≦n) が与えられる．与えられるグラフに自己辺や多重辺は存在せず，連結であることが保障されている．出力1 行目に，求める最短経路長を出力せよ．改行を忘れないこと．
// ソースコードの引用元 : https://atcoder.jp/contests/arc030/submissions/8930194
// 提出ID : 8930194
// 問題ID : arc030_2
// コンテストID : arc030
// ユーザID : xryuseix
// コード長 : 2254
// 実行時間 : 1



#include <iostream>
#include <cstdio>
#include <algorithm>
#include <cmath>
#include <vector>
#include <list>
#include <set>
#include <map>
#include <queue>
#include <stack>
#include <cctype>
#include <climits>
#include <string>
#include <bitset>
#include <cfloat>
#include <unordered_set>
using namespace std;
typedef long double ld;
typedef long long int ll;
typedef unsigned long long int ull;
typedef vector<int> vi;
typedef vector<char> vc;
typedef vector<bool> vb;
typedef vector<double> vd;
typedef vector<string> vs;
typedef vector<ll> vll;
typedef vector<pair<int,int> > vpii;
typedef vector<vector<int> > vvi;
typedef vector<vector<char> > vvc;
typedef vector<vector<string> > vvs;
typedef vector<vector<ll> > vvll;
#define rep(i,n) for(int i = 0; i < (n); ++i)
#define rrep(i,n) for(int i = 1; i <= (n); ++i)
#define drep(i,n) for(int i = (n) - 1; i >= 0; --i)
#define fin(ans) cout<<(ans)<<endl
#define STI(s) atoi(s.c_str())
#define mp(p,q) make_pair(p, q)
#define pb(n) push_back(n)
#define all(a) a.begin(), a.end()
#define rall(a) a.rbegin(), a.rend()
#define Sort(a) sort(a.begin(), a.end())
#define Rort(a) sort(a.rbegin(), a.rend())
#define MATHPI acos(-1)
#define itn int
template <class T> inline bool chmax(T& a,T b){if(a<b){a=b;return 1;}return 0;}
template <class T> inline bool chmin(T& a,T b){if(a>b){a=b;return 1;}return 0;}
struct io{io(){ios::sync_with_stdio(false);cin.tie(0);};};
const ll MOD = 1000000007;
const double EPS = 1e-9;
const int INF = INT_MAX;
const ll LLINF = 1LL<<62;

int X;

int func(int x, vi &used, vi &h, vvi &v){
    int res=0;
    for(int i=0;i<v[x].size();i++) {
        if(!used[v[x][i]]) {
            used[v[x][i]] = 1;
            res+=func(v[x][i],used,h,v);
        }
    }
    if(X!=x&&(res>0||h[x]==1))res+=2;
    // cout<<"x"<<x<<endl;
    // cout<<"res"<<res<<endl;
    return res;
}



int main(void){

    int n,x;
    cin>>n>>x;
    x--;
    X=x;
    vi h(n);rep(i,n)cin>>h[i];
    vvi v(n);

    rep(i,n-1){
        int a,b;
        cin>>a>>b;
        a--;b--;
        v[a].push_back(b);
        v[b].push_back(a);
    }
    vi used(n,0);
    used[x]=1;
    h[x]=0;
    fin(func(x,used,h,v));

}
