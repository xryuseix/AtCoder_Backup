問題文の引用元：https://atcoder.jp/contests/joi2021yo2/tasks/joi2021_yo2_c
C - イベント巡り (Event Hopping)Editorial / $(function() {var ts = $('#task-statement span.lang');if (ts.children('span').size() <= 1) {$('#task-lang-btn').hide();ts.children('span').show();return;}var REMEMBER_LB = 5;var LS_KEY = 'task_lang';var taskLang = getLS(LS_KEY) || '';var changeTimes = 0;if (taskLang == 'ja' || taskLang == 'en') {changeTimes = REMEMBER_LB;} else {var changeTimes = parseInt(taskLang, 10);if (isNaN(changeTimes)) {changeTimes = 0;delLS(LS_KEY);}changeTimes++;taskLang = LANG;}ts.children('span.lang-' + taskLang).show();$('#task-lang-btn span').click(function() {var l = $(this).data('lang');ts.children('span').hide();ts.children('span.lang-' + l).show();if (changeTimes < REMEMBER_LB) setLS(LS_KEY, changeTimes);else setLS(LS_KEY, l);});});
Time Limit : 1.5 sec / Memory Limit : 1024 MB
配点： 100 点
問題文 : IOI 国には 2 個の町があり，それぞれ 1, 2 と番号がついている．これらの町では合計 N 個のイベントが行われる．これらのイベントには 1 から N までの番号がついている．イベント i (1 \leqq i \leqq N) は町 P_i で開催され，開催時刻は時刻 S_i + 0.1 から時刻 S_i + 0.9 までである．ここで S_i は整数である．JOI 君がイベント i に参加するためには，時刻 S_i + 0.1 から時刻 S_i + 0.9 までの間，ずっと町 P_i にいる必要がある．JOI 君はイベント巡りを行うことにした．イベント巡りではいくつかのイベントに参加し，必要ならば町と町の間を移動することもできる．JOI 君は時刻 0 からイベント巡りを開始する．このとき，好きな町から始めることができる．JOI 君は町 1 と町 2 の間を双方向に移動することができる．2 つの町の間を移動するのにかかる時間は，JOI 君がその移動を開始する時刻までに参加したイベントの数を j として，D + K \times j となる．イベントと町の間の移動に関する情報が与えられるので，JOI 君が参加できるイベントの数の最大値を求めるプログラムを作成せよ．
制約1 \leqq N \leqq 200\,000．1 \leqq D \leqq 10^{12}．0 \leqq K \leqq 10^{12}．1 \leqq P_i \leqq 2 (1 \leqq i \leqq N)．1 \leqq S_i \leqq 10^{12} (1 \leqq i \leqq N)．S_i \neq S_j (1 \leqq i < j \leqq N)．入力される値はすべて整数である．小課題(8 点) K = 0，N \leqq 20．(11 点) K = 0，N \leqq 4\,000．(24 点) K = 0．(12 点) N \leqq 160．(23 点) N \leqq 4\,000．(22 点) 追加の
制約はない．入力入力は以下の形式で標準入力から与えられる．N D KP_1 S_1P_2 S_2\vdotsP_N S_N出力標準出力に，JOI 君が参加することのできるイベントの数の最大値を 1 行で出力せよ．



#include <algorithm>
#include <bitset>
#include <cassert>
#include <cctype>
#include <cfloat>
#include <climits>
#include <cmath>
#include <cstdio>
#include <deque>
#include <iomanip>
#include <iostream>
#include <list>
#include <map>
#include <queue>
#include <random>
#include <set>
#include <stack>
#include <string>
#include <unordered_set>
#include <vector>
using namespace std;
typedef long double ld;
typedef long long int ll;
typedef unsigned long long int ull;
typedef vector<int> vi;
typedef vector<char> vc;
typedef vector<bool> vb;
typedef vector<double> vd;
typedef vector<string> vs;
typedef vector<ll> vll;
typedef vector<pair<int, int>> vpii;
typedef vector<pair<ll, ll>> vpll;
typedef vector<vi> vvi;
typedef vector<vvi> vvvi;
typedef vector<vc> vvc;
typedef vector<vs> vvs;
typedef vector<vll> vvll;
typedef map<int, int> mii;
typedef set<int> si;
#define rep(i, n) for (ll i = 0; i < (n); ++i)
#define rrep(i, n) for (int i = 1; i <= (n); ++i)
#define irep(it, stl) for (auto it = stl.begin(); it != stl.end(); it++)
#define drep(i, n) for (int i = (n)-1; i >= 0; --i)
#define fin(ans) cout << (ans) << '\n'
#define STLL(s) strtoll(s.c_str(), NULL, 10)
#define mp(p, q) make_pair(p, q)
#define pb(n) push_back(n)
#define all(a) a.begin(), a.end()
#define Sort(a) sort(a.begin(), a.end())
#define Rort(a) sort(a.rbegin(), a.rend())
#define MATHPI acos(-1)
#define fi first
#define se second
// #include <atcoder/all>
// using namespace atcoder;
constexpr int dx[8] = {1, 0, -1, 0, 1, -1, -1, 1};
constexpr int dy[8] = {0, 1, 0, -1, 1, 1, -1, -1};
template <class T, class U>
inline bool chmax(T& a, U b) {
    if (a < b) {
        a = b;
        return 1;
    }
    return 0;
}
template <class T, class U>
inline bool chmin(T& a, U b) {
    if (a > b) {
        a = b;
        return 1;
    }
    return 0;
}
template <class T>
inline void dump(T& v) {
    irep(i, v) { cout << (*i) << ((i == --v.end()) ? '\n' : ' '); }
}
template <class T, class U>
inline void dump(map<T, U>& v) {
    irep(i, v) { cout << i->first << " " << i->second << '\n'; }
}
template <class T, class U>
inline void dump(pair<T, U>& p) {
    cout << p.first << " " << p.second << '\n';
}
inline void yn(const bool b) { b ? fin("yes") : fin("no"); }
inline void Yn(const bool b) { b ? fin("Yes") : fin("No"); }
inline void YN(const bool b) { b ? fin("YES") : fin("NO"); }
template <typename Head, typename Value>
auto vectors(const Head& head, const Value& v) {
    return vector<Value>(head, v);
}
template <typename Head, typename... Tail>
auto vectors(Head x, Tail... tail) {
    auto inner = vectors(tail...);
    return vector<decltype(inner)>(x, inner);
}
const int INF = INT_MAX;
constexpr ll LLINF = 1LL << 61;
constexpr ll MOD = 1000000007;  // 998244353;
constexpr ld EPS = 1e-11;

/* --------------------   ここまでテンプレ   -------------------- */

int main() {
    ll n, d, k;
    cin >> n >> d >> k;
    vll p(n), s(n);
    vpll v(n);
    rep(i, n) {
        cin >> v[i].se >> v[i].fi;
        v[i].se--;
    }
    Sort(v);
    rep(i, n) {
        p[i] = v[i].se;
        s[i] = v[i].fi;
    }
    vvll dp(2, vll(n + 1, LLINF));
    dp[0][0] = 0;
    dp[1][0] = 0;
    int ptr[2] = {1, 1};
    rep(i, n) {
        // 左からi個目のイベントについて
        int j = i + 1;
        // 会場はそのまま
        if (dp[p[i]][ptr[p[i]] - 1] <= s[i]) {
            chmin(dp[p[i]][ptr[p[i]]], s[i] + 1);
        }
        // 会場がかわる
        {
            int ok = ptr[p[i]];
            int ng = j + 1;
            while (abs(ok - ng) > 1) {
                int mid = (ok + ng) / 2;
                if (dp[1 - p[i]][mid - 1] + d + k * (mid - 1) <= s[i])
                    ok = mid;
                else
                    ng = mid;
            }
            chmin(dp[p[i]][ok], s[i] + 1);
            ptr[p[i]] = max(ptr[p[i]] + 1, ok + 1);
        }
        // cout << ptr[0] << " " << ptr[1] << endl;
    }
    int ans = 0;
    rep(i, n + 1) {
        rep(j, 2) {
            if (dp[j][i] != LLINF) chmax(ans, i);
        }
    }
    fin(ans);
    // dump(dp[0]);
    // dump(dp[1]);
}
