問題文の引用元：https://atcoder.jp/contests/agc003/tasks/agc003_a
A - Wanna go back homeEditorial / $(function() {var ts = $('#task-statement span.lang');if (ts.children('span').size() <= 1) {$('#task-lang-btn').hide();ts.children('span').show();return;}var REMEMBER_LB = 5;var LS_KEY = 'task_lang';var taskLang = getLS(LS_KEY) || '';var changeTimes = 0;if (taskLang == 'ja' || taskLang == 'en') {changeTimes = REMEMBER_LB;} else {var changeTimes = parseInt(taskLang, 10);if (isNaN(changeTimes)) {changeTimes = 0;delLS(LS_KEY);}changeTimes++;taskLang = LANG;}ts.children('span.lang-' + taskLang).show();$('#task-lang-btn span').click(function() {var l = $(this).data('lang');ts.children('span').hide();ts.children('span.lang-' + l).show();if (changeTimes < REMEMBER_LB) setLS(LS_KEY, changeTimes);else setLS(LS_KEY, l);});});
Time Limit : 2 sec / Memory Limit : 256 MB
配点 : 200 点
問題文 : 高橋君は無限に広い 2 次元平面上に住んでいて、N 日間の旅行をします。高橋君の旅程は長さ N の文字列 S であり、はじめは家にいます。i(1 ≦ i ≦ N) 日目には、S の i 文字目が N なら北にS の i 文字目が W なら西にS の i 文字目が S なら南にS の i 文字目が E なら東に正の距離だけ移動します。高橋君は、各日の移動距離は決めていません。各日の移動距離をうまく決めることで、高橋君が N 日間の旅程をすべて消化したときに家にいるようにできるかどうか判定してください。
制約1 ≦ | S | ≦ 1000S は文字 N, W, S, E のみからなる。入力入力は以下の形式で標準入力から与えられる。S出力高橋君が旅程をすべて消化したときに家にいるようにできる場合は Yes, そうでない場合は No を出力せよ。
// ソースコードの引用元 : https://atcoder.jp/contests/agc003/submissions/4319684
// 提出ID : 4319684
// 問題ID : agc003_a
// コンテストID : agc003
// ユーザID : xryuseix
// コード長 : 895
// 実行時間 : 1



#include<iostream>
#include<algorithm>
#include<cmath>
#include<cstdio>
#include<string>
#include<vector>
#include<list>
#include<set>
#include<cctype>
#define ld long double
#define ll long long int
#define ull unsigned long long int
using namespace std;
template<class T> inline bool chmax(T& a,T b){if(a<b){a=b;return 1;}return 0;}
template<class T> inline bool chmin(T& a,T b){if(a>b){a=b;return 1;}return 0;}
const long long INF=1LL<<60;
//set<int>::iterator it;

int main(void){
	ios::sync_with_stdio(false); cin.tie(0);
	
	bool a[4]={false};
	string s;
	cin>>s;
	int i;
	for(i=0;i<s.length();i++){
		if(s[i]=='S')a[0]=true;
		else if(s[i]=='E')a[1]=true;
		else if(s[i]=='N')a[2]=true;
		else if(s[i]=='W')a[3]=true;
	}
//	cout<<a[0]<<a[2]<<a[1]<<a[3]<<endl;
	if(a[0]==a[2]&&a[1]==a[3])cout<<"Yes"<<endl;
	else cout<<"No"<<endl;
	
	
	
	
	return 0;
}
