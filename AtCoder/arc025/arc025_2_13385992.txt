問題文の引用元：https://atcoder.jp/contests/arc025/tasks/arc025_2
B - チョコレート / $(function() {var ts = $('#task-statement span.lang');if (ts.children('span').size() <= 1) {$('#task-lang-btn').hide();ts.children('span').show();return;}var REMEMBER_LB = 5;var LS_KEY = 'task_lang';var taskLang = getLS(LS_KEY) || '';var changeTimes = 0;if (taskLang == 'ja' || taskLang == 'en') {changeTimes = REMEMBER_LB;} else {var changeTimes = parseInt(taskLang, 10);if (isNaN(changeTimes)) {changeTimes = 0;delLS(LS_KEY);}changeTimes++;taskLang = LANG;}ts.children('span.lang-' + taskLang).show();$('#task-lang-btn span').click(function() {var l = $(this).data('lang');ts.children('span').hide();ts.children('span.lang-' + l).show();if (changeTimes < REMEMBER_LB) setLS(LS_KEY, changeTimes);else setLS(LS_KEY, l);});});
Time Limit : 2 sec / Memory Limit : 256 MB
問題文 : 縦 H マス、横 W マスのチョコレートがある。各マスはブラックチョコかホワイトチョコである。ブラックチョコ同士、ホワイトチョコ同士は辺を共有しない（つまり、チョコレートは市松模様を形成している）。各マスごとにチョコレートの濃度が定まっている。チョコレートの例を以下に表す（数字は濃度を表す）。            妹はこのチョコレートから、ある長方形領域を切り出して溶かし、チョコクリームを作成することにした。妹はチョコレートの味にこだわりを持っており、チョコクリームに使用されたブラックチョコとホワイトチョコの濃度の合計値（ただし、それぞれ使用されていない場合は濃度の合計値を 0 として扱うものとする）が等しくなければ気が済まない。妹は条件を満たす切り出し方のうち、使用するチョコレートのマス数が最大でいくつになるのかが知りたい。入力入力は以下の形式で標準入力から与えられる。H WC_{1,1} C_{1,2} .. C_{1,W}C_{2,1} C_{2,2} .. C_{2,W}:C_{H,1} C_{H,2} .. C_{H,W}1 行目には、チョコレートの縦のマス数 H (1 ≦ H ≦ 100) および横のマス数 W (1 ≦ W ≦ 100) が空白区切りで与えられる。2 行目から H 行では、濃度についての情報が与えられる。各行には W 個の非負整数が空白区切りで与えられる。i 行目の左から j 個目の整数 C_{i,j} (0 ≦ C_{i,j} ≦ 99) は左上隅を基準として、上から i 番目、左から j 番目のマスの濃度を表す。出力条件を満たす切り出し方が存在するなら、その中で使用するマス数の最大値を、存在しないなら 0 を出力せよ。出力の末尾にも改行を入れること。



#include <iostream>
#include <cstdio>
#include <algorithm>
#include <cmath>
#include <vector>
#include <list>
#include <set>
#include <map>
#include <queue>
#include <stack>
#include <cctype>
#include <cassert>
#include <climits>
#include <string>
#include <bitset>
#include <cfloat>
#include <random>
#include <iomanip>
#include <unordered_set>
using namespace std;
typedef long double ld;
typedef long long int ll;
typedef unsigned long long int ull;
typedef vector<int> vi;
typedef vector<char> vc;
typedef vector<bool> vb;
typedef vector<double> vd;
typedef vector<string> vs;
typedef vector<ll> vll;
typedef vector<pair<int,int> > vpii;
typedef vector<pair<ll,ll> > vpll;
typedef vector<vi> vvi;
typedef vector<vvi> vvvi;
typedef vector<vc> vvc;
typedef vector<vs> vvs;
typedef vector<vll> vvll;
typedef map<int,int> mii;
typedef set<int> si;
#define rep(i,n) for(int i = 0; i < (n); ++i)
#define rrep(i,n) for(int i = 1; i <= (n); ++i)
#define arep(i,v) for(auto i : v)
#define irep(it, stl) for(auto it = stl.begin(); it != stl.end(); it++)
#define drep(i,n) for(int i = (n) - 1; i >= 0; --i)
#define fin(ans) cout << (ans) << '\n'
#define STLL(s) strtoll(s.c_str(), NULL, 10)
#define mp(p,q) make_pair(p, q)
#define pb(n) push_back(n)
#define all(a) a.begin(), a.end()
#define rall(a) a.rbegin(), a.rend()
#define Sort(a) sort(a.begin(), a.end())
#define Rort(a) sort(a.rbegin(), a.rend())
#define MATHPI acos(-1)
#define fi first
#define se second
constexpr int dx[8] = {1, 0, -1, 0, 1, -1, -1, 1};
constexpr int dy[8] = {0, 1, 0, -1, 1, 1, -1, -1};
template <class T> inline bool chmax(T& a,T b){if(a<b){a=b;return 1;} return 0;}
template <class T> inline bool chmin(T& a,T b){if(a>b){a=b;return 1;} return 0;}
template <class T> inline void dump(T &v){irep(i, v){cout<<*i<<((i==--v.end())?'\n':' ');}}
inline string getline(){string s; getline(cin,s); return s;}
inline void yn(const bool b){b?fin("yes"):fin("no");}
inline void Yn(const bool b){b?fin("Yes"):fin("No");}
inline void YN(const bool b){b?fin("YES"):fin("NO");}
struct io{io(){ios::sync_with_stdio(false);cin.tie(0);}};
const int INF = INT_MAX;
constexpr ll LLINF = 1LL<<60;
constexpr ll MOD = 1000000007;
constexpr double EPS = 1e-9;




int main() {
    int h, w, ans = 0;
    cin >> h >> w;
    vvi v(h, vi(w));
    vvi csum(h + 1, vi(w + 1));
    rep(i, h) rep(j, w) cin >> v[i][j];
    rep(i, h) {
        rep(j, w) {
            csum[i+1][j+1] = csum[i][j+1] \
                            + csum[i+1][j] \
                            + v[i][j] * (((i + j) % 2 == 0) ? 1 : -1) \
                            - csum[i][j];
        }
    }

    for(int i = 1; i <= h; i++) {
        for(int j = 1; j <= w; j++) {
            for(int k = i; k <= h; k++) {
                for(int l = j; l <= w; l++) {
                    int sum = csum[k][l] \
                            - csum[k][j - 1] \
                            - csum[i - 1][l] \
                            + csum[i - 1][j - 1];
                    if(!sum) {
                        chmax(ans, (k - i + 1) * (l - j + 1));
                    }
                }
            }
        }
    }
    fin(ans);
}






