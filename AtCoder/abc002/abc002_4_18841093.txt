問題文の引用元：https://atcoder.jp/contests/abc002/tasks/abc002_4
D - 派閥Editorial / $(function() {var ts = $('#task-statement span.lang');if (ts.children('span').size() <= 1) {$('#task-lang-btn').hide();ts.children('span').show();return;}var REMEMBER_LB = 5;var LS_KEY = 'task_lang';var taskLang = getLS(LS_KEY) || '';var changeTimes = 0;if (taskLang == 'ja' || taskLang == 'en') {changeTimes = REMEMBER_LB;} else {var changeTimes = parseInt(taskLang, 10);if (isNaN(changeTimes)) {changeTimes = 0;delLS(LS_KEY);}changeTimes++;taskLang = LANG;}ts.children('span.lang-' + taskLang).show();$('#task-lang-btn span').click(function() {var l = $(this).data('lang');ts.children('span').hide();ts.children('span.lang-' + l).show();if (changeTimes < REMEMBER_LB) setLS(LS_KEY, changeTimes);else setLS(LS_KEY, l);});});
Time Limit : 2 sec / Memory Limit : 64 MB
問題文 : 神からの財産と、母音を取り戻した高橋くんは、AtCoder国の腐敗した政治を正すため、国会議員となろうと決めました。もともと人心掌握術とスピーチに定評があった高橋くんは、何の苦労をすることもなく当選しました。しかし、議員になってからが本番です。国を正すためには、首相に任命される必要があります。AtCoder国には高橋くんを除いて N 人の国会議員と、M 個の人間関係 (x,\ y) が存在します。人間関係 (x,\ y) とは、議員 x と議員 y が知り合いであることを意味します。高橋くんは N 人の議員から何人かを選んで派閥を作ろうと企んでいます。派閥に含まれるすべての議員は互いに知り合いでなければなりません。高橋くんが作成することができる最大の派閥に属する議員数を求めるプログラムを書いてください。入力入力は以下の形式で標準入力から与えられる。N Mx_1 y_1x_2 y_2:x_M y_M1 行目には、高橋くん以外の国会議員の数 N\ (1≦N≦12) と、人間関係の数 M (0≦M≦N(N-1)/2) が半角空白区切りで与えられる。2 行目から M+1 行目までの M 行で、人間関係が与えられる。各議員は 1 から N までの整数で番号がつけられている。2 行目を基準とした第 i\ (1≦i≦M) 行において、議員 x_i と議員 y_i は知り合いであることを意味する。x_i と y_i はともに整数で、 1 ≦ x_i < y_i ≦ N を満たす。i≠j のとき、(x_i,\ y_i)≠(x_j,\ y_j) であることが保証されている。出力高橋くんが作成することができる最大の派閥に属する議員数を 1 行で出力してください。また、出力の末尾には改行を入れること。



#include <algorithm>
#include <bitset>
#include <cassert>
#include <cctype>
#include <cfloat>
#include <climits>
#include <cmath>
#include <cstdio>
#include <deque>
#include <iomanip>
#include <iostream>
#include <list>
#include <map>
#include <queue>
#include <random>
#include <set>
#include <stack>
#include <string>
#include <unordered_set>
#include <vector>
using namespace std;
typedef long double ld;
typedef long long int ll;
typedef unsigned long long int ull;
typedef vector<int> vi;
typedef vector<char> vc;
typedef vector<bool> vb;
typedef vector<double> vd;
typedef vector<string> vs;
typedef vector<ll> vll;
typedef vector<pair<int, int>> vpii;
typedef vector<pair<ll, ll>> vpll;
typedef vector<vi> vvi;
typedef vector<vvi> vvvi;
typedef vector<vc> vvc;
typedef vector<vs> vvs;
typedef vector<vll> vvll;
typedef map<int, int> mii;
typedef set<int> si;
#define rep(i, n) for (ll i = 0; i < (n); ++i)
#define rrep(i, n) for (int i = 1; i <= (n); ++i)
#define irep(it, stl) for (auto it = stl.begin(); it != stl.end(); it++)
#define drep(i, n) for (int i = (n)-1; i >= 0; --i)
#define fin(ans) cout << (ans) << '\n'
#define STLL(s) strtoll(s.c_str(), NULL, 10)
#define mp(p, q) make_pair(p, q)
#define pb(n) push_back(n)
#define all(a) a.begin(), a.end()
#define Sort(a) sort(a.begin(), a.end())
#define Rort(a) sort(a.rbegin(), a.rend())
#define MATHPI acos(-1)
#define fi first
#define se second
// #include <atcoder/all>
// using namespace atcoder;
constexpr int dx[8] = {1, 0, -1, 0, 1, -1, -1, 1};
constexpr int dy[8] = {0, 1, 0, -1, 1, 1, -1, -1};
template <class T, class U>
inline bool chmax(T& a, U b) {
    if (a < b) {
        a = b;
        return 1;
    }
    return 0;
}
template <class T, class U>
inline bool chmin(T& a, U b) {
    if (a > b) {
        a = b;
        return 1;
    }
    return 0;
}
template <class T>
inline void dump(T& v) {
    irep(i, v) { cout << (*i) << ((i == --v.end()) ? '\n' : ' '); }
}
template <class T, class U>
inline void dump(map<T, U>& v) {
    irep(i, v) { cout << i->first << " " << i->second << '\n'; }
}
template <class T, class U>
inline void dump(pair<T, U>& p) {
    cout << p.first << " " << p.second << '\n';
}
inline void yn(const bool b) { b ? fin("yes") : fin("no"); }
inline void Yn(const bool b) { b ? fin("Yes") : fin("No"); }
inline void YN(const bool b) { b ? fin("YES") : fin("NO"); }
template <typename Head, typename Value>
auto vectors(const Head& head, const Value& v) {
    return vector<Value>(head, v);
}
template <typename Head, typename... Tail>
auto vectors(Head x, Tail... tail) {
    auto inner = vectors(tail...);
    return vector<decltype(inner)>(x, inner);
}
const int INF = INT_MAX;
constexpr ll LLINF = 1LL << 61;
constexpr ll MOD = 1000000007;  // 998244353;
constexpr ld EPS = 1e-11;

/* --------------------   ここまでテンプレ   -------------------- */

int main() {
    int n, m;
    cin >> n >> m;
    set<pair<int, int>> s;
    rep(i, m) {
        int a, b;
        cin >> a >> b;
        a--;
        b--;
        s.insert(mp(a, b));
        s.insert(mp(b, a));
    }
    int ans = 0;
    rep(i, (1LL << n)) {
        vi v;
        rep(j, n) {
            if ((i >> j) & 1) v.pb(j);
        }
        int ch = 1;
        rep(x, v.size()) {
            rep(y, v.size()) {
                if (x == y) continue;
                ch &= s.count(mp(v[x], v[y]));
            }
        }
        if (ch) chmax(ans, v.size());
    }
    fin(ans);
}
