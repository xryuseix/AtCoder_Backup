問題文の引用元：https://atcoder.jp/contests/abc124/tasks/abc124_d
D - HandstandEditorial / $(function() {var ts = $('#task-statement span.lang');if (ts.children('span').size() <= 1) {$('#task-lang-btn').hide();ts.children('span').show();return;}var REMEMBER_LB = 5;var LS_KEY = 'task_lang';var taskLang = getLS(LS_KEY) || '';var changeTimes = 0;if (taskLang == 'ja' || taskLang == 'en') {changeTimes = REMEMBER_LB;} else {var changeTimes = parseInt(taskLang, 10);if (isNaN(changeTimes)) {changeTimes = 0;delLS(LS_KEY);}changeTimes++;taskLang = LANG;}ts.children('span.lang-' + taskLang).show();$('#task-lang-btn span').click(function() {var l = $(this).data('lang');ts.children('span').hide();ts.children('span.lang-' + l).show();if (changeTimes < REMEMBER_LB) setLS(LS_KEY, changeTimes);else setLS(LS_KEY, l);});});
Time Limit : 2 sec / Memory Limit : 1024 MB
配点 : 400 点
問題文 : N 人の人が左右一列に並んでいます。0, 1 からなる長さ N の文字列 S と正整数 K が与えられます。左から i 番目の人は、S の i 文字目が 0 のとき直立し、1 のとき逆立ちしています。あなたは K 回まで以下の指示を行います。一度も行わなくても構いません。指示: 1 \leq l \leq r \leq N を満たす整数 l, r を選ぶ。左から l, l+1, ..., r 番目の人の状態を反転する。すなわち、i = l, l+1, ..., r について、左から i 番目の人は直立していれば逆立ちし、逆立ちしていれば直立する。K 回までの指示で、逆立ちした人を連続で最大何人並ばせることができるか求めてください。
制約N は 1 \leq N \leq 10^5 を満たす整数である。K は 1 \leq K \leq 10^5 を満たす整数である。文字列 S の長さは N である。文字列 S の各文字は 0 または 1 である。入力入力は以下の形式で標準入力から与えられる。N KS出力K 回までの指示で、逆立ちした人を連続で最大何人並ばせることができるか出力せよ。
// ソースコードの引用元 : https://atcoder.jp/contests/abc124/submissions/4972046
// 提出ID : 4972046
// 問題ID : abc124_d
// コンテストID : abc124
// ユーザID : xryuseix
// コード長 : 1641
// 実行時間 : 2



#include<iostream>
#include<cstdio>
#include<algorithm>
#include<cmath>
#include<string>
#include<vector>
#include<list>
#include<set>
#include<map>
#include<queue>
#include<stack>
#include<cctype>
#include<climits>
#include<bitset>
#define ld long double
#define ll long long int
#define ull unsigned long long int
#define rep(i,n) for(i=0;i<n;i++)
#define fin(ans) cout<<(ans)<<endl
#define INF INT_MAX
using namespace std;
template<class T> inline bool chmax(T& a,T b){if(a<b){a=b;return 1;}return 0;}
template<class T> inline bool chmin(T& a,T b){if(a>b){a=b;return 1;}return 0;}
const long long LLINF=1LL<<60;
//set<int>::iterator it;



int main(void){ios::sync_with_stdio(false);cin.tie(0);
//////////////////////////////////////////////////////
	
	
	int i,j,n,k;
	string s;
	cin>>n>>k>>s;
	vector<int> v;
	
	
	int ans=0,add=2*k+1,left=0,right=0;
	int tmp=0;
	int cnt=0;
	int now=1;
	for (i = 0; i < n; i++)
	{
		if (s[i] == (char)('0' + now)) cnt++;
		else {
			v.push_back(cnt);
			now = 1 - now; //0と1を切り替える時の計算 now ^= 1;
			cnt = 1; //新しいのをカウントし始める
		}
	}
	if (cnt != 0) v.push_back(cnt);
	if (v.size() % 2 == 0) v.push_back(0);
	
//	rep(i,v.size())cout<<v[i];
	for(i=0;i<v.size();i+=2){
		int nextleft=i;
		int nextright=min(i+add,(int)v.size());
		
		while(nextleft>left){
			tmp-=v[left];
			left++;
		}
		while(nextright>right){
			tmp+=v[right];
			right++;
		}
		ans=max(tmp,ans);
//		cout<<tmp<<endl;
	}
	fin(ans);
	
	
	
	
	
	
//////////////////////////////////////////////////////
	return 0;
}
