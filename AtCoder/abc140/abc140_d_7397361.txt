問題文の引用元：https://atcoder.jp/contests/abc140/tasks/abc140_d
D - Face Produces UnhappinessEditorial / $(function() {var ts = $('#task-statement span.lang');if (ts.children('span').size() <= 1) {$('#task-lang-btn').hide();ts.children('span').show();return;}var REMEMBER_LB = 5;var LS_KEY = 'task_lang';var taskLang = getLS(LS_KEY) || '';var changeTimes = 0;if (taskLang == 'ja' || taskLang == 'en') {changeTimes = REMEMBER_LB;} else {var changeTimes = parseInt(taskLang, 10);if (isNaN(changeTimes)) {changeTimes = 0;delLS(LS_KEY);}changeTimes++;taskLang = LANG;}ts.children('span.lang-' + taskLang).show();$('#task-lang-btn span').click(function() {var l = $(this).data('lang');ts.children('span').hide();ts.children('span.lang-' + l).show();if (changeTimes < REMEMBER_LB) setLS(LS_KEY, changeTimes);else setLS(LS_KEY, l);});});
Time Limit : 2 sec / Memory Limit : 1024 MB
配点 : 400 点
問題文 : 東西一列に N 人の人が並んでいます。各人の状態を表す長さ N の文字列 S が与えられます。西から i 番目の人は、文字列 S の i 文字目が L ならば西を、R ならば東を向いています。どの人も、目の前の人が自分と同じ方向を向いていれば幸福です。ただし、目の前に人が居ない場合、幸福ではありません。あなたは、以下の操作を 0 回以上 K 回以下の好きな回数だけ行います。操作: 1 \leq l \leq r \leq N を満たす整数 l, r を選ぶ。西から l, l+1, ..., r 番目の人の列を 180 度回転する。すなわち、i = 0, 1, ..., r-l について、西から l + i 番目の人は操作後には西から r - i 番目に移動し、元々西を向いていれば東を、東を向いていれば西を向く。幸福である人は最大で何人にできるでしょうか。
制約N は 1 \leq N \leq 10^5 を満たす整数である。K は 1 \leq K \leq 10^5 を満たす整数である。|S| = NS の各文字は L または R である。入力入力は以下の形式で標準入力から与えられる。N KS出力K 回以下の操作後に幸福である人数の最大値を出力せよ。
// ソースコードの引用元 : https://atcoder.jp/contests/abc140/submissions/7397361
// 提出ID : 7397361
// 問題ID : abc140_d
// コンテストID : abc140
// ユーザID : xryuseix
// コード長 : 2135
// 実行時間 : 2



#include <iostream>
#include <cstdio>
#include <algorithm>
#include <cmath>
#include <vector>
#include <list>
#include <set>
#include <map>
#include <queue>
#include <stack>
#include <cctype>
#include <climits>
#include <string>
#include <bitset>
#include <cfloat>
using namespace std;
typedef long double ld;
typedef long long int ll;
typedef unsigned long long int ull;
typedef vector<int> vi;
typedef vector<char> vc;
typedef vector<double> vd;
typedef vector<string> vs;
typedef vector<ll> vll;
typedef vector<pair<int,int> > vpii;
typedef vector<vector<int> > vvi;
typedef vector<vector<char> > vvc;
typedef vector<vector<string> > vvs;
typedef vector<vector<ll> > vvll;
#define rep(i,n) for(int i = 0; i < (n); ++i)
#define rrep(i,n) for(int i = 1; i <= (n); ++i)
#define drep(i,n) for(int i = (n)-1; i >= 0; --i)
#define fin(ans) cout<<(ans)<<endl
#define STI(s) atoi(s.c_str())
#define mp(p,q) make_pair(p,q)
#define pb(n) push_back(n)
#define all(a) a.begin(),a.end()
#define rall(a) a.rbegin(),a.rend()
#define Sort(a) sort(a.begin(),a.end())
#define Rort(a) sort(a.rbegin(),a.rend())
template<class T> inline bool chmax(T& a,T b){if(a<b){a=b;return 1;}return 0;}
template<class T> inline bool chmin(T& a,T b){if(a>b){a=b;return 1;}return 0;}
const int P = 1000000007;
const int INF = INT_MAX;
const ll LLINF = 1LL<<60;

int count(string& s){
    int res=0;
    for(int i=0;i<s.length()-1;i++){
        if(s[i]==s[i+1])res++;
    }
    return res;
}

int main(void){ios::sync_with_stdio(false);cin.tie(0);
//////////////////////////////////////////////////////

    
    int n,k;
    cin>>n>>k;
    string s,t;
    cin>>s;
    t=s;
    //全部左のに揃える
    int kn=k;
    for(int i=1;i<n;i++){
        if(kn>0&&s[i]!=s[0]){
            kn--;
            int j=0;
            while(i+j<n&&s[i+j]!=s[0]){
                s[i+j]=s[0];
                j++;
            }
            i=max(i+j-1,i);
        }
        if(kn==0)break;
    }
    fin(count(s));
    // fin(s);

//////////////////////////////////////////////////////
return 0;}
