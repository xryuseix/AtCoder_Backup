問題文の引用元：https://atcoder.jp/contests/abc005/tasks/abc005_3
C - おいしいたこ焼きの売り方Editorial / $(function() {var ts = $('#task-statement span.lang');if (ts.children('span').size() <= 1) {$('#task-lang-btn').hide();ts.children('span').show();return;}var REMEMBER_LB = 5;var LS_KEY = 'task_lang';var taskLang = getLS(LS_KEY) || '';var changeTimes = 0;if (taskLang == 'ja' || taskLang == 'en') {changeTimes = REMEMBER_LB;} else {var changeTimes = parseInt(taskLang, 10);if (isNaN(changeTimes)) {changeTimes = 0;delLS(LS_KEY);}changeTimes++;taskLang = LANG;}ts.children('span.lang-' + taskLang).show();$('#task-lang-btn span').click(function() {var l = $(this).data('lang');ts.children('span').hide();ts.children('span.lang-' + l).show();if (changeTimes < REMEMBER_LB) setLS(LS_KEY, changeTimes);else setLS(LS_KEY, l);});});
Time Limit : 2 sec / Memory Limit : 64 MB
問題文 :             高橋君は、たこ焼きをどの順番で売るか悩んでいました。というのも、作り置きされたたこ焼きは美味しくないとわかっているので、高橋君はそのようなたこ焼きを売りたくないのですが、できたてばかり売ってしまうと売れるたこ焼きの数が減ってしまいます。                また、お客さんを待たせてばかりだと、次第にお客さんが離れてしまうだろうと高橋君は考えています。        そこで、彼は T 秒以内に作成されたたこ焼きを売り続けることで、お客さんを捌ききれるかどうかを調べることにしました。                たこ焼きは A_1、A_2、…、A_N 秒後に焼きあがります。        お客さんは B_1、B_2、…、B_M 秒後にやってきます。        1 人のお客さんに対して、たこ焼きを 1 つ売るとします。すべてのお客さんにたこ焼きを売れるならyes、売れないならnoを出力して下さい。    入力入力は以下の形式で標準入力から与えられる。TNA_1 A_2 ... A_NMB_1 B_2 ... B_M1 行目に、何秒以内のたこ焼きまで売るかを表す整数T(1≦T≦100)が与えられます。2 行目に、高橋君が作成するたこ焼きの総数を表す整数N(1≦N≦100)が与えられます。3 行目に、それぞれのたこ焼きが何秒後にできるかを表す整数 Ai(1≦Ai≦100、A1≦A2≦...≦AN) が半角スペース区切りで N 個与えられます。4 行目に、来店するお客さんの人数を表す整数M(1≦M≦100)が与えられます。5 行目に、それぞれのお客さんが何秒後に来るかを表す整数 Bi(1≦Bi≦100、B1≦B2≦...≦BM) が半角スペース区切りで M 個与えられます。出力            すべてのお客さんにたこ焼きをすぐ売れるならyes、売れないならnoを出力して下さい。                また、出力の末尾には改行を入れて下さい。    
// ソースコードの引用元 : https://atcoder.jp/contests/abc005/submissions/4643428
// 提出ID : 4643428
// 問題ID : abc005_3
// コンテストID : abc005
// ユーザID : xryuseix
// コード長 : 1436
// 実行時間 : 1



#include<iostream>
#include<cstdio>
#include<algorithm>
#include<cmath>
#include<string>
#include<vector>
#include<list>
#include<set>
#include<map>
#include<queue>
#include<stack>
#include<cctype>
#include<climits>
#include<bitset>
#define ld long double
//#define ll long long int
#define ull unsigned long long int
#define rep(i,n) for(i=0;i<n;i++)
#define fin(ans) cout<<(ans)<<endl
#define INF INT_MAX;
using namespace std;
template<class T> inline bool chmax(T& a,T b){if(a<b){a=b;return 1;}return 0;}
template<class T> inline bool chmin(T& a,T b){if(a>b){a=b;return 1;}return 0;}
const long long LLINF=1LL<<60;
//set<int>::iterator it;



int main(void){ios::sync_with_stdio(false);cin.tie(0);
//////////////////////////////////////////////////////
	
	int i,j,t,m,n,tmp,per=-1;
	cin>>t>>n;
	queue<int> a,b;
	rep(i,n){
		cin>>tmp;
		a.push(tmp);
	}
	cin>>m;
	rep(i,m){
		cin>>tmp;
		b.push(tmp);
	}
	bool ch=true;
	for(i=0;i<m;i++){
		per=b.front();
		b.pop();
		if(a.size()==0)ch=false;
//		cout<<endl<<"per:"<<per<<endl;
		while(a.size()>0){
			tmp=a.front();
			a.pop();
//			cout<<"tmp:"<<tmp<<endl;
			if(per-tmp<=t&&per-tmp>=0)break;
			else if(a.size()==0){
				ch=false;
			}
		}
	}
	if(ch)cout<<"yes"<<endl;
	else cout<<"no"<<endl;
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
//////////////////////////////////////////////////////
	return 0;
}
