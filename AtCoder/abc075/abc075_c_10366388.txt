問題文の引用元：https://atcoder.jp/contests/abc075/tasks/abc075_c
C - BridgeEditorial / $(function() {var ts = $('#task-statement span.lang');if (ts.children('span').size() <= 1) {$('#task-lang-btn').hide();ts.children('span').show();return;}var REMEMBER_LB = 5;var LS_KEY = 'task_lang';var taskLang = getLS(LS_KEY) || '';var changeTimes = 0;if (taskLang == 'ja' || taskLang == 'en') {changeTimes = REMEMBER_LB;} else {var changeTimes = parseInt(taskLang, 10);if (isNaN(changeTimes)) {changeTimes = 0;delLS(LS_KEY);}changeTimes++;taskLang = LANG;}ts.children('span.lang-' + taskLang).show();$('#task-lang-btn span').click(function() {var l = $(this).data('lang');ts.children('span').hide();ts.children('span.lang-' + l).show();if (changeTimes < REMEMBER_LB) setLS(LS_KEY, changeTimes);else setLS(LS_KEY, l);});});
Time Limit : 2 sec / Memory Limit : 256 MB
配点 : 300 点
問題文 : 自己ループと二重辺を含まない N 頂点 M 辺の無向連結グラフが与えられます。i(1≦i≦M) 番目の辺は頂点 a_i と頂点 b_i を結びます。   グラフから辺を取り除いたとき、グラフ全体が非連結になるような辺のことを橋と呼びます。与えられた M 本のうち橋である辺の本数を求めてください。ノート自己ループ とは、a_i=b_i(1≦i≦M) であるような辺 i のことをいいます。   二重辺 とは、a_i=a_j かつ b_i=b_j(1≦i<j≦M) であるような辺の組 i,j のことをいいます。   無向グラフが 連結 であるとは、グラフの任意の二頂点間に経路が存在することをいいます。   
制約2≦N≦50N-1≦M≦min(N(N−1)⁄2,50)1≦a_i<b_i≦N与えられるグラフは自己ループと二重辺を含まない。与えられるグラフは連結である。入力入力は以下の形式で標準入力から与えられる。  N M  a_1 b_1  a_2 b_2:  a_M b_M出力M 本の辺のうち、橋である辺の本数を出力せよ。
// ソースコードの引用元 : https://atcoder.jp/contests/abc075/submissions/10366388
// 提出ID : 10366388
// 問題ID : abc075_c
// コンテストID : abc075
// ユーザID : xryuseix
// コード長 : 2636
// 実行時間 : 1



#include <iostream>
#include <cstdio>
#include <algorithm>
#include <cmath>
#include <vector>
#include <list>
#include <set>
#include <map>
#include <queue>
#include <stack>
#include <cctype>
#include <cassert>
#include <climits>
#include <string>
#include <bitset>
#include <cfloat>
#include <unordered_set>
#pragma GCC optimize("Ofast")
using namespace std;
typedef long double ld;
typedef long long int ll;
typedef unsigned long long int ull;
typedef vector<int> vi;
typedef vector<char> vc;
typedef vector<bool> vb;
typedef vector<double> vd;
typedef vector<string> vs;
typedef vector<ll> vll;
typedef vector<pair<int,int> > vpii;
typedef vector<vector<int> > vvi;
typedef vector<vector<char> > vvc;
typedef vector<vector<string> > vvs;
typedef vector<vector<ll> > vvll;
#define rep(i,n) for(int i = 0; i < (n); ++i)
#define rrep(i,n) for(int i = 1; i <= (n); ++i)
#define irep(it, stl) for(auto it = stl.begin(); it != stl.end(); it++)
#define drep(i,n) for(int i = (n) - 1; i >= 0; --i)
#define fin(ans) cout << (ans) << '\n'
#define STI(s) atoi(s.c_str())
#define mp(p,q) make_pair(p, q)
#define pb(n) push_back(n)
#define all(a) a.begin(), a.end()
#define rall(a) a.rbegin(), a.rend()
#define Sort(a) sort(a.begin(), a.end())
#define Rort(a) sort(a.rbegin(), a.rend())
#define MATHPI acos(-1)
#define itn int;
int dx[8] = {1, 0, -1, 0, 1, -1, -1, 1};
int dy[8] = {0, 1, 0, -1, 1, 1, -1, -1};
template <class T> inline bool chmax(T& a,T b){if(a<b){a=b;return 1;} return 0;}
template <class T> inline bool chmin(T& a,T b){if(a>b){a=b;return 1;} return 0;}
struct io{io(){ios::sync_with_stdio(false);cin.tie(0);}};
const int INF = INT_MAX;
const ll LLINF = 1LL<<60;
const ll MOD = 1000000007;
const double EPS = 1e-9;

bool bfs(vvi &g, int a, int b,int s){
    queue<int> q;
    q.push(s);
    vb ispass(g.size(),false);
    ispass[s]=true;
    while(!q.empty()){
        int now=q.front();q.pop();
        if(now==b)return 0;
        rep(i,g[now].size()){
            if(ispass[g[now][i]])continue;
            if((now==a&&g[now][i]==b)||(now==b&&g[now][i]==a))continue;
            ispass[g[now][i]]=1;
            q.push(g[now][i]);
        }
    }
    return 1;
}

int main(void) {

    int n,m;
    cin>>n>>m;
    vvi g(n);
    vpii v(m);
    rep(i,m){
        int a,b;
        cin>>a>>b;
        a--;b--;
        v[i]=mp(a,b);
        g[a].pb(b);
        g[b].pb(a);
    }
    int ans=0;
    rep(i,m){
        int t=bfs(g,v[i].first,v[i].second,v[i].first);
        // cout<<i<<" "<<t<<endl;
        ans+=t;
    }
    fin(ans);
}
