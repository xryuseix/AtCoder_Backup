問題文の引用元：https://atcoder.jp/contests/abc040/tasks/abc040_c
C - 柱柱柱柱柱Editorial / $(function() {var ts = $('#task-statement span.lang');if (ts.children('span').size() <= 1) {$('#task-lang-btn').hide();ts.children('span').show();return;}var REMEMBER_LB = 5;var LS_KEY = 'task_lang';var taskLang = getLS(LS_KEY) || '';var changeTimes = 0;if (taskLang == 'ja' || taskLang == 'en') {changeTimes = REMEMBER_LB;} else {var changeTimes = parseInt(taskLang, 10);if (isNaN(changeTimes)) {changeTimes = 0;delLS(LS_KEY);}changeTimes++;taskLang = LANG;}ts.children('span.lang-' + taskLang).show();$('#task-lang-btn span').click(function() {var l = $(this).data('lang');ts.children('span').hide();ts.children('span.lang-' + l).show();if (changeTimes < REMEMBER_LB) setLS(LS_KEY, changeTimes);else setLS(LS_KEY, l);});});
Time Limit : 2 sec / Memory Limit : 256 MB
問題文 : N 本の木の柱が左から右へ一列に並んだアスレチックがあります。左から i 本目の柱の高さは a_i センチメートルです。高橋君は左から 1 本目の柱からスタートし、右へ柱を渡っていき N 本目の柱まで行こうとしています。高橋君がある柱にいるとき、次には現在の柱から 1 個もしくは 2 個右にある柱のどちらかへ移動することができます。移動するときには、現在いる柱の高さと、移動後の柱の高さの差の絶対値のぶんだけコストがかかります。N 本目の柱まで行くとき、コストの合計の最小値はいくらになるでしょうか。
制約2 ≦ N ≦ 100,0000 ≦ a_i ≦ 10,000a_i はすべて整数である。入力入力は以下の形式で標準入力から与えられる。Na_1 a_2 ... a_N出力1 本目の柱から N 本目の柱へ移動するまでに必要な合計コストの最小値を 1 行に出力せよ。
// ソースコードの引用元 : https://atcoder.jp/contests/abc040/submissions/4923106
// 提出ID : 4923106
// 問題ID : abc040_c
// コンテストID : abc040
// ユーザID : xryuseix
// コード長 : 1214
// 実行時間 : 9



#include<iostream>
#include<cstdio>
#include<algorithm>
#include<cmath>
#include<string>
#include<vector>
#include<list>
#include<set>
#include<map>
#include<queue>
#include<stack>
#include<cctype>
#include<climits>
#include<bitset>
#define ld long double
#define ll long long int
#define ull unsigned long long int
#define rep(i,n) for(i=0;i<n;i++)
#define fin(ans) cout<<(ans)<<endl
#define INF INT_MAX
using namespace std;
template<class T> inline bool chmax(T& a,T b){if(a<b){a=b;return 1;}return 0;}
template<class T> inline bool chmin(T& a,T b){if(a>b){a=b;return 1;}return 0;}
const long long LLINF=1LL<<60;
//set<int>::iterator it;



int main(void){ios::sync_with_stdio(false);cin.tie(0);
//////////////////////////////////////////////////////
	
	int n,i;
	cin>>n;
	vector<ll> v(n,0);
	ll dp[100010];
	rep(i,n)cin>>v[i];
	ll ans=LLINF;
	rep(i,100000) dp[i]=LLINF;
	dp[0]=0;
	dp[1]=abs(v[0]-v[1]);
//	rep(i,n)cout<<dp[i]<<" ";
	for(i=2;i<n+10;i++){
		chmin(dp[i],dp[i-1]+abs(v[i]-v[i-1]));
		chmin(dp[i],dp[i-2]+abs(v[i]-v[i-2]));
	}
//	rep(i,n)cout<<dp[i]<<" ";
	cout<<dp[n-1]<<endl;
	
//////////////////////////////////////////////////////
	return 0;
}
