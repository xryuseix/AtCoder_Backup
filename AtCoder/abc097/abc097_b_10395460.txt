問題文の引用元：https://atcoder.jp/contests/abc097/tasks/abc097_b
B - ExponentialEditorial / $(function() {var ts = $('#task-statement span.lang');if (ts.children('span').size() <= 1) {$('#task-lang-btn').hide();ts.children('span').show();return;}var REMEMBER_LB = 5;var LS_KEY = 'task_lang';var taskLang = getLS(LS_KEY) || '';var changeTimes = 0;if (taskLang == 'ja' || taskLang == 'en') {changeTimes = REMEMBER_LB;} else {var changeTimes = parseInt(taskLang, 10);if (isNaN(changeTimes)) {changeTimes = 0;delLS(LS_KEY);}changeTimes++;taskLang = LANG;}ts.children('span.lang-' + taskLang).show();$('#task-lang-btn span').click(function() {var l = $(this).data('lang');ts.children('span').hide();ts.children('span.lang-' + l).show();if (changeTimes < REMEMBER_LB) setLS(LS_KEY, changeTimes);else setLS(LS_KEY, l);});});
Time Limit : 2 sec / Memory Limit : 1024 MB
配点 : 200 点
問題文 : 正整数 X が与えられます。X 以下の最大のべき乗数を求めてください。ただし、べき乗数とは、ある 1 以上の整数 b と 2 以上の整数 p を使って b^p とかける整数のことを指すこととします。
制約1 ≤ X ≤ 1000X は整数入力入力は以下の形式で標準入力から与えられる。X出力X 以下の最大のべき乗数を出力せよ。
// ソースコードの引用元 : https://atcoder.jp/contests/abc097/submissions/10395460
// 提出ID : 10395460
// 問題ID : abc097_b
// コンテストID : abc097
// ユーザID : xryuseix
// コード長 : 2725
// 実行時間 : 1



#include <iostream>
#include <cstdio>
#include <algorithm>
#include <cmath>
#include <vector>
#include <list>
#include <set>
#include <map>
#include <queue>
#include <stack>
#include <cctype>
#include <cassert>
#include <climits>
#include <string>
#include <bitset>
#include <cfloat>
#include <unordered_set>
#pragma GCC optimize("Ofast")
using namespace std;
typedef long double ld;
typedef long long int ll;
typedef unsigned long long int ull;
typedef vector<int> vi;
typedef vector<char> vc;
typedef vector<bool> vb;
typedef vector<double> vd;
typedef vector<string> vs;
typedef vector<ll> vll;
typedef vector<pair<int,int> > vpii;
typedef vector<vector<int> > vvi;
typedef vector<vector<char> > vvc;
typedef vector<vector<string> > vvs;
typedef vector<vector<ll> > vvll;
#define rep(i,n) for(int i = 0; i < (n); ++i)
#define rrep(i,n) for(int i = 1; i <= (n); ++i)
#define irep(it, stl) for(auto it = stl.begin(); it != stl.end(); it++)
#define drep(i,n) for(int i = (n) - 1; i >= 0; --i)
#define fin(ans) cout << (ans) << '\n'
#define STI(s) atoi(s.c_str())
#define mp(p,q) make_pair(p, q)
#define pb(n) push_back(n)
#define all(a) a.begin(), a.end()
#define rall(a) a.rbegin(), a.rend()
#define Sort(a) sort(a.begin(), a.end())
#define Rort(a) sort(a.rbegin(), a.rend())
#define MATHPI acos(-1)
#define itn int;
int dx[8] = {1, 0, -1, 0, 1, -1, -1, 1};
int dy[8] = {0, 1, 0, -1, 1, 1, -1, -1};
template <class T> inline bool chmax(T& a,T b){if(a<b){a=b;return 1;} return 0;}
template <class T> inline bool chmin(T& a,T b){if(a>b){a=b;return 1;} return 0;}
struct io{io(){ios::sync_with_stdio(false);cin.tie(0);}};
const int INF = INT_MAX;
const ll LLINF = 1LL<<60;
const ll MOD = 1000000007;
const double EPS = 1e-9;

map<ll, ll> prime;
void factorize(int n) {
    for(int i = 2; i * i <= n; i++) {
        while(n % i == 0) {
            prime[i]++;
            n /= i;
        }
    }
    if(n != 1) {
        prime[n] = 1;
    }
}

int main(void) {

    int x;
    cin>>x;
    for(int i=x;i>=1;i--){
        prime.clear();
        factorize(i);
        bool ch=true;
        // irep(j,prime){
        //     cout<<j->first<<" "<<j->second<<endl;
        // }
        irep(j,prime){
            if(j->second>1&&j->second==prime.begin()->second)continue;
            ch=false;
        }
        if(ch){
            fin(i);
            return 0;
        }
        // if(prime.size()==1&&prime.begin()->second>1&&prime.begin()->first>0){
        //     fin(i);
        //     irep(j,prime){
        //         cout<<j->first<<" "<<j->second<<endl;
        //     }
        //     return 0;
        // }
    }
    fin(1);
}
