問題文の引用元：https://atcoder.jp/contests/abc193/tasks/abc193_e
E - OversleepingEditorial / $(function() {var ts = $('#task-statement span.lang');if (ts.children('span').size() <= 1) {$('#task-lang-btn').hide();ts.children('span').show();return;}var REMEMBER_LB = 5;var LS_KEY = 'task_lang';var taskLang = getLS(LS_KEY) || '';var changeTimes = 0;if (taskLang == 'ja' || taskLang == 'en') {changeTimes = REMEMBER_LB;} else {var changeTimes = parseInt(taskLang, 10);if (isNaN(changeTimes)) {changeTimes = 0;delLS(LS_KEY);}changeTimes++;taskLang = LANG;}ts.children('span.lang-' + taskLang).show();$('#task-lang-btn span').click(function() {var l = $(this).data('lang');ts.children('span').hide();ts.children('span.lang-' + l).show();if (changeTimes < REMEMBER_LB) setLS(LS_KEY, changeTimes);else setLS(LS_KEY, l);});});
Time Limit : 2 sec / Memory Limit : 1024 MB
配点 : 500 点
問題文 : 街 A と街 B の間を往復する電車があります。電車は時刻 0 に街 A を出発した後、X 秒かけて街 B に移動街 B で Y 秒停車X 秒かけて街 A に移動街 A で Y 秒停車を繰り返します。より厳密には、これらは半開区間として扱います。すなわち、n = 0, 1, 2, \dots について、(2X + 2Y)n ≤ t < (2X + 2Y)n + X を満たす時刻 t には電車は街 B に移動している(2X + 2Y)n + X ≤ t < (2X + 2Y)n + X + Y を満たす時刻 t には電車は街 B で停車している(2X + 2Y)n + X + Y ≤ t < (2X + 2Y)n + 2X + Y を満たす時刻 t には電車は街 A に移動している(2X + 2Y)n + 2X + Y ≤ t < (2X + 2Y)(n + 1) を満たす時刻 t には電車は街 A で停車しているが満たされます。高橋くんは電車に乗って時刻 0 に街 A を出発し、街 B で電車を降りようと思っています。高橋くんは時刻 0 に街 A を出発した後、P 秒間眠っているQ 秒間起きているを繰り返します。これらも半開区間として扱います。すなわち、n = 0, 1, 2, \dots について、(P + Q)n ≤ t < (P + Q)n + P を満たす時刻 t には高橋くんは眠っている(P + Q)n + P ≤ t < (P + Q)(n + 1) を満たす時刻 t には高橋くんは起きているが満たされます。街 B に電車が停車しており、かつ、高橋くんが起きていれば高橋くんは街 B で電車を降りることができます。高橋くんが街 B で電車を降りることができるか判定し、できる場合は、最短でいつになるか求めてください。なお、この値はこの問題の
制約下で整数になることが証明できます。T 個のケースが与えられるので、それぞれについて答えを求めてください。
制約入力は全て整数1 ≤ T ≤ 101 ≤ X ≤ 10^91 ≤ Y ≤ 5001 ≤ P ≤ 10^91 ≤ Q ≤ 500入力入力は以下の形式で標準入力から与えられる。T\rm case_1\rm case_2\hspace{9pt}\vdots\rm case_T各ケースは以下の形式で与えられる。X Y P Q出力T 行出力せよ。i 行目には、\rm case_i についてこの問題を解き、街 B で電車を降りられる時刻が存在する場合、そのような時刻のうち最小のものを整数で出力せよ。街 B で電車を降りられる時刻が存在しない場合、infinity と出力せよ。  



#include <algorithm>
#include <bitset>
#include <cassert>
#include <cctype>
#include <cfloat>
#include <climits>
#include <cmath>
#include <cstdio>
#include <deque>
#include <iomanip>
#include <iostream>
#include <list>
#include <map>
#include <queue>
#include <random>
#include <set>
#include <stack>
#include <string>
#include <unordered_set>
#include <vector>
using namespace std;
typedef long double ld;
typedef long long int ll;
typedef unsigned long long int ull;
typedef vector<int> vi;
typedef vector<char> vc;
typedef vector<bool> vb;
typedef vector<double> vd;
typedef vector<string> vs;
typedef vector<ll> vll;
typedef vector<pair<int, int>> vpii;
typedef vector<pair<ll, ll>> vpll;
typedef vector<vi> vvi;
typedef vector<vvi> vvvi;
typedef vector<vc> vvc;
typedef vector<vs> vvs;
typedef vector<vll> vvll;
typedef map<int, int> mii;
typedef set<int> si;
#define rep(i, n) for (ll i = 0; i < (n); ++i)
#define rrep(i, n) for (int i = 1; i <= (n); ++i)
#define irep(it, stl) for (auto it = stl.begin(); it != stl.end(); it++)
#define drep(i, n) for (int i = (n)-1; i >= 0; --i)
#define fin(ans) cout << (ans) << '\n'
#define STLL(s) strtoll(s.c_str(), NULL, 10)
#define mp(p, q) make_pair(p, q)
#define pb(n) push_back(n)
#define all(a) a.begin(), a.end()
#define Sort(a) sort(a.begin(), a.end())
#define Rort(a) sort(a.rbegin(), a.rend())
#define fi first
#define se second
#include <atcoder/all>
using namespace atcoder;
constexpr int dx[8] = {1, 0, -1, 0, 1, -1, -1, 1};
constexpr int dy[8] = {0, 1, 0, -1, 1, 1, -1, -1};
template <class T, class U>
inline bool chmax(T& a, U b) {
    if (a < b) {
        a = b;
        return 1;
    }
    return 0;
}
template <class T, class U>
inline bool chmin(T& a, U b) {
    if (a > b) {
        a = b;
        return 1;
    }
    return 0;
}
template <class T>
inline void dump(T& v) {
    irep(i, v) { cout << (*i) << ((i == --v.end()) ? '\n' : ' '); }
}
template <class T, class U>
inline void dump(map<T, U>& v) {
    irep(i, v) { cout << i->first << " " << i->second << '\n'; }
}
template <class T, class U>
inline void dump(pair<T, U>& p) {
    cout << p.first << " " << p.second << '\n';
}
string getline() {
    string s;
    fflush(stdin);
    getline(cin, s);
    return s;
}
inline void yn(const bool b) { b ? fin("yes") : fin("no"); }
inline void Yn(const bool b) { b ? fin("Yes") : fin("No"); }
inline void YN(const bool b) { b ? fin("YES") : fin("NO"); }
const int INF = INT_MAX;
constexpr ll LLINF = 1LL << 61;
constexpr ll MOD = 1000000007;  // 998244353;
constexpr ld EPS = 1e-11;

/* --------------------   ここまでテンプレ   -------------------- */

int main() {
    int Q;
    cin >> Q;
    while (Q--) {
        ll a, b, p, q;
        cin >> a >> b >> p >> q;
        ll B = 2 * (a + b);
        ll Y = (p + q);
        ll ans = LLINF;
        for (int s = 0; s < b; s++) {
            for (int t = 0; t < q; t++) {
                auto [r1, r2] = crt({a + s, p + t}, {B, Y});
                if (r2 == 0) {
                    continue;
                }
                chmin(ans, r1);
            }
        }
        if (ans == LLINF)
            fin("infinity");
        else
            fin(ans);
    }
}
