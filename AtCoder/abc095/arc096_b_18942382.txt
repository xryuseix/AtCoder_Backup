問題文の引用元：https://atcoder.jp/contests/abc095/tasks/arc096_b
D - Static SushiEditorial / $(function() {var ts = $('#task-statement span.lang');if (ts.children('span').size() <= 1) {$('#task-lang-btn').hide();ts.children('span').show();return;}var REMEMBER_LB = 5;var LS_KEY = 'task_lang';var taskLang = getLS(LS_KEY) || '';var changeTimes = 0;if (taskLang == 'ja' || taskLang == 'en') {changeTimes = REMEMBER_LB;} else {var changeTimes = parseInt(taskLang, 10);if (isNaN(changeTimes)) {changeTimes = 0;delLS(LS_KEY);}changeTimes++;taskLang = LANG;}ts.children('span.lang-' + taskLang).show();$('#task-lang-btn span').click(function() {var l = $(this).data('lang');ts.children('span').hide();ts.children('span.lang-' + l).show();if (changeTimes < REMEMBER_LB) setLS(LS_KEY, changeTimes);else setLS(LS_KEY, l);});});
Time Limit : 2 sec / Memory Limit : 256 MB
配点 : 500 点
問題文 : 日本料理店「停止寿司」は円形のカウンターが一つあるだけのシンプルな店です。カウンターの外周の長さは C メートルで、カウンターの内部に客が立ち入ることはできません。中橋くんが入店し、カウンターのそばまで案内されました。いま、カウンター上には N 貫の寿司が置かれています。そのうち i 貫目は中橋くんがいる位置から x_i メートル時計回りに進んだ位置に置かれており、v_i キロカロリーの栄養価を持ちます。中橋くんはカウンターの外周を自由に歩き回ることができます。寿司が置かれている位置にたどり着いたら、その寿司を食べて寿司が持つ栄養価を摂取することができます（当然、その寿司は消えます）。ただし、歩く際に 1 メートルあたり 1 キロカロリーを消費します。満足したら、いつでも好きな位置から店を出ることができます（始めにいた位置に戻らなくても構いません）。店を出るまでに最大で差し引き何キロカロリーを摂取することができるでしょうか？すなわち、退店するまでに摂取した栄養価の合計から消費したエネルギーを引いた値の最大値はいくらでしょうか？なお、他に客はおらず、新たな寿司がカウンターに追加されることもないものとします。また、中橋くんは十分な栄養を蓄えているため、どれだけ歩いてエネルギーを消費しても餓死しないものとします。
制約1 ≤ N ≤ 10^52 ≤ C ≤ 10^{14}1 ≤ x_1 < x_2 < ... < x_N < C1 ≤ v_i ≤ 10^9入力中のすべての値は整数である。部分点N ≤ 100 を満たすテストセットに正解すると、300 点が与えられる。入力入力は以下の形式で標準入力から与えられる。N Cx_1 v_1x_2 v_2:x_N v_N出力退店するまでに差し引きで最大 c キロカロリーを摂取できるとき、c の値を出力せよ。



#include <algorithm>
#include <bitset>
#include <cassert>
#include <cctype>
#include <cfloat>
#include <climits>
#include <cmath>
#include <cstdio>
#include <deque>
#include <iomanip>
#include <iostream>
#include <list>
#include <map>
#include <queue>
#include <random>
#include <set>
#include <stack>
#include <string>
#include <unordered_set>
#include <vector>
using namespace std;
typedef long double ld;
typedef long long int ll;
typedef unsigned long long int ull;
typedef vector<int> vi;
typedef vector<char> vc;
typedef vector<bool> vb;
typedef vector<double> vd;
typedef vector<string> vs;
typedef vector<ll> vll;
typedef vector<pair<int, int>> vpii;
typedef vector<pair<ll, ll>> vpll;
typedef vector<vi> vvi;
typedef vector<vvi> vvvi;
typedef vector<vc> vvc;
typedef vector<vs> vvs;
typedef vector<vll> vvll;
typedef map<int, int> mii;
typedef set<int> si;
#define rep(i, n) for (ll i = 0; i < (n); ++i)
#define rrep(i, n) for (int i = 1; i <= (n); ++i)
#define irep(it, stl) for (auto it = stl.begin(); it != stl.end(); it++)
#define drep(i, n) for (int i = (n)-1; i >= 0; --i)
#define fin(ans) cout << (ans) << '\n'
#define STLL(s) strtoll(s.c_str(), NULL, 10)
#define mp(p, q) make_pair(p, q)
#define pb(n) push_back(n)
#define all(a) a.begin(), a.end()
#define Sort(a) sort(a.begin(), a.end())
#define Rort(a) sort(a.rbegin(), a.rend())
#define MATHPI acos(-1)
#define fi first
#define se second
// #include <atcoder/all>
// using namespace atcoder;
constexpr int dx[8] = {1, 0, -1, 0, 1, -1, -1, 1};
constexpr int dy[8] = {0, 1, 0, -1, 1, 1, -1, -1};
template <class T, class U>
inline bool chmax(T& a, U b) {
    if (a < b) {
        a = b;
        return 1;
    }
    return 0;
}
template <class T, class U>
inline bool chmin(T& a, U b) {
    if (a > b) {
        a = b;
        return 1;
    }
    return 0;
}
template <class T>
inline void dump(T& v) {
    irep(i, v) { cout << (*i) << ((i == --v.end()) ? '\n' : ' '); }
}
template <class T, class U>
inline void dump(map<T, U>& v) {
    irep(i, v) { cout << i->first << " " << i->second << '\n'; }
}
template <class T, class U>
inline void dump(pair<T, U>& p) {
    cout << p.first << " " << p.second << '\n';
}
inline void yn(const bool b) { b ? fin("yes") : fin("no"); }
inline void Yn(const bool b) { b ? fin("Yes") : fin("No"); }
inline void YN(const bool b) { b ? fin("YES") : fin("NO"); }
template <typename Head, typename Value>
auto vectors(const Head& head, const Value& v) {
    return vector<Value>(head, v);
}
template <typename Head, typename... Tail>
auto vectors(Head x, Tail... tail) {
    auto inner = vectors(tail...);
    return vector<decltype(inner)>(x, inner);
}
const int INF = INT_MAX;
constexpr ll LLINF = 1LL << 61;
constexpr ll MOD = 1000000007;  // 998244353;
constexpr ld EPS = 1e-11;

/* --------------------   ここまでテンプレ   -------------------- */

int main() {
    ll n, c;
    cin >> n >> c;
    vll x(n + 2), v(n + 2);
    rep(i, n) cin >> x[i + 1] >> v[i + 1];
    x[n + 1] = c;
    vll xmax(n + 1);
    vll ymax(n + 1);
    vll cx(n + 1);
    vll cy(n + 1);

    for (int i = 1; i <= n; i++) {
        cx[i] = cx[i - 1] + v[i] - x[i] + x[i - 1];
        xmax[i] = max(xmax[i - 1], cx[i]);
    }
    for (int i = n; i > 0; i--) {
        cy[n + 1 - i] = cy[n - i] + v[i] - x[i + 1] + x[i];
        ymax[n + 1 - i] = max(ymax[n - i], cy[n + 1 - i]);
    }
    ll ans = 0;
    rep(i, n + 1) {
        chmax(ans, cx[i] - x[i] + ymax[n - i]);
        chmax(ans, cy[i] + (x[n + 1 - i] - c) + xmax[n - i]);
    }
    fin(ans);
}
