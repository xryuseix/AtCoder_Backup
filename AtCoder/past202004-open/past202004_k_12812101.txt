問題文の引用元：https://atcoder.jp/contests/past202004-open/tasks/past202004_k
K - ParenthesesEditorial / $(function() {var ts = $('#task-statement span.lang');if (ts.children('span').size() <= 1) {$('#task-lang-btn').hide();ts.children('span').show();return;}var REMEMBER_LB = 5;var LS_KEY = 'task_lang';var taskLang = getLS(LS_KEY) || '';var changeTimes = 0;if (taskLang == 'ja' || taskLang == 'en') {changeTimes = REMEMBER_LB;} else {var changeTimes = parseInt(taskLang, 10);if (isNaN(changeTimes)) {changeTimes = 0;delLS(LS_KEY);}changeTimes++;taskLang = LANG;}ts.children('span.lang-' + taskLang).show();$('#task-lang-btn span').click(function() {var l = $(this).data('lang');ts.children('span').hide();ts.children('span.lang-' + l).show();if (changeTimes < REMEMBER_LB) setLS(LS_KEY, changeTimes);else setLS(LS_KEY, l);});});
Time Limit : 2 sec / Memory Limit : 1024 MB
配点 : 6 点注意この問題に対する言及は、2020年5月2日 18:00 JST まで禁止されています。言及がなされた場合、賠償が請求される可能性があります。試験後に総合得点や認定級を公表するのは構いませんが、どの問題が解けたかなどの情報は発信しないようにお願いします。
問題文 : ( と ) からなる長さ N の文字列 S が与えられます。S の i 番目の文字を S_i で表します。以下の手順で S を 括弧の対応が取れている文字列 (後述) にすることを考えます。まず、次の操作を 0 回以上好きなだけ行います。1 \leq i \leq N を選ぶ。S_i が ( ならば ) に、) ならば ( に変更する。この操作のコストは C_i である。その後、次の操作を行います。S から 0 文字以上選んで削除し (全ての文字を削除しても良い)、削除しなかった文字を元の順序で繋げる。S の i 文字目を削除するコストは D_i である。S を括弧の対応が取れている文字列にするための合計コストの最小値を求めてください。なお、括弧の対応が取れている文字列とは、次のうちいずれかの条件を満たす文字列です。空文字列ある括弧の対応が取れている空でない文字列 A, B が存在し、 A , B をこの順に連結した文字列ある括弧の対応が取れている文字列 A が存在し、 (, A, ) をこの順に連結した文字列
制約1 \leq N \leq 3000S の長さは NS の各文字は ( または )1 \leq C_i \leq 10^91 \leq D_i \leq 10^9N, C_i, D_i は整数入力入力は以下の形式で標準入力から与えられる。NSC_1 C_2 \cdots C_ND_1 D_2 \cdots D_N出力S を括弧の対応が取れている文字列にするための合計コストの最小値を出力せよ。
// ソースコードの引用元 : https://atcoder.jp/contests/past202004-open/submissions/12812101
// 提出ID : 12812101
// 問題ID : past202004_k
// コンテストID : past202004-open
// ユーザID : xryuseix
// コード長 : 3583
// 実行時間 : 119



#include <iostream>
#include <cstdio>
#include <algorithm>
#include <cmath>
#include <vector>
#include <list>
#include <set>
#include <map>
#include <queue>
#include <stack>
#include <cctype>
#include <cassert>
#include <climits>
#include <string>
#include <bitset>
#include <cfloat>
#include <random>
#include <iomanip>
#include <unordered_set>
#pragma GCC optimize("Ofast")
using namespace std;
typedef long double ld;
typedef long long int ll;
typedef unsigned long long int ull;
typedef vector<int> vi;
typedef vector<char> vc;
typedef vector<bool> vb;
typedef vector<double> vd;
typedef vector<string> vs;
typedef vector<ll> vll;
typedef vector<pair<int,int> > vpii;
typedef vector<pair<ll,ll> > vpll;
typedef vector<vector<int> > vvi;
typedef vector<vector<char> > vvc;
typedef vector<vector<string> > vvs;
typedef vector<vector<ll> > vvll;
typedef map<int,int> mii;
typedef set<int> si;
#define rep(i,n) for(int i = 0; i < (n); ++i)
#define rrep(i,n) for(int i = 1; i <= (n); ++i)
#define arep(i,v) for(auto i : v)
#define irep(it, stl) for(auto it = stl.begin(); it != stl.end(); it++)
#define drep(i,n) for(int i = (n) - 1; i >= 0; --i)
#define fin(ans) cout << (ans) << '\n'
#define STLL(s) strtoll(s.c_str(), NULL, 10)
#define mp(p,q) make_pair(p, q)
#define pb(n) push_back(n)
#define all(a) a.begin(), a.end()
#define rall(a) a.rbegin(), a.rend()
#define Sort(a) sort(a.begin(), a.end())
#define Rort(a) sort(a.rbegin(), a.rend())
#define MATHPI acos(-1)
#define itn int
// #define endl '\n';
#define fi first
#define se second
#define NONVOID [[nodiscard]]
constexpr int dx[8] = {1, 0, -1, 0, 1, -1, -1, 1};
constexpr int dy[8] = {0, 1, 0, -1, 1, 1, -1, -1};
template <class T> inline bool chmax(T& a,T b){if(a<b){a=b;return 1;} return 0;}
template <class T> inline bool chmin(T& a,T b){if(a>b){a=b;return 1;} return 0;}
template <class T> inline void dump(T &v){irep(i, v){cout<<*i<<((i==--v.end())?'\n':' ');}}
inline string getline(){string s; getline(cin,s); return s;}
inline void yn(const bool b){b?fin("yes"):fin("no");}
inline void Yn(const bool b){b?fin("Yes"):fin("No");}
inline void YN(const bool b){b?fin("YES"):fin("NO");}
struct io{io(){ios::sync_with_stdio(false);cin.tie(0);}};
const int INF = INT_MAX;
constexpr ll LLINF = 1LL<<60;
constexpr ll MOD = 1000000007;
constexpr double EPS = 1e-9;





int main() {

    int n,MX=3010;
    string s;
    cin>>n>>s;
    vvll dp(s.size()+1,vll(2*MX,LLINF));
    vll c(n),d(n);
    rep(i,n)cin>>c[i];
    rep(i,n)cin>>d[i];

    int sum=0;
    rep(i,n){
        if(s[i]==')')sum--;
        else sum++;
    }
    dp[0][MX]=0;
    for(int i=0;i<s.size();i++){
        rep(j,dp[i].size()){
            if(dp[i][j]!=LLINF){
                if(s[i]=='('){
                    chmin(dp[i+1][j+1],dp[i][j]);
                    if(j-1>=MX)chmin(dp[i+1][j-1],dp[i][j]+c[i]);
                    if(j>=MX)chmin(dp[i+1][j],dp[i][j]+d[i]);
                } else {
                    if(j-1>=MX)chmin(dp[i+1][j-1],dp[i][j]);
                    chmin(dp[i+1][j+1],dp[i][j]+c[i]);
                    chmin(dp[i+1][j],dp[i][j]+d[i]);
                }
            }
        }
    }
    // ll ans=LLINF;
    // for(int i=0;i<s.size()+1;i++){
    //     chmin(ans,dp[i][MX]);
    // }
    fin(dp[n][MX]);
    // rep(i,n+1){
    //     for(int j=MX-5; j<=MX+5; j++){
    //         if(dp[i][j]==LLINF)cout<<"INF ";
    //         else cout<<dp[i][j]<<" ";
    //     }
    //     cout<<endl;
    // }
}

