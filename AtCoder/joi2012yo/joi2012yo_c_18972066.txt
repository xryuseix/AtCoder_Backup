問題文の引用元：https://atcoder.jp/contests/joi2012yo/tasks/joi2012yo_c
C - 最高のピザ (Best Pizza)Editorial / $(function() {var ts = $('#task-statement span.lang');if (ts.children('span').size() <= 1) {$('#task-lang-btn').hide();ts.children('span').show();return;}var REMEMBER_LB = 5;var LS_KEY = 'task_lang';var taskLang = getLS(LS_KEY) || '';var changeTimes = 0;if (taskLang == 'ja' || taskLang == 'en') {changeTimes = REMEMBER_LB;} else {var changeTimes = parseInt(taskLang, 10);if (isNaN(changeTimes)) {changeTimes = 0;delLS(LS_KEY);}changeTimes++;taskLang = LANG;}ts.children('span.lang-' + taskLang).show();$('#task-lang-btn span').click(function() {var l = $(this).data('lang');ts.children('span').hide();ts.children('span.lang-' + l).show();if (changeTimes < REMEMBER_LB) setLS(LS_KEY, changeTimes);else setLS(LS_KEY, l);});});
Time Limit : 10 sec / Memory Limit : 256 MB
配点: 100 点問題K 理事長は，JOI 市の中心部にある JOI ピザ店の常連客である．彼はある事情に より，今月から節約生活を始めることにした．そこで彼は，JOI ピザ店で注文できる ピザのうち， 1 ドルあたりのカロリーが最大となるようなピザを注文し たいと思った．このようなピザを「最高のピザ」と呼ぶことにしよう．「最高のピザ 」は 1 種類とは限らない．JOI ピザでは N 種類のトッピングから何種類かを自由に選び，基本の生地の上に載せたものを注文することができる．同種のトッピングを 2  つ以上載せることはできない．生地にトッピングを 1 種類も載せないピ ザも注文できる．生地の値段は A ドルであり，トッピングの値段はいず れも B ドルである．ピザの値段は，生地の値段と載せたトッピングの値 段の合計である．すなわち，トッピングを k 種類 (0 \leq k \leq N) 載せたピザの値段は A + k \times B ドルである．ピザ全体の カロリーは，生地のカロリーと載せたトッピングのカロリーの合計である．生地の値段とトッピングの値段，および，生地と各トッピングのカロリーの値が与えられたとき，「最高のピザ」の 1 ドルあたりのカロリー数を求めるプ ログラムを作成せよ．入力入力は N + 3 行からなる．1 行目にはトッピングの種類数を表す 1 つの整数 N (1 \leq N \leq 100) が書かれている． 2 行目には 2 つの整数 A, B (1 \leq A \leq 1000，1 \leq B \leq 1000) が空白を区切りとして書かれている． A は生地の値段， B はトッピングの値段を表す． 3 行目には，生地のカロリー 数を表す 1 つの整数 C (1 \leq C \leq 10000) が書かれている．3 + i 行目 (1 \leq i \leq N) には， i 番 目のトッピングのカロリー数を表す 1 つの整数 D_i (1 \leq D_i \leq 10000) が書かれている．出力「最高のピザ」の 1 ドルあたりのカロリー数を 1 行で出力せよ．ただし，小数点以下は切り捨てて整数値で出力せよ．



#include <algorithm>
#include <bitset>
#include <cassert>
#include <cctype>
#include <cfloat>
#include <climits>
#include <cmath>
#include <cstdio>
#include <deque>
#include <iomanip>
#include <iostream>
#include <list>
#include <map>
#include <queue>
#include <random>
#include <set>
#include <stack>
#include <string>
#include <unordered_set>
#include <vector>
using namespace std;
typedef long double ld;
typedef long long int ll;
typedef unsigned long long int ull;
typedef vector<int> vi;
typedef vector<char> vc;
typedef vector<bool> vb;
typedef vector<double> vd;
typedef vector<string> vs;
typedef vector<ll> vll;
typedef vector<pair<int, int>> vpii;
typedef vector<pair<ll, ll>> vpll;
typedef vector<vi> vvi;
typedef vector<vvi> vvvi;
typedef vector<vc> vvc;
typedef vector<vs> vvs;
typedef vector<vll> vvll;
typedef map<int, int> mii;
typedef set<int> si;
#define rep(i, n) for (ll i = 0; i < (n); ++i)
#define rrep(i, n) for (int i = 1; i <= (n); ++i)
#define irep(it, stl) for (auto it = stl.begin(); it != stl.end(); it++)
#define drep(i, n) for (int i = (n)-1; i >= 0; --i)
#define fin(ans) cout << (ans) << '\n'
#define STLL(s) strtoll(s.c_str(), NULL, 10)
#define mp(p, q) make_pair(p, q)
#define pb(n) push_back(n)
#define all(a) a.begin(), a.end()
#define Sort(a) sort(a.begin(), a.end())
#define Rort(a) sort(a.rbegin(), a.rend())
#define MATHPI acos(-1)
#define fi first
#define se second
// #include <atcoder/all>
// using namespace atcoder;
constexpr int dx[8] = {1, 0, -1, 0, 1, -1, -1, 1};
constexpr int dy[8] = {0, 1, 0, -1, 1, 1, -1, -1};
template <class T, class U>
inline bool chmax(T& a, U b) {
    if (a < b) {
        a = b;
        return 1;
    }
    return 0;
}
template <class T, class U>
inline bool chmin(T& a, U b) {
    if (a > b) {
        a = b;
        return 1;
    }
    return 0;
}
template <class T>
inline void dump(T& v) {
    irep(i, v) { cout << (*i) << ((i == --v.end()) ? '\n' : ' '); }
}
template <class T, class U>
inline void dump(map<T, U>& v) {
    irep(i, v) { cout << i->first << " " << i->second << '\n'; }
}
template <class T, class U>
inline void dump(pair<T, U>& p) {
    cout << p.first << " " << p.second << '\n';
}
inline void yn(const bool b) { b ? fin("yes") : fin("no"); }
inline void Yn(const bool b) { b ? fin("Yes") : fin("No"); }
inline void YN(const bool b) { b ? fin("YES") : fin("NO"); }
template <typename Head, typename Value>
auto vectors(const Head& head, const Value& v) {
    return vector<Value>(head, v);
}
template <typename Head, typename... Tail>
auto vectors(Head x, Tail... tail) {
    auto inner = vectors(tail...);
    return vector<decltype(inner)>(x, inner);
}
const int INF = INT_MAX;
constexpr ll LLINF = 1LL << 61;
constexpr ll MOD = 1000000007;  // 998244353;
constexpr ld EPS = 1e-11;

/* --------------------   ここまでテンプレ   -------------------- */

int main() {
    int n;
    cin >> n;
    int a, b, c;
    cin >> a >> b >> c;
    vi v(n);
    rep(i, n) cin >> v[i];
    Rort(v);
    int ans = 0;
    rep(i, n) {
        int sum = c;
        rep(j, i) sum += v[j];
        chmax(ans, sum / (a + b * i));
    }
    fin(ans);
}
