問題文の引用元：https://atcoder.jp/contests/abc016/tasks/abc016_3
C - 友達の友達Editorial / $(function() {var ts = $('#task-statement span.lang');if (ts.children('span').size() <= 1) {$('#task-lang-btn').hide();ts.children('span').show();return;}var REMEMBER_LB = 5;var LS_KEY = 'task_lang';var taskLang = getLS(LS_KEY) || '';var changeTimes = 0;if (taskLang == 'ja' || taskLang == 'en') {changeTimes = REMEMBER_LB;} else {var changeTimes = parseInt(taskLang, 10);if (isNaN(changeTimes)) {changeTimes = 0;delLS(LS_KEY);}changeTimes++;taskLang = LANG;}ts.children('span.lang-' + taskLang).show();$('#task-lang-btn span').click(function() {var l = $(this).data('lang');ts.children('span').hide();ts.children('span.lang-' + l).show();if (changeTimes < REMEMBER_LB) setLS(LS_KEY, changeTimes);else setLS(LS_KEY, l);});});
Time Limit : 2 sec / Memory Limit : 256 MB
問題文 : 高橋くんはSNSの管理者をしています。このSNSではユーザ同士が友達という関係で繋がることができます。高橋くんはそれぞれのユーザの「友達の友達」が何人いるかを調べることにしました。友達関係が与えられるので、各ユーザの「友達の友達」の人数を求めてください。ただし、自分自身や友達は、「友達の友達」に含みません。入力入力は以下の形式で標準入力から与えられる。N MA_1 B_1A_2 B_2:A_M B_M1 行目には、ユーザ数 N (1≦N≦10) と友達の組の数 M (0≦M≦N×(N-1)/2) がスペース区切りで与えられる。各ユーザには 1 から N までのユーザIDが割り当てられている。2 行目からの M 行では、友達関係にあるユーザのID A_i,B_i (1≦A_i がスペース区切りで与えられる。ただし、 i≠j ならば (A_i,B_i)≠(A_j,B_j) を満たす。出力各ユーザの友達の友達の人数をユーザIDの小さい順に一行ごと出力せよ。出力の末尾には改行をつけること。
// ソースコードの引用元 : https://atcoder.jp/contests/abc016/submissions/7709700
// 提出ID : 7709700
// 問題ID : abc016_3
// コンテストID : abc016
// ユーザID : xryuseix
// コード長 : 3133
// 実行時間 : 1



#include <iostream>
#include <cstdio>
#include <algorithm>
#include <cmath>
#include <vector>
#include <list>
#include <set>
#include <map>
#include <queue>
#include <stack>
#include <cctype>
#include <climits>
#include <string>
#include <bitset>
#include <cfloat>
using namespace std;
typedef long double ld;
typedef long long int ll;
typedef unsigned long long int ull;
typedef vector<int> vi;
typedef vector<char> vc;
typedef vector<double> vd;
typedef vector<string> vs;
typedef vector<ll> vll;
typedef vector<pair<int,int> > vpii;
typedef vector<vector<int> > vvi;
typedef vector<vector<char> > vvc;
typedef vector<vector<string> > vvs;
typedef vector<vector<ll> > vvll;
#define rep(i,n) for(int i = 0; i < (n); ++i)
#define rrep(i,n) for(int i = 1; i <= (n); ++i)
#define drep(i,n) for(int i = (n)-1; i >= 0; --i)
#define fin(ans) cout<<(ans)<<endl
#define STI(s) atoi(s.c_str())
#define mp(p,q) make_pair(p,q)
#define pb(n) push_back(n)
#define all(a) a.begin(),a.end()
#define rall(a) a.rbegin(),a.rend()
#define Sort(a) sort(a.begin(),a.end())
#define Rort(a) sort(a.rbegin(),a.rend())
template<class T> inline bool chmax(T& a,T b){if(a<b){a=b;return 1;}return 0;}
template<class T> inline bool chmin(T& a,T b){if(a>b){a=b;return 1;}return 0;}
const int P = 1000000007;
const int INF = INT_MAX;
const ll LLINF = 1LL<<60;

class WAR_FLY {
public:
    vvi d; //辺の数
    int V; //頂点の数
    
    WAR_FLY(int n) {
        V = n;
        d = vector<vector<int> > (n,vector<int>(n));
        for(int i = 0; i < V; i++) {
            for(int j = 0; j < V; j++) {
                if(i == j) {
                    d[i][j] = 0;
                }
                else {
                    d[i][j] = INF;
                }
            }
        }
    }

    void warshall_floyd() {
        for(int k = 0; k < V; k++) {
            for(int i = 0; i < V; i++) {
                for(int j = 0; j < V; j++) {
                    d[i][j] = min((ll)d[i][j], (ll)d[i][k] + (ll)d[k][j]);
                }
            }
        }
    }

    void add(int from, int to, int cost) {
        d[from][to] = cost;
    }

    bool is_negative_loop() {
        for(int i = 0; i < V; i++) {
            if(d[i][i] < 0) return true;
        }
        return false;
    }

    void show() {
        for(int i = 0; i < V; i++) {
            for(int j = 0; j < V; j++) {
                cout << d[i][j] << " ";
            }
            cout << endl;
        }
    }
};

int main(void){ios::sync_with_stdio(false);cin.tie(0);
//////////////////////////////////////////////////////
    
    int n,q;
    cin>>n>>q;

    WAR_FLY wa(n);
    for(int i=0;i<q;i++){
        int a,b;
        cin>>a>>b;
        a--,b--;
        wa.add(a,b,1);
        wa.add(b,a,1);
    }
    wa.warshall_floyd();
    for(int i=0;i<n;i++){
        int ans=0;
        for(int j=0;j<wa.d[i].size();j++){
            if(wa.d[i][j]==2)ans++;
        }
        fin(ans);
    }
    

//////////////////////////////////////////////////////
return 0;}

