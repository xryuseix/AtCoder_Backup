問題文の引用元：https://atcoder.jp/contests/abc084/tasks/abc084_c
C - Special TrainsEditorial / $(function() {var ts = $('#task-statement span.lang');if (ts.children('span').size() <= 1) {$('#task-lang-btn').hide();ts.children('span').show();return;}var REMEMBER_LB = 5;var LS_KEY = 'task_lang';var taskLang = getLS(LS_KEY) || '';var changeTimes = 0;if (taskLang == 'ja' || taskLang == 'en') {changeTimes = REMEMBER_LB;} else {var changeTimes = parseInt(taskLang, 10);if (isNaN(changeTimes)) {changeTimes = 0;delLS(LS_KEY);}changeTimes++;taskLang = LANG;}ts.children('span.lang-' + taskLang).show();$('#task-lang-btn span').click(function() {var l = $(this).data('lang');ts.children('span').hide();ts.children('span.lang-' + l).show();if (changeTimes < REMEMBER_LB) setLS(LS_KEY, changeTimes);else setLS(LS_KEY, l);});});
Time Limit : 3 sec / Memory Limit : 256 MB
配点 : 300 点
問題文 : Atcoder国に、 1 本の東西方向に走る鉄道が完成しました。この鉄道には N 個の駅があり、西から順に 1,2,...,N の番号がついています。明日、鉄道の開通式が開かれます。この鉄道では、1≦i≦N-1 を満たす全ての整数 i に対して、駅 i から駅 i+1 に、C_i 秒で向かう列車が運行されます。ただし、これら以外の列車は運行されません。駅 i から駅 i+1 に移動する列車のうち最初の列車は、開通式開始 S_i 秒後に駅 i を発車し、その後は F_i 秒おきに駅 i を発車する列車があります。また、S_i は F_i で割り切れることが保証されます。つまり、A％B で A を B で割った余りを表すとき、S_i≦t,t％F_i=0 を満たす全ての t に対してのみ、開通式開始 t 秒後に駅 i を出発し、開通式開始 t+C_i 秒後に駅 i+1 に到着する列車があります。列車の乗り降りにかかる時間を考えないとき、全ての駅 i に対して、開通式開始時に駅 i にいる場合、駅 N に到着できるのは最も早くて開通式開始何秒後か、答えてください。
制約1≦N≦5001≦C_i≦1001≦S_i≦10^51≦F_i≦100S_i％F_i=0入力は全て整数入力入力は以下の形式で標準入力から与えられる。NC_1 S_1 F_1:C_{N-1} S_{N-1} F_{N-1}出力i 行目 (1≦i≦N) に、開通式開始時に駅 i にいる場合、駅 N に到着できるのが最も早くて開通式開始 x 秒後のとき、x を出力せよ。
// ソースコードの引用元 : https://atcoder.jp/contests/abc084/submissions/5014448
// 提出ID : 5014448
// 問題ID : abc084_c
// コンテストID : abc084
// ユーザID : xryuseix
// コード長 : 1549
// 実行時間 : 4



#include<iostream>
#include<cstdio>
#include<algorithm>
#include<cmath>
#include<string>
#include<vector>
#include<list>
#include<set>
#include<map>
#include<queue>
#include<stack>
#include<cctype>
#include<climits>
#include<bitset>
#define ld long double
#define ll long long int
#define ull unsigned long long int
#define rep(i,n) for(i=0;i<n;i++)
#define fin(ans) cout<<(ans)<<endl
#define INF INT_MAX
using namespace std;
template<class T> inline bool chmax(T& a,T b){if(a<b){a=b;return 1;}return 0;}
template<class T> inline bool chmin(T& a,T b){if(a>b){a=b;return 1;}return 0;}
const long long LLINF=1LL<<60;
//set<int>::iterator it;





int main(void){ios::sync_with_stdio(false);cin.tie(0);
//////////////////////////////////////////////////////
	
	int i,j,n;
	cin>>n;
	int c[n-1],s[n],f[n-1];
	rep(i,n-1) cin>>c[i]>>s[i]>>f[i];
	s[n-1]=0;
	//動き続けてアップアップ！！
	//mod切り上げをしよう
	//O(N^2) でとけるはず！ 
	int ans;
	for(i=0;i<n-1;i++){
		ans=s[i];
//		cout<<"1:"<<ans<<endl;
		for(j=i;j<n-2;j++){
			ans+=c[j];
//			cout<<"2:"<<ans<<endl;
			if(ans<=s[j+1]){
				ans=s[j+1];
			}
			else{
			//ans切り上げ作業 
//			cout<<ans<<" "<<s[j+1]<<" "<<f[j+1]<<endl;
				ans=s[j+1]+f[j+1]*ceil((double)(ans-s[j+1])/(double)f[j+1]);
			}
//			cout<<"3:"<<ans<<endl;
		}
		cout<<ans+c[n-2]<<endl;
	}
	cout<<0<<endl;
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
//////////////////////////////////////////////////////
	return 0;
}
