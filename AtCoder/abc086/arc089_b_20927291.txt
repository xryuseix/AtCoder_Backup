問題文の引用元：https://atcoder.jp/contests/abc086/tasks/arc089_b
D - CheckerEditorial / $(function() {var ts = $('#task-statement span.lang');if (ts.children('span').size() <= 1) {$('#task-lang-btn').hide();ts.children('span').show();return;}var REMEMBER_LB = 5;var LS_KEY = 'task_lang';var taskLang = getLS(LS_KEY) || '';var changeTimes = 0;if (taskLang == 'ja' || taskLang == 'en') {changeTimes = REMEMBER_LB;} else {var changeTimes = parseInt(taskLang, 10);if (isNaN(changeTimes)) {changeTimes = 0;delLS(LS_KEY);}changeTimes++;taskLang = LANG;}ts.children('span.lang-' + taskLang).show();$('#task-lang-btn span').click(function() {var l = $(this).data('lang');ts.children('span').hide();ts.children('span.lang-' + l).show();if (changeTimes < REMEMBER_LB) setLS(LS_KEY, changeTimes);else setLS(LS_KEY, l);});});
Time Limit : 2 sec / Memory Limit : 256 MB
配点 : 500 点
問題文 : シカのAtCoDeerくんは無限に広がる二次元グリッドを一辺が K の市松模様で塗ろうと考えています。ただし、一辺が K の市松模様とは、各マスが白か黒で塗られたパターンであって、各色の各連結成分が K × K の正方形となっているようなものです。例えば以下は一辺が 3 の市松模様の例です。AtCoDeerくんは N 個の希望を持っています。i 個目の希望は、 x_i,y_i,c_i で表されます。これは、c_i が B ならマス (x_i,y_i) を黒で塗る、 W なら白で塗ることを意味しています。同時に最大でいくつの希望を叶えることが出来るか答えてください。
制約1 ≤ N ≤ 10^51 ≤ K ≤ 10000 ≤ x_i ≤ 10^90 ≤ y_i ≤ 10^9i ≠ j なら (x_i,y_i) ≠ (x_j,y_j)c_i は B または WN,K,x_i,y_i は整数入力入力は以下の形式で標準入力から与えられる。N Kx_1 y_1 c_1x_2 y_2 c_2:x_N y_N c_N出力同時に叶えられる希望の個数の最大値を出力せよ。



#include <algorithm>
#include <bitset>
#include <cassert>
#include <cctype>
#include <cfloat>
#include <climits>
#include <cmath>
#include <cstdio>
#include <deque>
#include <iomanip>
#include <iostream>
#include <list>
#include <map>
#include <queue>
#include <random>
#include <set>
#include <stack>
#include <string>
#include <unordered_set>
#include <vector>
#pragma GCC target("avx2")
#pragma GCC optimize("O3")
#pragma GCC optimize("unroll-loops")
using namespace std;
typedef long double ld;
typedef long long int ll;
typedef unsigned long long int ull;
typedef vector<int> vi;
typedef vector<char> vc;
typedef vector<bool> vb;
typedef vector<double> vd;
typedef vector<string> vs;
typedef vector<ll> vll;
typedef vector<pair<int, int>> vpii;
typedef vector<pair<ll, ll>> vpll;
typedef vector<vi> vvi;
typedef vector<vvi> vvvi;
typedef vector<vc> vvc;
typedef vector<vs> vvs;
typedef vector<vll> vvll;
typedef pair<int, int> P;
typedef map<int, int> mii;
typedef set<int> si;
#define rep(i, n) for (ll i = 0; i < (n); ++i)
#define rrep(i, n) for (int i = 1; i <= (n); ++i)
#define irep(it, stl) for (auto it = stl.begin(); it != stl.end(); it++)
#define drep(i, n) for (int i = (n)-1; i >= 0; --i)
#define fin(ans) cout << (ans) << '\n'
#define STLL(s) strtoll(s.c_str(), NULL, 10)
#define mp(p, q) make_pair(p, q)
#define pb(n) push_back(n)
#define all(a) a.begin(), a.end()
#define Sort(a) sort(a.begin(), a.end())
#define Rort(a) sort(a.rbegin(), a.rend())
#define fi first
#define se second
// #include <atcoder/all>
// using namespace atcoder;
constexpr int dx[8] = {1, 0, -1, 0, 1, -1, -1, 1};
constexpr int dy[8] = {0, 1, 0, -1, 1, 1, -1, -1};
template <class T, class U>
inline bool chmax(T& a, U b) {
    if (a < b) {
        a = b;
        return 1;
    }
    return 0;
}
template <class T, class U>
inline bool chmin(T& a, U b) {
    if (a > b) {
        a = b;
        return 1;
    }
    return 0;
}
template <class T>
inline void dump(T& v) {
    if (v.size() > 100) {
        cout << "ARRAY IS TOO LARGE!!!" << endl;
    } else {
        irep(i, v) { cout << (*i) << ((i == --v.end()) ? '\n' : ' '); }
    }
}
template <class T, class U>
inline void dump(map<T, U>& v) {
    if (v.size() > 100) {
        cout << "ARRAY IS TOO LARGE!!!" << endl;
    } else {
        irep(i, v) { cout << i->first << " " << i->second << '\n'; }
    }
}
template <class T, class U>
inline void dump(pair<T, U>& p) {
    cout << p.first << " " << p.second << '\n';
}
inline void yn(const bool b) { b ? fin("yes") : fin("no"); }
inline void Yn(const bool b) { b ? fin("Yes") : fin("No"); }
inline void YN(const bool b) { b ? fin("YES") : fin("NO"); }
const int INF = INT_MAX;
constexpr ll LLINF = 1LL << 61;
constexpr ll MOD = 1000000007;  // 998244353;
constexpr ld EPS = 1e-11;

/* --------------------   ここまでテンプレ   -------------------- */

int ans = 0;

int get_sum(int y1, int x1, int y2, int x2, vvi& csum) {
    int ans = 0;
    ans += csum[y2 + 1][x2 + 1];
    ans -= csum[y1][x2 + 1];
    ans -= csum[y2 + 1][x1];
    ans += csum[y1][x1];
    return ans;
}

void calc(int y, int x, vvi& white_csum, vvi& black_csum, int n, int k) {
    int black = 0;
    black += get_sum(0, 0, y, x, black_csum);
    black += get_sum(y + 1, x + 1, y + k, x + k, black_csum);
    black += get_sum(0, x + k + 1, y, 2 * k - 1, black_csum);
    black += get_sum(y + k + 1, 0, 2 * k - 1, x, black_csum);
    black += get_sum(y + k + 1, x + k + 1, 2 * k - 1, 2 * k - 1, black_csum);

    int white = 0;
    white += get_sum(0, x + 1, y, x + k, white_csum);
    white += get_sum(y + 1, 0, y + k, x, white_csum);
    white += get_sum(y + 1, x + k + 1, y + k, 2 * k - 1, white_csum);
    white += get_sum(y + k + 1, x + 1, 2 * k - 1, x + k, white_csum);
    chmax(ans, black + white);
}

int main() {
    int n, k;
    cin >> n >> k;
    vvi white(2 * k, vi(2 * k));
    vvi black(2 * k, vi(2 * k));
    rep(i, n) {
        int x, y;
        char c;
        cin >> x >> y >> c;
        if (c == 'W')
            white[x % (2 * k)][y % (2 * k)]++;
        else
            black[x % (2 * k)][y % (2 * k)]++;
    }
    vvi white_csum(2 * k + 1, vi(2 * k + 1));
    vvi black_csum(2 * k + 1, vi(2 * k + 1));
    for (int i = 1; i <= 2 * k; i++) {
        for (int j = 1; j <= 2 * k; j++) {
            white_csum[i][j] = white_csum[i - 1][j] + white_csum[i][j - 1] -
                               white_csum[i - 1][j - 1] + white[i - 1][j - 1];
            black_csum[i][j] = black_csum[i - 1][j] + black_csum[i][j - 1] -
                               black_csum[i - 1][j - 1] + black[i - 1][j - 1];
        }
    }
    rep(i, k) {
        rep(j, k) {
            calc(i, j, white_csum, black_csum, n, k);
            calc(i, j, black_csum, white_csum, n, k);
        }
    }
    fin(ans);
}
