問題文の引用元：https://atcoder.jp/contests/code-festival-2015-quala/tasks/codefestival_2015_qualA_b
B - とても長い数列Editorial / $(function() {var ts = $('#task-statement span.lang');if (ts.children('span').size() <= 1) {$('#task-lang-btn').hide();ts.children('span').show();return;}var REMEMBER_LB = 5;var LS_KEY = 'task_lang';var taskLang = getLS(LS_KEY) || '';var changeTimes = 0;if (taskLang == 'ja' || taskLang == 'en') {changeTimes = REMEMBER_LB;} else {var changeTimes = parseInt(taskLang, 10);if (isNaN(changeTimes)) {changeTimes = 0;delLS(LS_KEY);}changeTimes++;taskLang = LANG;}ts.children('span.lang-' + taskLang).show();$('#task-lang-btn span').click(function() {var l = $(this).data('lang');ts.children('span').hide();ts.children('span.lang-' + l).show();if (changeTimes < REMEMBER_LB) setLS(LS_KEY, changeTimes);else setLS(LS_KEY, l);});});
Time Limit : 2 sec / Memory Limit : 256 MB
問題文 : 高橋君は長さ N の数列 A = \{A_1, A_2, ..., A_N\} を用意しました。高橋君は数列 A を元に「とても長い数列」を、以下のような手順で作ろうとしています。まず長さ 0 の数列を用意し、これを S と呼ぶことにする。S、A_1、S をこの順につなげた数列を新たな S とする。S、A_2、S をこの順につなげた数列を新たな S とする。（中略）S、A_N、S をこの順につなげた数列を新たな S とする。この時点での S を「とても長い数列」とする。例えば N = 3, A_1 = 1, A_2 = 2, A_3 = 3 なら、S は \{\}　→ \{1\} → \{1,2,1\} → \{1,2,1,3,1,2,1\} と変化し、「とても長い数列」は \{1,2,1,3,1,2,1\} となります。高橋君はこの手順によって作られる「とても長い数列」に含まれる数の和を知りたがっています。これを高橋君の代わりに計算するプログラムを作成してください。入力入力は以下の形式で標準入力から与えられる。NA_1 A_2 ... A_N1 行目には、整数 N (1 ≦ N ≦ 30) が与えられる。2 行目には、N 個の整数が空白区切りで与えられる。このうち i (1 ≦ i ≦ N) 番目には、整数 A_i (0 ≦ A_i ≦ 100) が与えられる。「とても長い数列」に含まれる数の和は 10^9 以下となることが保証されている。出力「とても長い数列」に含まれる数の和を 1 行に出力せよ。出力の末尾に改行を入れること。部分点この問題には部分点が設定されている。N ≦ 10 を満たすデータセットに正解した場合は、60 点が与えられる。追加の
制約のないデータセットに正解した場合は、上記とは別に 40 点が与えられる。
// ソースコードの引用元 : https://atcoder.jp/contests/code-festival-2015-quala/submissions/10982649
// 提出ID : 10982649
// 問題ID : codefestival_2015_qualA_b
// コンテストID : code-festival-2015-quala
// ユーザID : xryuseix
// コード長 : 2001
// 実行時間 : 2



#include <iostream>
#include <cstdio>
#include <algorithm>
#include <cmath>
#include <vector>
#include <list>
#include <set>
#include <map>
#include <queue>
#include <stack>
#include <cctype>
#include <cassert>
#include <climits>
#include <string>
#include <bitset>
#include <cfloat>
#include <unordered_set>
#pragma GCC optimize("Ofast")
using namespace std;
typedef long double ld;
typedef long long int ll;
typedef unsigned long long int ull;
typedef vector<int> vi;
typedef vector<char> vc;
typedef vector<bool> vb;
typedef vector<double> vd;
typedef vector<string> vs;
typedef vector<ll> vll;
typedef vector<pair<int,int> > vpii;
typedef vector<vector<int> > vvi;
typedef vector<vector<char> > vvc;
typedef vector<vector<string> > vvs;
typedef vector<vector<ll> > vvll;
#define rep(i,n) for(int i = 0; i < (n); ++i)
#define rrep(i,n) for(int i = 1; i <= (n); ++i)
#define irep(it, stl) for(auto it = stl.begin(); it != stl.end(); it++)
#define drep(i,n) for(int i = (n) - 1; i >= 0; --i)
#define fin(ans) cout << (ans) << '\n'
#define STLL(s) strtoll(s.c_str(), NULL, 10)
#define mp(p,q) make_pair(p, q)
#define pb(n) push_back(n)
#define all(a) a.begin(), a.end()
#define rall(a) a.rbegin(), a.rend()
#define Sort(a) sort(a.begin(), a.end())
#define Rort(a) sort(a.rbegin(), a.rend())
#define MATHPI acos(-1)
#define itn int;
#define endl '\n';
int dx[8] = {1, 0, -1, 0, 1, -1, -1, 1};
int dy[8] = {0, 1, 0, -1, 1, 1, -1, -1};
template <class T> inline bool chmax(T& a,T b){if(a<b){a=b;return 1;} return 0;}
template <class T> inline bool chmin(T& a,T b){if(a>b){a=b;return 1;} return 0;}
struct io{io(){ios::sync_with_stdio(false);cin.tie(0);}};
const int INF = INT_MAX;
const ll LLINF = 1LL<<60;
const ll MOD = 1000000007;
const double EPS = 1e-9;


int main() {
    
    ll ans=0;
    int n;
    cin>>n;
    vll v(n);
    rep(i,n)cin>>v[i];
    for(int i=0;i<n;i++){
        ans+=pow(2,i)*v[n-i-1];
    }
    fin(ans);
}
