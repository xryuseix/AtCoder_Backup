問題文の引用元：https://atcoder.jp/contests/arc054/tasks/arc054_b
B - ムーアの法則Editorial / $(function() {var ts = $('#task-statement span.lang');if (ts.children('span').size() <= 1) {$('#task-lang-btn').hide();ts.children('span').show();return;}var REMEMBER_LB = 5;var LS_KEY = 'task_lang';var taskLang = getLS(LS_KEY) || '';var changeTimes = 0;if (taskLang == 'ja' || taskLang == 'en') {changeTimes = REMEMBER_LB;} else {var changeTimes = parseInt(taskLang, 10);if (isNaN(changeTimes)) {changeTimes = 0;delLS(LS_KEY);}changeTimes++;taskLang = LANG;}ts.children('span.lang-' + taskLang).show();$('#task-lang-btn span').click(function() {var l = $(this).data('lang');ts.children('span').hide();ts.children('span.lang-' + l).show();if (changeTimes < REMEMBER_LB) setLS(LS_KEY, changeTimes);else setLS(LS_KEY, l);});});
Time Limit : 2 sec / Memory Limit : 256 MB
問題文 : 高橋君はタカハシマン関数という関数に興味を持ちました。高橋君は T(334) ( T はタカハシマン関数を表す)を計算したいと思いましたが、それは現代のコンピュータでは P 年がかかるため、とても難しいということが分かりました。半ば計算をあきらめかけていた高橋君でしたが、世の中にはムーアの法則という法則があることを知りました。ムーアの法則によると、コンピュータの速度は 1.5 年ごとに 2 倍になる速度で、指数関数的に増大することが分かりました。より正確には、x 年後にはコンピュータの速度は現代の 2^{x/1.5} 倍になります。高橋君は適切なタイミングで計算を始めることで、T(334) の計算をできるだけ早く終わらせたいと思いました。もちろん計算中にコンピュータを変えることはできないので、計算を終えるまでの時間は (計算を始めるまでの時間)+(計算を始めた時点のコンピュータで T(334) を計算するのにかかる時間) であらわされます。計算が終わるまでの最短の時間を求めてください。
制約0 < P ≦ 10^{18}P は実数で、小数点以下第 4 位まで与えられる。入力入力は以下の形式で標準入力から与えられる。P出力計算が終わるまでにかかる最小の時間を 1 行に出力せよ。絶対誤差あるいは相対誤差が 10^{-8} 以下のとき正答と認められる。出力の最後には改行を忘れないこと。



#include <algorithm>
#include <bitset>
#include <cassert>
#include <cctype>
#include <cfloat>
#include <climits>
#include <cmath>
#include <cstdio>
#include <deque>
#include <iomanip>
#include <iostream>
#include <list>
#include <map>
#include <queue>
#include <random>
#include <set>
#include <stack>
#include <string>
#include <unordered_set>
#include <vector>
using namespace std;
typedef long double ld;
typedef long long int ll;
typedef unsigned long long int ull;
typedef vector<int> vi;
typedef vector<char> vc;
typedef vector<bool> vb;
typedef vector<double> vd;
typedef vector<string> vs;
typedef vector<ll> vll;
typedef vector<pair<int, int>> vpii;
typedef vector<pair<ll, ll>> vpll;
typedef vector<vi> vvi;
typedef vector<vvi> vvvi;
typedef vector<vc> vvc;
typedef vector<vs> vvs;
typedef vector<vll> vvll;
typedef map<int, int> mii;
typedef set<int> si;
#define rep(i, n) for (ll i = 0; i < (n); ++i)
#define rrep(i, n) for (int i = 1; i <= (n); ++i)
#define arep(i, v) for (auto i : v)
#define irep(it, stl) for (auto it = stl.begin(); it != stl.end(); it++)
#define drep(i, n) for (int i = (n)-1; i >= 0; --i)
#define fin(ans) cout << (ans) << '\n'
#define STLL(s) strtoll(s.c_str(), NULL, 10)
#define mp(p, q) make_pair(p, q)
#define pb(n) push_back(n)
#define all(a) a.begin(), a.end()
#define rall(a) a.rbegin(), a.rend()
#define Sort(a) sort(a.begin(), a.end())
#define Rort(a) sort(a.rbegin(), a.rend())
#define MATHPI acos(-1)
#define fi first
#define se second
// #include <atcoder/all>
// using namespace atcoder;
constexpr int dx[8] = {1, 0, -1, 0, 1, -1, -1, 1};
constexpr int dy[8] = {0, 1, 0, -1, 1, 1, -1, -1};
template <class T>
inline bool chmax(T& a, T b) {
    if (a < b) {
        a = b;
        return 1;
    }
    return 0;
}
template <class T>
inline bool chmin(T& a, T b) {
    if (a > b) {
        a = b;
        return 1;
    }
    return 0;
}
template <class T>
inline void dump(T& v) {
    irep(i, v) { cout << (*i) << ((i == --v.end()) ? '\n' : ' '); }
}
template <class T, class U>
inline void dump(map<T, U>& v) {
    irep(i, v) { cout << i->first << " " << i->second << '\n'; }
}
inline string getline() {
    string s;
    getline(cin, s);
    return s;
}
inline void yn(const bool b) { b ? fin("yes") : fin("no"); }
inline void Yn(const bool b) { b ? fin("Yes") : fin("No"); }
inline void YN(const bool b) { b ? fin("YES") : fin("NO"); }
struct io {
    io() {
        ios::sync_with_stdio(false);
        cin.tie(0);
    }
};
template <typename Head, typename Value>
auto vectors(const Head& head, const Value& v) {
    return vector<Value>(head, v);
}
template <typename Head, typename... Tail>
auto vectors(Head x, Tail... tail) {
    auto inner = vectors(tail...);
    return vector<decltype(inner)>(x, inner);
}
const int INF = INT_MAX;
constexpr ll LLINF = 1LL << 61;
constexpr ll MOD = 1000000007;  // 998244353;
constexpr ld EPS = 1e-11;

/* --------------------   ここまでテンプレ   -------------------- */

double f(double x, double p) { return x + p / pow(2, x / 1.5); }

double ternary_search(double p) {
    double l = 0, r = 1e18;
    while (l + pow(10, -8) < r) {
        double c1 = l + (r - l) / 3;
        double c2 = r - (r - l) / 3;
        if (f(c1, p) < f(c2, p)) {
            r = c2;
        } else {
            l = c1;
        }
    }
    return f(l, p);
}

int main() {
    double n;
    cin >> n;
    auto ans = ternary_search(n);
    printf("%.9f\n", ans);
}
