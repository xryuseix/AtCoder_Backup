問題文の引用元：https://atcoder.jp/contests/abc009/tasks/abc009_1
A - 引越し作業Editorial / $(function() {var ts = $('#task-statement span.lang');if (ts.children('span').size() <= 1) {$('#task-lang-btn').hide();ts.children('span').show();return;}var REMEMBER_LB = 5;var LS_KEY = 'task_lang';var taskLang = getLS(LS_KEY) || '';var changeTimes = 0;if (taskLang == 'ja' || taskLang == 'en') {changeTimes = REMEMBER_LB;} else {var changeTimes = parseInt(taskLang, 10);if (isNaN(changeTimes)) {changeTimes = 0;delLS(LS_KEY);}changeTimes++;taskLang = LANG;}ts.children('span.lang-' + taskLang).show();$('#task-lang-btn span').click(function() {var l = $(this).data('lang');ts.children('span').hide();ts.children('span.lang-' + l).show();if (changeTimes < REMEMBER_LB) setLS(LS_KEY, changeTimes);else setLS(LS_KEY, l);});});
Time Limit : 2 sec / Memory Limit : 256 MB
問題文 : 高橋君は引越し作業の真っ最中です。荷物をすべてダンボールにまとめ終え、ちょうどいま家の前にトラックが到着したところです。高橋君は N 個あるダンボールをすべてトラックまで運ぶ必要があります。ダンボールはとても重いですが、高橋君は力持ちなので片手で 1 つのダンボールを持つことができます。つまり、家とトラックの間を 1 往復するときに最大でそれぞれの手にダンボールを 1 個ずつ、合計で 2 個のダンボールをいちどに持って運ぶことができます。ダンボールの個数が多いため、高橋君は N 個すべてのダンボールを運びきるために家とトラックの間を最低何往復しなければならないのかが気になりました。入力入力は以下の形式で標準入力から与えられる。N1 行目には、ダンボールの個数を表す整数 N (1 ≦ N ≦ 1,000) が与えられる。出力ダンボールをすべて運びきるために必要な最低の往復回数を 1 行に出力せよ。出力の末尾にも改行をいれること。
// ソースコードの引用元 : https://atcoder.jp/contests/abc009/submissions/4320576
// 提出ID : 4320576
// 問題ID : abc009_1
// コンテストID : abc009
// ユーザID : xryuseix
// コード長 : 624
// 実行時間 : 1



#include<iostream>
#include<algorithm>
#include<cmath>
#include<cstdio>
#include<string>
#include<vector>
#include<list>
#include<set>
#include<cctype>
#define ld long double
#define ll long long int
#define ull unsigned long long int
using namespace std;
template<class T> inline bool chmax(T& a,T b){if(a<b){a=b;return 1;}return 0;}
template<class T> inline bool chmin(T& a,T b){if(a>b){a=b;return 1;}return 0;}
const long long INF=1LL<<60;
//set<int>::iterator it;



int main(void){
	ios::sync_with_stdio(false); cin.tie(0);
	
	int a;
	cin>>a;
	cout<<(a+1)/2<<endl;
	
	
	
	
	
	return 0;
}
