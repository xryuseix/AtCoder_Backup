問題文の引用元：https://atcoder.jp/contests/abc112/tasks/abc112_c
C - PyramidEditorial / $(function() {var ts = $('#task-statement span.lang');if (ts.children('span').size() <= 1) {$('#task-lang-btn').hide();ts.children('span').show();return;}var REMEMBER_LB = 5;var LS_KEY = 'task_lang';var taskLang = getLS(LS_KEY) || '';var changeTimes = 0;if (taskLang == 'ja' || taskLang == 'en') {changeTimes = REMEMBER_LB;} else {var changeTimes = parseInt(taskLang, 10);if (isNaN(changeTimes)) {changeTimes = 0;delLS(LS_KEY);}changeTimes++;taskLang = LANG;}ts.children('span.lang-' + taskLang).show();$('#task-lang-btn span').click(function() {var l = $(this).data('lang');ts.children('span').hide();ts.children('span.lang-' + l).show();if (changeTimes < REMEMBER_LB) setLS(LS_KEY, changeTimes);else setLS(LS_KEY, l);});});
Time Limit : 3 sec / Memory Limit : 1024 MB﻿
配点: 300 点
問題文 : 古代すぬけ国では, AtCoder 社長「高橋君」の権威を高めるために, ピラミッドが建てられていた.ピラミッドには 中心座標 (C_X, C_Y) と 高さ H が定まっており, 座標 (X, Y) の高度は max(H - |X - C_X| - |Y - C_Y|, 0) であった.  探検家の青木君は, このピラミッドの中心座標と高さを求めるために調査を行った. その結果, 次のような情報が得られた.  C_X, C_Y は 0 以上 100 以下の整数で, H は 1 以上の整数であった.上記と別に N 個の情報が得られた. そのうち i 個目の情報は, 「座標 (x_i, y_i) の高度は h_i である」この情報は, ピラミッドの中心座標と高さを特定するのに十分であった. 情報を手掛かりに, これらの値を求めなさい.  
制約N は 1 以上 100 以下の整数x_i, y_i は 0 以上 100 以下の整数h_i は 0 以上 10^9 以下の整数N 個の座標 (x_1, y_1), (x_2, y_2), (x_3, y_3), ..., (x_N, y_N) はすべて異なるピラミッドの中心座標と高さをちょうど 1 つに特定することができる入力入力は以下の形式で標準入力から与えられる.  Nx_1 y_1 h_1x_2 y_2 h_2x_3 y_3 h_3:x_N y_N h_N出力特定した中心座標と高さを表す整数 C_X, C_Y, H を空白区切りで, 1 行に出力しなさい.  
// ソースコードの引用元 : https://atcoder.jp/contests/abc112/submissions/10722875
// 提出ID : 10722875
// 問題ID : abc112_c
// コンテストID : abc112
// ユーザID : xryuseix
// コード長 : 2470
// 実行時間 : 23



#include <iostream>
#include <cstdio>
#include <algorithm>
#include <cmath>
#include <vector>
#include <list>
#include <set>
#include <map>
#include <queue>
#include <stack>
#include <cctype>
#include <cassert>
#include <climits>
#include <string>
#include <bitset>
#include <cfloat>
#include <unordered_set>
#pragma GCC optimize("Ofast")
using namespace std;
typedef long double ld;
typedef long long int ll;
typedef unsigned long long int ull;
typedef vector<int> vi;
typedef vector<char> vc;
typedef vector<bool> vb;
typedef vector<double> vd;
typedef vector<string> vs;
typedef vector<ll> vll;
typedef vector<pair<int,int> > vpii;
typedef vector<vector<int> > vvi;
typedef vector<vector<char> > vvc;
typedef vector<vector<string> > vvs;
typedef vector<vector<ll> > vvll;
#define rep(i,n) for(int i = 0; i < (n); ++i)
#define rrep(i,n) for(int i = 1; i <= (n); ++i)
#define irep(it, stl) for(auto it = stl.begin(); it != stl.end(); it++)
#define drep(i,n) for(int i = (n) - 1; i >= 0; --i)
#define fin(ans) cout << (ans) << '\n'
#define STLL(s) strtoll(s.c_str(), NULL, 10)
#define mp(p,q) make_pair(p, q)
#define pb(n) push_back(n)
#define all(a) a.begin(), a.end()
#define rall(a) a.rbegin(), a.rend()
#define Sort(a) sort(a.begin(), a.end())
#define Rort(a) sort(a.rbegin(), a.rend())
#define MATHPI acos(-1)
#define itn int;
int dx[8] = {1, 0, -1, 0, 1, -1, -1, 1};
int dy[8] = {0, 1, 0, -1, 1, 1, -1, -1};
template <class T> inline bool chmax(T& a,T b){if(a<b){a=b;return 1;} return 0;}
template <class T> inline bool chmin(T& a,T b){if(a>b){a=b;return 1;} return 0;}
struct io{io(){ios::sync_with_stdio(false);cin.tie(0);}};
const int INF = INT_MAX;
const ll LLINF = 1LL<<60;
const ll MOD = 1000000007;
const double EPS = 1e-9;



int main() {
    
    ll n;
    cin>>n;
    vvll v(n,vll(3));
    rep(i,n)cin>>v[i][0]>>v[i][1]>>v[i][2];
    for(ll x=0;x<=100;x++){
        for(ll y=0;y<=100;y++){
            bool ch=true;
            ll height=INF;
            rep(i,n)chmin(height,abs(v[i][0]-x)+abs(v[i][1]-y)+v[i][2]);
            rep(i,n){
                ll h=abs(v[i][0]-x)+abs(v[i][1]-y)+v[i][2];
                if(h==height||!v[i][2])continue;
                if(h!=height){
                    ch=false;
                }
            }
            if(ch){
                cout<<x<<" "<<y<<" "<<height<<endl;
                return 0;
            }
        }
    }

}
