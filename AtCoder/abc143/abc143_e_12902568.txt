問題文の引用元：https://atcoder.jp/contests/abc143/tasks/abc143_e
E - Travel by CarEditorial / $(function() {var ts = $('#task-statement span.lang');if (ts.children('span').size() <= 1) {$('#task-lang-btn').hide();ts.children('span').show();return;}var REMEMBER_LB = 5;var LS_KEY = 'task_lang';var taskLang = getLS(LS_KEY) || '';var changeTimes = 0;if (taskLang == 'ja' || taskLang == 'en') {changeTimes = REMEMBER_LB;} else {var changeTimes = parseInt(taskLang, 10);if (isNaN(changeTimes)) {changeTimes = 0;delLS(LS_KEY);}changeTimes++;taskLang = LANG;}ts.children('span.lang-' + taskLang).show();$('#task-lang-btn span').click(function() {var l = $(this).data('lang');ts.children('span').hide();ts.children('span.lang-' + l).show();if (changeTimes < REMEMBER_LB) setLS(LS_KEY, changeTimes);else setLS(LS_KEY, l);});});
Time Limit : 2 sec / Memory Limit : 1024 MB
配点 : 500 点
問題文 : 1 から N までの番号がついた N 個の町と M 本の道があります。i 本目の道は町 A_i と町 B_i を双方向に結び、その長さは C_i です。高橋君はこれらの町の間を、道を車で通行することで移動します。車の燃料タンクの容量は L リットルであり、距離 1 を移動する度に燃料を 1 リットル消費します。移動中に町を訪れた場合、燃料をタンクが一杯になるまで補給することが出来ます (補給しないという選択も可能です)。道の途中で燃料が尽きるような移動は出来ません。以下の Q 個のクエリに答えてください。はじめ、車の燃料タンクは一杯です。町 s_i から町 t_i へ移動するとき、最小で何回途中で燃料を補給する必要があるかを答えてください。町 t_i まで移動出来ない場合は −1 を出力してください。
制約入力は全て整数2 ≤ N ≤ 3000 ≤ M ≤ \frac{N(N-1)}{2}1 \leq L \leq 10^91 ≤ A_i, B_i ≤ NA_i \neq B_i\left(A_i, B_i\right) \neq \left(A_j, B_j\right) ( i \neq j のとき)\left(A_i, B_i\right) \neq \left(B_j, A_j\right) ( i \neq j のとき)1 \leq C_i \leq 10^91 ≤ Q ≤ N\left(N-1\right)1 ≤ s_i, t_i ≤ Ns_i \neq t_i\left(s_i, t_i\right) \neq \left(s_j, t_j\right) ( i \neq j のとき)入力入力は以下の形式で標準入力から与えられる。N M LA_1 B_1 C_1:A_M B_M C_MQs_1 t_1:s_Q t_Q出力Q 行出力せよ。i 行目には、町 s_i から町 t_i へ移動するとき、最小で何回燃料を補給する必要があるかを出力せよ。町 t_i まで移動出来ない場合は −1 を出力せよ。
// ソースコードの引用元 : https://atcoder.jp/contests/abc143/submissions/12902568
// 提出ID : 12902568
// 問題ID : abc143_e
// コンテストID : abc143
// ユーザID : xryuseix
// コード長 : 4134
// 実行時間 : 509



#include <iostream>
#include <cstdio>
#include <algorithm>
#include <cmath>
#include <vector>
#include <list>
#include <set>
#include <map>
#include <queue>
#include <stack>
#include <cctype>
#include <cassert>
#include <climits>
#include <string>
#include <bitset>
#include <cfloat>
#include <random>
#include <iomanip>
#include <unordered_set>
#pragma GCC optimize("Ofast")
using namespace std;
typedef long double ld;
typedef long long int ll;
typedef unsigned long long int ull;
typedef vector<int> vi;
typedef vector<char> vc;
typedef vector<bool> vb;
typedef vector<double> vd;
typedef vector<string> vs;
typedef vector<ll> vll;
typedef vector<pair<int,int> > vpii;
typedef vector<pair<ll,ll> > vpll;
typedef vector<vector<int> > vvi;
typedef vector<vector<char> > vvc;
typedef vector<vector<string> > vvs;
typedef vector<vector<ll> > vvll;
typedef map<int,int> mii;
typedef set<int> si;
#define rep(i,n) for(int i = 0; i < (n); ++i)
#define rrep(i,n) for(int i = 1; i <= (n); ++i)
#define arep(i,v) for(auto i : v)
#define irep(it, stl) for(auto it = stl.begin(); it != stl.end(); it++)
#define drep(i,n) for(int i = (n) - 1; i >= 0; --i)
#define fin(ans) cout << (ans) << '\n'
#define STLL(s) strtoll(s.c_str(), NULL, 10)
#define mp(p,q) make_pair(p, q)
#define pb(n) push_back(n)
#define all(a) a.begin(), a.end()
#define rall(a) a.rbegin(), a.rend()
#define Sort(a) sort(a.begin(), a.end())
#define Rort(a) sort(a.rbegin(), a.rend())
#define MATHPI acos(-1)
#define itn int
// #define endl '\n';
#define fi first
#define se second
#define NONVOID [[nodiscard]]
constexpr int dx[8] = {1, 0, -1, 0, 1, -1, -1, 1};
constexpr int dy[8] = {0, 1, 0, -1, 1, 1, -1, -1};
template <class T> inline bool chmax(T& a,T b){if(a<b){a=b;return 1;} return 0;}
template <class T> inline bool chmin(T& a,T b){if(a>b){a=b;return 1;} return 0;}
template <class T> inline void dump(T &v){irep(i, v){cout<<*i<<((i==--v.end())?'\n':' ');}}
inline string getline(){string s; getline(cin,s); return s;}
inline void yn(const bool b){b?fin("yes"):fin("no");}
inline void Yn(const bool b){b?fin("Yes"):fin("No");}
inline void YN(const bool b){b?fin("YES"):fin("NO");}
struct io{io(){ios::sync_with_stdio(false);cin.tie(0);}};
const int INF = INT_MAX;
constexpr ll LLINF = 1LL<<60;
constexpr ll MOD = 1000000007;
constexpr double EPS = 1e-9;

class WAR_FLY {
public:
    vvll d; // 辺の数
    int V; // 頂点の数
    
    WAR_FLY(int n) {
        V = n;
        d = vector<vector<ll> > (n,vector<ll>(n));
        for(int i = 0; i < V; i++) {
            for(int j = 0; j < V; j++) {
                if(i == j) {
                    d[i][j] = 0;
                }
                else {
                    d[i][j] = LLINF;
                }
            }
        }
    }

    void warshall_floyd(void) {
        for(int k = 0; k < V; k++) {
            for(int i = 0; i < V; i++) {
                for(int j = 0; j < V; j++) {
                    d[i][j] = min((ll)d[i][j], (ll)d[i][k] + (ll)d[k][j]);
                }
            }
        }
    }

    void add(int from, int to, int cost) {
        d[from][to] = cost;
    }

    bool is_negative_loop(void) {
        for(int i = 0; i < V; i++) {
            if(d[i][i] < 0) return true;
        }
        return false;
    }

    void show(void) {
        for(int i = 0; i < V; i++) {
            for(int j = 0; j < V; j++) {
                cout << d[i][j] << " ";
            }
            cout << endl;
        }
    }
};

int main() {

   int n,m,l,q;
   cin>>n>>m>>l;
    WAR_FLY wa(n);
    rep(i,m){
        int a,b,c;
        cin>>a>>b>>c;
        a--;b--;
        wa.add(a,b,c);
        wa.add(b,a,c);
    }
    wa.warshall_floyd();
    WAR_FLY wa2(n);
    rep(i,n){
        rep(j,n){
            if(wa.d[i][j]<=l)wa2.add(i,j,1);
        }
    }
    cin>>q;
    wa2.warshall_floyd();
    rep(i,q){
        int s,t;
        cin>>s>>t;
        s--;t--;
        if(wa2.d[s][t] != LLINF)fin(wa2.d[s][t]-1);
        else fin(-1);
    }
}
