問題文の引用元：https://atcoder.jp/contests/abc035/tasks/abc035_b
B - ドローンEditorial / $(function() {var ts = $('#task-statement span.lang');if (ts.children('span').size() <= 1) {$('#task-lang-btn').hide();ts.children('span').show();return;}var REMEMBER_LB = 5;var LS_KEY = 'task_lang';var taskLang = getLS(LS_KEY) || '';var changeTimes = 0;if (taskLang == 'ja' || taskLang == 'en') {changeTimes = REMEMBER_LB;} else {var changeTimes = parseInt(taskLang, 10);if (isNaN(changeTimes)) {changeTimes = 0;delLS(LS_KEY);}changeTimes++;taskLang = LANG;}ts.children('span.lang-' + taskLang).show();$('#task-lang-btn span').click(function() {var l = $(this).data('lang');ts.children('span').hide();ts.children('span.lang-' + l).show();if (changeTimes < REMEMBER_LB) setLS(LS_KEY, changeTimes);else setLS(LS_KEY, l);});});
Time Limit : 2 sec / Memory Limit : 256 MB
問題文 : 無限に広い二次元グリッドの原点 (0, 0) に高橋君と 1 台のドローンがいます。このドローンは文字列が与えられた時、文字列の先頭から末尾までのそれぞれの文字を 1 つの命令と解釈して順に実行します。命令は以下の 4 種類です。L 現在のドローンの位置を (x, y) として (x-1, y) に移動するR 現在のドローンの位置を (x, y) として (x+1, y) に移動するU 現在のドローンの位置を (x, y) として (x, y+1) に移動するD 現在のドローンの位置を (x, y) として (x, y-1) に移動する今、ドローンに何らかの命令が与えられ、どこかへと移動しました。高橋君はドローンに送られた命令を表す文字列である S を手に入れたものの、いくつかの箇所は破損し?になり分からなくなってしまいました。ただし、?が元々はL、R、U、Dのいずれかの文字だったことが分かっています。ドローンと高橋君の距離はドローンの位置を (x,y) としてマンハッタン距離 |x|+|y| で表されます。求める値の種類を表す整数 T が与えられるので、移動を終えたあとのドローンと高橋君の距離としてありうる値のうち、 T=1 ならば最大値を、 T=2 ならば最小値を求めてください。入力入力は以下の形式で標準入力から与えられる。ST1 行目にドローンに与えられた命令を表す文字列 S(1≦|S|≦10^5) が与えられる。ここで、 |S| は文字列 S の長さを表す。S はL、R、U、D、?の 5 種類の文字のみからなる。2 行目に求める値の種類を表す整数 T (1≦T≦2) が与えられる。出力T=1 ならば移動を終えたあとのドローンと高橋君の距離としてありうる値のうち、最大値を 1 行に出力せよ。T=2 ならば移動を終えたあとのドローンと高橋君の距離としてありうる値のうち、最小値を 1 行に出力せよ。改行を忘れないこと。部分点この問題には部分点が設定されている。T=1 のデータセットに全て正解した場合 100 点が与えられる。追加
制約のないデータセットに正解した場合、追加で 1 点が与えられ、合計 101 点が得られる。
// ソースコードの引用元 : https://atcoder.jp/contests/abc035/submissions/4323163
// 提出ID : 4323163
// 問題ID : abc035_b
// コンテストID : abc035
// ユーザID : xryuseix
// コード長 : 1140
// 実行時間 : 2



#include<iostream>
#include<algorithm>
#include<cmath>
#include<cstdio>
#include<string>
#include<vector>
#include<list>
#include<set>
#include<cctype>
#define ld long double
#define ll long long int
#define ull unsigned long long int
using namespace std;
template<class T> inline bool chmax(T& a,T b){if(a<b){a=b;return 1;}return 0;}
template<class T> inline bool chmin(T& a,T b){if(a>b){a=b;return 1;}return 0;}
const long long INF=1LL<<60;
//set<int>::iterator it;



int main(void){
	ios::sync_with_stdio(false); cin.tie(0);
	
	string s;
	int n,i,j;
	cin>>s>>n;
	int a[5]={0};
	for(i=0;i<s.length();i++){
		switch(s[i]){
			case 'U':a[0]++;
				break;
			case 'D':a[1]++;
				break;
			case 'L':a[2]++;
				break;
			case 'R':a[3]++;
				break;
			case '?':a[4]++;
				break;
		}
	}
	j=min(a[0],a[1]);
	a[0]-=j;a[1]-=j;
	j=min(a[2],a[3]);
	a[2]-=j;a[3]-=j;
	int sum=a[0]+a[1]+a[2]+a[3];
	if(n==1){
		sum+=a[4];
		cout<<sum<<endl;
		return 0;
	}
	sum-=a[4];
	if(sum>=0){
		cout<<sum<<endl;
		return 0;
	}
	sum=-sum%2;
	cout<<sum<<endl;
	
	
	
	
	
	
	
	
	
	
	return 0;
}
