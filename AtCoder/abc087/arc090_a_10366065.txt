問題文の引用元：https://atcoder.jp/contests/abc087/tasks/arc090_a
C - CandiesEditorial / $(function() {var ts = $('#task-statement span.lang');if (ts.children('span').size() <= 1) {$('#task-lang-btn').hide();ts.children('span').show();return;}var REMEMBER_LB = 5;var LS_KEY = 'task_lang';var taskLang = getLS(LS_KEY) || '';var changeTimes = 0;if (taskLang == 'ja' || taskLang == 'en') {changeTimes = REMEMBER_LB;} else {var changeTimes = parseInt(taskLang, 10);if (isNaN(changeTimes)) {changeTimes = 0;delLS(LS_KEY);}changeTimes++;taskLang = LANG;}ts.children('span.lang-' + taskLang).show();$('#task-lang-btn span').click(function() {var l = $(this).data('lang');ts.children('span').hide();ts.children('span.lang-' + l).show();if (changeTimes < REMEMBER_LB) setLS(LS_KEY, changeTimes);else setLS(LS_KEY, l);});});
Time Limit : 2 sec / Memory Limit : 256 MB
配点 : 300 点
問題文 : 2 \times N のマス目があります。上から i 行目、左から j 列目 (1 \leq i \leq 2, 1 \leq j \leq N) のマスをマス (i, j) と表すことにします。あなたははじめ、左上のマス (1, 1) にいます。あなたは、右方向または下方向への移動を繰り返し、右下のマス (2, N) に移動しようとしています。マス (i, j) には A_{i, j} 個のアメが置かれています。あなたは移動中に通ったマスに置いてあるアメをすべて回収します。左上および右下のマスにもアメが置かれており、あなたはこれらのマスに置かれているアメも回収します。移動方法をうまく選んだとき、最大で何個のアメを回収できるでしょうか。
制約1 \leq N \leq 1001 \leq A_{i, j} \leq 100 (1 \leq i \leq 2, 1 \leq j \leq N)入力入力は以下の形式で標準入力から与えられる。NA_{1, 1} A_{1, 2} ... A_{1, N}A_{2, 1} A_{2, 2} ... A_{2, N}出力回収できるアメの個数の最大値を出力せよ。
// ソースコードの引用元 : https://atcoder.jp/contests/abc087/submissions/10366065
// 提出ID : 10366065
// 問題ID : arc090_a
// コンテストID : abc087
// ユーザID : xryuseix
// コード長 : 2196
// 実行時間 : 1



#include <iostream>
#include <cstdio>
#include <algorithm>
#include <cmath>
#include <vector>
#include <list>
#include <set>
#include <map>
#include <queue>
#include <stack>
#include <cctype>
#include <cassert>
#include <climits>
#include <string>
#include <bitset>
#include <cfloat>
#include <unordered_set>
#pragma GCC optimize("Ofast")
using namespace std;
typedef long double ld;
typedef long long int ll;
typedef unsigned long long int ull;
typedef vector<int> vi;
typedef vector<char> vc;
typedef vector<bool> vb;
typedef vector<double> vd;
typedef vector<string> vs;
typedef vector<ll> vll;
typedef vector<pair<int,int> > vpii;
typedef vector<vector<int> > vvi;
typedef vector<vector<char> > vvc;
typedef vector<vector<string> > vvs;
typedef vector<vector<ll> > vvll;
#define rep(i,n) for(int i = 0; i < (n); ++i)
#define rrep(i,n) for(int i = 1; i <= (n); ++i)
#define irep(it, stl) for(auto it = stl.begin(); it != stl.end(); it++)
#define drep(i,n) for(int i = (n) - 1; i >= 0; --i)
#define fin(ans) cout << (ans) << '\n'
#define STI(s) atoi(s.c_str())
#define mp(p,q) make_pair(p, q)
#define pb(n) push_back(n)
#define all(a) a.begin(), a.end()
#define rall(a) a.rbegin(), a.rend()
#define Sort(a) sort(a.begin(), a.end())
#define Rort(a) sort(a.rbegin(), a.rend())
#define MATHPI acos(-1)
#define itn int;
int dx[8] = {1, 0, -1, 0, 1, -1, -1, 1};
int dy[8] = {0, 1, 0, -1, 1, 1, -1, -1};
template <class T> inline bool chmax(T& a,T b){if(a<b){a=b;return 1;} return 0;}
template <class T> inline bool chmin(T& a,T b){if(a>b){a=b;return 1;} return 0;}
struct io{io(){ios::sync_with_stdio(false);cin.tie(0);}};
const int INF = INT_MAX;
const ll LLINF = 1LL<<60;
const ll MOD = 1000000007;
const double EPS = 1e-9;



int main(void) {

    int n;
    cin>>n;
    vvi a(2,vi(n));
    vvi dp(2,vi(n,0));
    rep(i,2)rep(j,n)cin>>a[i][j];
    dp[0][0]=a[0][0];
    rep(i,2){
        rep(j,n){
            if(i+1<2){
                chmax(dp[i+1][j],dp[i][j]+a[i+1][j]);
            }
            if(j+1<n){
                chmax(dp[i][j+1],dp[i][j]+a[i][j+1]);
            }
        }
    }
    fin(dp[1][n-1]);
}
