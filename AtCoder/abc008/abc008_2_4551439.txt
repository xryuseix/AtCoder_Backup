問題文の引用元：https://atcoder.jp/contests/abc008/tasks/abc008_2
B - 投票Editorial / $(function() {var ts = $('#task-statement span.lang');if (ts.children('span').size() <= 1) {$('#task-lang-btn').hide();ts.children('span').show();return;}var REMEMBER_LB = 5;var LS_KEY = 'task_lang';var taskLang = getLS(LS_KEY) || '';var changeTimes = 0;if (taskLang == 'ja' || taskLang == 'en') {changeTimes = REMEMBER_LB;} else {var changeTimes = parseInt(taskLang, 10);if (isNaN(changeTimes)) {changeTimes = 0;delLS(LS_KEY);}changeTimes++;taskLang = LANG;}ts.children('span.lang-' + taskLang).show();$('#task-lang-btn span').click(function() {var l = $(this).data('lang');ts.children('span').hide();ts.children('span.lang-' + l).show();if (changeTimes < REMEMBER_LB) setLS(LS_KEY, changeTimes);else setLS(LS_KEY, l);});});
Time Limit : 2 sec / Memory Limit : 256 MB
問題文 : とある組織で、リーダーを選ぶ選挙が行われた。組織は N 人の構成員で構成されており、各人は最もリーダーにふさわしい人物の名前を書いた。リーダーは、得票数が最も多い人物が選ばれることになっている。得票数が最も多い人物の名前を出力せよ。得票数が最も多い人物が複数いる場合は、そのうちどの名前を出力してもよい。入力入力は以下の形式で標準入力から与えられる。NS_1S_2:S_N1 行目には、組織の構成員の人数を表す整数 N (1 ≦ N ≦ 50) が与えられる。2 行目から N 行では、それぞれの構成員の投票内容を表す。N 行のうち i (1 ≦ i ≦ N) 行目には文字列 S_i が書かれている。S_i は i 番目の人の投票内容を表している。S_i は小文字の半角英字のみで構成されており、長さは 1 文字以上 50 文字以下である。出力得票数が最も多い人物の名前を出力せよ。得票数が最も多い人物が複数いる場合は、そのうちどの名前を出力してもよい。出力の末尾にも改行を入れること。
// ソースコードの引用元 : https://atcoder.jp/contests/abc008/submissions/4551439
// 提出ID : 4551439
// 問題ID : abc008_2
// コンテストID : abc008
// ユーザID : xryuseix
// コード長 : 1051
// 実行時間 : 1



#include<iostream>
#include<cstdio>
#include<algorithm>
#include<cmath>
#include<string>
#include<vector>
#include<list>
#include<set>
#include<map>
#include<queue>
#include<stack>
#include<cctype>
#include<climits>
#define ld long double
#define ll long long int
#define ull unsigned long long int
#define rep(i,n) for(i=0;i<n;i++)
#define fin(ans) cout<<(ans)<<endl
#define INF INT_MAX;
using namespace std;
template<class T> inline bool chmax(T& a,T b){if(a<b){a=b;return 1;}return 0;}
template<class T> inline bool chmin(T& a,T b){if(a>b){a=b;return 1;}return 0;}
const long long LLINF=1LL<<60;
//set<int>::iterator it;


int main(void){ios::sync_with_stdio(false);cin.tie(0);
    
	map<string,int> m;
	map<string,int>::iterator it;
	int i,n,max=0;
	cin>>n;
	string s,maxs;
	for(i=0;i<n;i++){
		cin>>s;
		if(m.find(s)==m.end()) m[s]=1;
		else m[s]++;
	}
	for(it=m.begin();it!=m.end();it++){
		if(it->second>max){
			max=it->second;
			maxs=it->first;
		}
		
	}
	cout<<maxs<<endl;
	
	
	return 0;
}
