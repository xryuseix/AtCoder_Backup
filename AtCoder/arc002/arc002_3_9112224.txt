問題文の引用元：https://atcoder.jp/contests/arc002/tasks/arc002_3
C - コマンド入力 / $(function() {var ts = $('#task-statement span.lang');if (ts.children('span').size() <= 1) {$('#task-lang-btn').hide();ts.children('span').show();return;}var REMEMBER_LB = 5;var LS_KEY = 'task_lang';var taskLang = getLS(LS_KEY) || '';var changeTimes = 0;if (taskLang == 'ja' || taskLang == 'en') {changeTimes = REMEMBER_LB;} else {var changeTimes = parseInt(taskLang, 10);if (isNaN(changeTimes)) {changeTimes = 0;delLS(LS_KEY);}changeTimes++;taskLang = LANG;}ts.children('span.lang-' + taskLang).show();$('#task-lang-btn span').click(function() {var l = $(this).data('lang');ts.children('span').hide();ts.children('span.lang-' + l).show();if (changeTimes < REMEMBER_LB) setLS(LS_KEY, changeTimes);else setLS(LS_KEY, l);});});
Time Limit : 2 sec / Memory Limit : 64 MB
問題文 : 高橋君は友達と格闘ゲームで対戦をすることにしました。格闘ゲームは A, B, X, Y の 4 種類のボタンを連続で入力するコマンドにより技を繰り出し戦うゲームです。しかし、普段格闘ゲームで遊ばない高橋君にとってコマンドの入力は難しく、友達に勝てそうにありません。そこで余っている L と R のボタンに連続した 2 つのボタン入力をショートカットとして割り当てることで、コマンドの入力を短縮したいと思います。例えば、コマンドが ABXY だと 4 回ボタンを入力する必要がありますが、L に AB、R に XY を割り当てることで LR の 2 回のボタン入力に短縮できます。L と R を用いて入力をなるべく短くした時に必要なボタンの入力回数を求めなさい。入力入力は以下の形式で標準入力から与えられる。Nc_{1}c_{2}...c_{N}1 行目にコマンドに必要なボタンの入力回数を表す N(1 ≦ N ≦ 1000)が与えられる。2 行目にコマンドの内容を表す N 文字の文字列が与えられる。i 文字目の文字である c_{i} は、A, B, X, Y のいずれかで与えられる。出力ショートカットを用いてコマンド入力に必要なボタンの入力回数を最小化したときの、ボタン入力回数を標準出力に 1 行で出力せよ。なお、最後には改行を出力せよ。49299



#include <iostream>
#include <cstdio>
#include <algorithm>
#include <cmath>
#include <vector>
#include <list>
#include <set>
#include <map>
#include <queue>
#include <stack>
#include <cctype>
#include <climits>
#include <string>
#include <bitset>
#include <cfloat>
#include <unordered_set>
#pragma GCC optimize("Ofast")
using namespace std;
typedef long double ld;
// typedef long long int ll;
// typedef unsigned long long int ull;
typedef vector<int> vi;
typedef vector<char> vc;
typedef vector<bool> vb;
typedef vector<double> vd;
typedef vector<string> vs;
// typedef vector<ll> vll;
typedef vector<pair<int,int> > vpii;
typedef vector<vector<int> > vvi;
typedef vector<vector<char> > vvc;
typedef vector<vector<string> > vvs;
// typedef vector<vector<ll> > vvll;
#define rep(i,n) for(int i = 0; i < (n); ++i)
#define rrep(i,n) for(int i = 1; i <= (n); ++i)
#define drep(i,n) for(int i = (n) - 1; i >= 0; --i)
#define fin(ans) cout << (ans) << '\n'
#define STI(s) atoi(s.c_str())
#define mp(p,q) make_pair(p, q)
#define pb(n) push_back(n)
#define all(a) a.begin(), a.end()
#define rall(a) a.rbegin(), a.rend()
#define Sort(a) sort(a.begin(), a.end())
#define Rort(a) sort(a.rbegin(), a.rend())
#define MATHPI acos(-1)
#define itn int
template <class T> inline bool chmax(T& a,T b){if(a<b){a=b;return 1;} return 0;}
template <class T> inline bool chmin(T& a,T b){if(a>b){a=b;return 1;} return 0;}
struct io{io(){ios::sync_with_stdio(false);cin.tie(0);}};
// const ll MOD = 1000000007;
const double EPS = 1e-9;
const int INF = INT_MAX;
// const ll LLINF = 1LL<<60;



int main(void){

    int n;
    char v[4] = {'A','B','X','Y'};
    string s;
    cin>>n>>s;
    int res=INF;
    
    rep(ll,4){
        rep(lr,4){
            rep(rl,4){
                rep(rr,4){
                    string L="";
                    L+=v[ll];
                    L+=v[lr];
                    string R="";
                    R+=v[rl];
                    R+=v[rr];
                    if(L==R)continue;
                    int ans=0;
                    // cout<<L<<" "<<R<<endl;
                    for(int i=0;i<n;i++){
                        if(i<n-1&&s[i]==L[0]&&s[i+1]==L[1]){
                            i++;
                            ans++;
                            continue;
                        }
                        if(i<n-1&&s[i]==R[0]&&s[i+1]==R[1]){
                            i++;
                            ans++;
                            continue;
                        }
                        {
                            ans++;
                        }
                    }
                    // fin(ans);
                    res=min(ans,res);
                }
            }
        }
    }
    fin(res);

}
