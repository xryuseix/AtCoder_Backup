問題文の引用元：https://atcoder.jp/contests/abc094/tasks/abc094_b
B - Toll GatesEditorial / $(function() {var ts = $('#task-statement span.lang');if (ts.children('span').size() <= 1) {$('#task-lang-btn').hide();ts.children('span').show();return;}var REMEMBER_LB = 5;var LS_KEY = 'task_lang';var taskLang = getLS(LS_KEY) || '';var changeTimes = 0;if (taskLang == 'ja' || taskLang == 'en') {changeTimes = REMEMBER_LB;} else {var changeTimes = parseInt(taskLang, 10);if (isNaN(changeTimes)) {changeTimes = 0;delLS(LS_KEY);}changeTimes++;taskLang = LANG;}ts.children('span.lang-' + taskLang).show();$('#task-lang-btn span').click(function() {var l = $(this).data('lang');ts.children('span').hide();ts.children('span.lang-' + l).show();if (changeTimes < REMEMBER_LB) setLS(LS_KEY, changeTimes);else setLS(LS_KEY, l);});});
Time Limit : 2 sec / Memory Limit : 256 MB
配点 : 200 点
問題文 : N + 1 個のマスが左右に一列に並んでいます．これらのマスには，左のマスから順に 0, 1, ..., N の番号が付けられています．あなたは，最初マス X にいます．隣り合うマスの間は自由に移動することができ，マス 0 またはマス N にたどり着くとゴールすることができます．ただし，i = 1, 2, ..., M について，マス A_i には料金所があり，そのためマス A_i に移動してくる際には 1 のコストがかかります．なお，マス 0，マス X，マス N には料金所がないことが保証されます．ゴールするまでにかかるコストの最小値を求めてください．
制約1 \leq N \leq 1001 \leq M \leq 1001 \leq X \leq N - 11 \leq A_1 < A_2 < ... < A_M \leq N - 1A_i \neq X入力はすべて整数入力入力は以下の形式で標準入力から与えられる。N M XA_1 A_2 ... A_M出力ゴールするまでにかかるコストの最小値を出力せよ．
// ソースコードの引用元 : https://atcoder.jp/contests/abc094/submissions/4314682
// 提出ID : 4314682
// 問題ID : abc094_b
// コンテストID : abc094
// ユーザID : xryuseix
// コード長 : 818
// 実行時間 : 1



#include<iostream>
#include<algorithm>
#include<cmath>
#include<cstdio>
#include<string>
#include<vector>
#include<list>
#include<set>
#include<cctype>
#define ld long double
#define ll long long int
#define ull unsigned long long int
using namespace std;
template<class T> inline bool chmax(T& a,T b){if(a<b){a=b;return 1;}return 0;}
template<class T> inline bool chmin(T& a,T b){if(a>b){a=b;return 1;}return 0;}
const long long INF=1LL<<60;
//set<int>::iterator it;

int main(void){
	ios::sync_with_stdio(false); cin.tie(0);
	
	
	int i,j,n,m,x;
	cin>>n>>m>>x;
	int a[m];
	for(i=0;i<m;i++)cin>>a[i];
	int b[2]={0};
	for(i=x;i<=n;i++){
		for(j=0;j<m;j++)if(a[j]==i)b[1]++;
	}
	for(i=x;i>=0;i--){
		for(j=0;j<m;j++)if(a[j]==i)b[0]++;
	}
	cout<<min(b[0],b[1])<<endl;
	
	
	return 0;
}
