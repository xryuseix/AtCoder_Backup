問題文の引用元：https://atcoder.jp/contests/abc079/tasks/abc079_d
D - WallEditorial / $(function() {var ts = $('#task-statement span.lang');if (ts.children('span').size() <= 1) {$('#task-lang-btn').hide();ts.children('span').show();return;}var REMEMBER_LB = 5;var LS_KEY = 'task_lang';var taskLang = getLS(LS_KEY) || '';var changeTimes = 0;if (taskLang == 'ja' || taskLang == 'en') {changeTimes = REMEMBER_LB;} else {var changeTimes = parseInt(taskLang, 10);if (isNaN(changeTimes)) {changeTimes = 0;delLS(LS_KEY);}changeTimes++;taskLang = LANG;}ts.children('span.lang-' + taskLang).show();$('#task-lang-btn span').click(function() {var l = $(this).data('lang');ts.children('span').hide();ts.children('span.lang-' + l).show();if (changeTimes < REMEMBER_LB) setLS(LS_KEY, changeTimes);else setLS(LS_KEY, l);});});
Time Limit : 2 sec / Memory Limit : 256 MB
配点 : 400 点
問題文 : 魔法少女のjoisinoお姉ちゃんは、この世にあるすべての数字を 1 に変えてやろうと思い立ちました。1 つの数字を i から j(0≦i,j≦9) に書き変えるには魔力 c_{i,j} が必要です。今、目の前にある壁は縦方向に H、横方向に W のマス目になっていて、1 つ以上のマス目に 0 以上 9 以下の整数が 1 つずつ書かれています。上から i(1≦i≦H) 番目、左から j(1≦j≦W) 番目のマスの情報として A_{i,j} が与えられ、A_{i,j}≠-1 の場合はマスに A_{i,j} が書かれているA_{i,j}=-1 の場合はマスに数字が書かれていないことを意味します。この壁に書かれている数字を最終的に全て 1 に変えるのに必要な魔力の最小量を求めてください。
制約1≦H,W≦2001≦c_{i,j}≦10^3 (i≠j)c_{i,j}=0 (i=j)-1≦A_{i,j}≦9入力は整数からなる壁には一つ以上の整数が書かれている入力入力は以下の形式で標準入力から与えられる。H Wc_{0,0} ... c_{0,9}:c_{9,0} ... c_{9,9}A_{1,1} ... A_{1,W}:A_{H,1} ... A_{H,W}出力壁に書かれている数字を最終的に全て 1 に変えるのに必要な魔力の最小量を出力せよ。
// ソースコードの引用元 : https://atcoder.jp/contests/abc079/submissions/11450065
// 提出ID : 11450065
// 問題ID : abc079_d
// コンテストID : abc079
// ユーザID : xryuseix
// コード長 : 3718
// 実行時間 : 9



#include <iostream>
#include <cstdio>
#include <algorithm>
#include <cmath>
#include <vector>
#include <list>
#include <set>
#include <map>
#include <queue>
#include <stack>
#include <cctype>
#include <cassert>
#include <climits>
#include <string>
#include <bitset>
#include <cfloat>
#include <random>
#include <unordered_set>
#pragma GCC optimize("Ofast")
using namespace std;
typedef long double ld;
typedef long long int ll;
typedef unsigned long long int ull;
typedef vector<int> vi;
typedef vector<char> vc;
typedef vector<bool> vb;
typedef vector<double> vd;
typedef vector<string> vs;
typedef vector<ll> vll;
typedef vector<pair<int,int> > vpii;
typedef vector<vector<int> > vvi;
typedef vector<vector<char> > vvc;
typedef vector<vector<string> > vvs;
typedef vector<vector<ll> > vvll;
#define rep(i,n) for(int i = 0; i < (n); ++i)
#define rrep(i,n) for(int i = 1; i <= (n); ++i)
#define irep(it, stl) for(auto it = stl.begin(); it != stl.end(); it++)
#define drep(i,n) for(int i = (n) - 1; i >= 0; --i)
#define fin(ans) cout << (ans) << '\n'
#define STLL(s) strtoll(s.c_str(), NULL, 10)
#define mp(p,q) make_pair(p, q)
#define pb(n) push_back(n)
#define all(a) a.begin(), a.end()
#define rall(a) a.rbegin(), a.rend()
#define Sort(a) sort(a.begin(), a.end())
#define Rort(a) sort(a.rbegin(), a.rend())
#define MATHPI acos(-1)
#define itn int;
#define endl '\n';
const int dx[8] = {1, 0, -1, 0, 1, -1, -1, 1};
const int dy[8] = {0, 1, 0, -1, 1, 1, -1, -1};
template <class T> inline bool chmax(T& a,T b){if(a<b){a=b;return 1;} return 0;}
template <class T> inline bool chmin(T& a,T b){if(a>b){a=b;return 1;} return 0;}
inline string getline(){string s; getline(cin,s); return s;}
inline void yn(const bool b){b?fin("yes"):fin("no");}
inline void Yn(const bool b){b?fin("Yes"):fin("No");}
inline void YN(const bool b){b?fin("YES"):fin("NO");}
struct io{io(){ios::sync_with_stdio(false);cin.tie(0);}};
const int INF = INT_MAX;
const ll LLINF = 1LL<<60;
const ll MOD = 1000000007;
const double EPS = 1e-9;

class WAR_FLY {
public:
    vvi d; // 辺の数
    int V; // 頂点の数
    
    WAR_FLY(int n) {
        V = n;
        d = vector<vector<int> > (n,vector<int>(n));
        for(int i = 0; i < V; i++) {
            for(int j = 0; j < V; j++) {
                if(i == j) {
                    d[i][j] = 0;
                }
                else {
                    d[i][j] = INF;
                }
            }
        }
    }

    void warshall_floyd(void) {
        for(int k = 0; k < V; k++) {
            for(int i = 0; i < V; i++) {
                for(int j = 0; j < V; j++) {
                    d[i][j] = min((ll)d[i][j], (ll)d[i][k] + (ll)d[k][j]);
                }
            }
        }
    }

    void add(int from, int to, int cost) {
        d[from][to] = cost;
    }

    bool is_negative_loop(void) {
        for(int i = 0; i < V; i++) {
            if(d[i][i] < 0) return true;
        }
        return false;
    }

    void show(void) {
        for(int i = 0; i < V; i++) {
            for(int j = 0; j < V; j++) {
                cout << d[i][j] << " ";
            }
            cout << endl;
        }
    }
};

int main() {
    
    int h,w;
    cin>>h>>w;
    WAR_FLY wa(10);
    rep(i,10){
        rep(j,10){
            int c;
            cin>>c;
            wa.add(i,j,c);
        }
    }
    wa.warshall_floyd();
    vvi v(h,vi(w));
    rep(i,h)rep(j,w)cin>>v[i][j];
    ll ans=0;
    rep(i,h)rep(j,w){
        if(v[i][j]==-1)continue;
        ans+=wa.d[v[i][j]][1];
        // cout<<i<<" "<<j<<" "<<ans<<endl;
    }
    fin(ans);
}

