問題文の引用元：https://atcoder.jp/contests/arc007/tasks/arc007_3
C - 節約生活Editorial / $(function() {var ts = $('#task-statement span.lang');if (ts.children('span').size() <= 1) {$('#task-lang-btn').hide();ts.children('span').show();return;}var REMEMBER_LB = 5;var LS_KEY = 'task_lang';var taskLang = getLS(LS_KEY) || '';var changeTimes = 0;if (taskLang == 'ja' || taskLang == 'en') {changeTimes = REMEMBER_LB;} else {var changeTimes = parseInt(taskLang, 10);if (isNaN(changeTimes)) {changeTimes = 0;delLS(LS_KEY);}changeTimes++;taskLang = LANG;}ts.children('span.lang-' + taskLang).show();$('#task-lang-btn span').click(function() {var l = $(this).data('lang');ts.children('span').hide();ts.children('span.lang-' + l).show();if (changeTimes < REMEMBER_LB) setLS(LS_KEY, changeTimes);else setLS(LS_KEY, l);});});
Time Limit : 2 sec / Memory Limit : 64 MB
問題文 : 　高橋君は有料の衛星放送を見ようとしています。有料衛星放送はお金を払わないと見ることが出来ませんが、高橋君はその契約を行なっていません。　しかし、有料衛星放送はどのような内容を放送しているか視聴者がわかるように、無料でも視聴可能な時間が定期的に存在し、視聴可能な時間とできない時間が交互に繰り返されます。このような視聴可能な時間とそうでない時間を視聴パターンと呼ぶことにします。　視聴パターンは o と x から成り立っており、図 1 で示すように視聴可能な時間を o の個数、視聴できない時間を x の個数で表しています。図 1:視聴パターンの例(入力は10文字以下なので、この入力はテストに存在しません)　一度テレビを点けると途切れることなくこの視聴パターンが繰り返される。また、テレビは一度点けると消すことはできません。　高橋君は複数のテレビを点けるタイミングをずらして並行して利用することで、無料でも常にいずれかのテレビで視聴ができる方法を思いつきました。　例えば図 1 の視聴パターンの場合は図 2 で示すように 5 分後にもう 1 台テレビを点ければ常に視聴ができます。図 2:2 台のテレビで常に視聴する例　その場合高橋君が用意しなければいけない最低限のテレビの台数を答えなさい。　なお、必要なテレビを全て点け終えるまでの間には視聴できない時間があっても構いませんが、全てのテレビを点けてからは常にいずれかのテレビで視聴ができないといけません。入力入力は以下の形式で標準入力から与えられる。c_0c_1‥‥c_{N-1}入力は 1 行のみで視聴パターンを表す長さ N(1≦N≦10) の文字列が与えられる。視聴パターンは o と x から成り、i+1(0≦i≦N-1) 番目の文字 c_i はテレビを点けてから i 分から i+1 分の間はテレビが以下の状態であることを意味する。o:視聴可能である。x:視聴できない。視聴パターンは少なくとも 1 つの o を含む。テレビは最初にテレビをつけてから j(j : 正の整数) 分後にのみ点けることができる。出力常にいずれかのテレビが視聴可能であるために用意しなければいけないテレビの台数の最小値を標準出力に 1 行で出力せよ。必要なテレビを全て点け終えるまでの間は視聴できない時間があっても構わないが、全てのテレビを点けてからは常にいずれかのテレビが視聴できないといけない。なお、最後には改行を出力せよ。
// ソースコードの引用元 : https://atcoder.jp/contests/arc007/submissions/11664156
// 提出ID : 11664156
// 問題ID : arc007_3
// コンテストID : arc007
// ユーザID : xryuseix
// コード長 : 3025
// 実行時間 : 9



#include <iostream>
#include <cstdio>
#include <algorithm>
#include <cmath>
#include <vector>
#include <list>
#include <set>
#include <map>
#include <queue>
#include <stack>
#include <cctype>
#include <cassert>
#include <climits>
#include <string>
#include <bitset>
#include <cfloat>
#include <random>
#include <unordered_set>
#pragma GCC optimize("Ofast")
using namespace std;
typedef long double ld;
typedef long long int ll;
typedef unsigned long long int ull;
typedef vector<int> vi;
typedef vector<char> vc;
typedef vector<bool> vb;
typedef vector<double> vd;
typedef vector<string> vs;
typedef vector<ll> vll;
typedef vector<pair<int,int> > vpii;
typedef vector<vector<int> > vvi;
typedef vector<vector<char> > vvc;
typedef vector<vector<string> > vvs;
typedef vector<vector<ll> > vvll;
typedef map<int, int> mii;
typedef set<int> si;
#define rep(i,n) for(int i = 0; i < (n); ++i)
#define rrep(i,n) for(int i = 1; i <= (n); ++i)
#define irep(it, stl) for(auto it = stl.begin(); it != stl.end(); it++)
#define drep(i,n) for(int i = (n) - 1; i >= 0; --i)
#define fin(ans) cout << (ans) << '\n'
#define STLL(s) strtoll(s.c_str(), NULL, 10)
#define mp(p,q) make_pair(p, q)
#define pb(n) push_back(n)
#define all(a) a.begin(), a.end()
#define rall(a) a.rbegin(), a.rend()
#define Sort(a) sort(a.begin(), a.end())
#define Rort(a) sort(a.rbegin(), a.rend())
#define MATHPI acos(-1)
#define itn int
#define endl '\n';
#define fi first
#define se second
#define NONVOID [[nodiscard]]
const int dx[8] = {1, 0, -1, 0, 1, -1, -1, 1};
const int dy[8] = {0, 1, 0, -1, 1, 1, -1, -1};
template <class T> inline bool chmax(T& a,T b){if(a<b){a=b;return 1;} return 0;}
template <class T> inline bool chmin(T& a,T b){if(a>b){a=b;return 1;} return 0;}
inline string getline(){string s; getline(cin,s); return s;}
inline void yn(const bool b){b?fin("yes"):fin("no");}
inline void Yn(const bool b){b?fin("Yes"):fin("No");}
inline void YN(const bool b){b?fin("YES"):fin("NO");}
struct io{io(){ios::sync_with_stdio(false);cin.tie(0);}};
const int INF = INT_MAX;
const ll LLINF = 1LL<<60;
const ll MOD = 1000000007;
const double EPS = 1e-9;


int main() {

    string c;
    cin>>c;
    vector<string> s;
    int n=c.size();
    rep(i,c.size()){
        s.pb(c);
        c=c.substr(1)+c[0];
    }
    int ans=INF;
    rep(i,1<<s.size()){
        string t="";
        for(int j=0;j<n;j++){
            if(i&1<<j){
                if(t=="")t=s[j];
                else {
                    for(int k=0;k<n;k++){
                        if(s[j][k]=='o')t[k]='o';
                    }
                }
            }
        }
        bool ch=(t.size()==n);
        rep(j,t.size()){
            ch&=t[j]=='o';
        }
        if(ch){
            int tv=0;
            for(int j=0;j<n;j++){
                if(i&1<<j){
                    tv++;
                }
            }
            chmin(ans,tv);
        }
    }
    fin(ans);
}

