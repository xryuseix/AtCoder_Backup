問題文の引用元：https://atcoder.jp/contests/abc188/tasks/abc188_d
D - Snuke PrimeEditorial / $(function() {var ts = $('#task-statement span.lang');if (ts.children('span').size() <= 1) {$('#task-lang-btn').hide();ts.children('span').show();return;}var REMEMBER_LB = 5;var LS_KEY = 'task_lang';var taskLang = getLS(LS_KEY) || '';var changeTimes = 0;if (taskLang == 'ja' || taskLang == 'en') {changeTimes = REMEMBER_LB;} else {var changeTimes = parseInt(taskLang, 10);if (isNaN(changeTimes)) {changeTimes = 0;delLS(LS_KEY);}changeTimes++;taskLang = LANG;}ts.children('span.lang-' + taskLang).show();$('#task-lang-btn span').click(function() {var l = $(this).data('lang');ts.children('span').hide();ts.children('span.lang-' + l).show();if (changeTimes < REMEMBER_LB) setLS(LS_KEY, changeTimes);else setLS(LS_KEY, l);});});
Time Limit : 2 sec / Memory Limit : 1024 MB
配点 : 400 点
問題文 : 株式会社すぬけは様々なサービスを提供しています。この会社は、すぬけプライムという支払いプランを用意しています。すぬけプライムへの加入中は、1 日あたり C 円を支払うことで、提供される全てのサービスを追加料金の支払いなしに利用することができます。すぬけプライムへの加入および脱退は、それぞれ 1 日の始めおよび終わりに自由に行うことができます。  高橋くんは、この会社のサービスのうち N 個を利用しようとしています。そのうち i 個目のサービスは、今日を 1 日目として、a_i 日目の始めから b_i 日目の終わりまで利用する予定です。すぬけプライムに加入していない期間中は、i 個目のサービスを利用する際に 1 日あたり c_i 円を支払う必要があります。  サービスを利用するために高橋くんが支払う必要のある最小の合計金額を求めてください。
制約1 \leq N \leq 2 \times 10^51 \leq C \leq 10^91 \leq a_i \leq b_i \leq 10^91 \leq c_i \leq 10^9入力に含まれる値は全て整数入力入力は以下の形式で標準入力から与えられる。N Ca_1 b_1 c_1\vdotsa_N b_N c_N出力高橋くんが支払う必要のある最小の合計金額を出力せよ。



#include <algorithm>
#include <bitset>
#include <cassert>
#include <cctype>
#include <cfloat>
#include <climits>
#include <cmath>
#include <cstdio>
#include <deque>
#include <iomanip>
#include <iostream>
#include <list>
#include <map>
#include <queue>
#include <random>
#include <set>
#include <stack>
#include <string>
#include <unordered_set>
#include <vector>
using namespace std;
typedef long double ld;
typedef long long int ll;
typedef unsigned long long int ull;
typedef vector<int> vi;
typedef vector<char> vc;
typedef vector<bool> vb;
typedef vector<double> vd;
typedef vector<string> vs;
typedef vector<ll> vll;
typedef vector<pair<int, int>> vpii;
typedef vector<pair<ll, ll>> vpll;
typedef vector<vi> vvi;
typedef vector<vvi> vvvi;
typedef vector<vc> vvc;
typedef vector<vs> vvs;
typedef vector<vll> vvll;
typedef map<int, int> mii;
typedef set<int> si;
#define rep(i, n) for (ll i = 0; i < (n); ++i)
#define rrep(i, n) for (int i = 1; i <= (n); ++i)
#define irep(it, stl) for (auto it = stl.begin(); it != stl.end(); it++)
#define drep(i, n) for (int i = (n)-1; i >= 0; --i)
#define fin(ans) cout << (ans) << '\n'
#define STLL(s) strtoll(s.c_str(), NULL, 10)
#define mp(p, q) make_pair(p, q)
#define pb(n) push_back(n)
#define all(a) a.begin(), a.end()
#define Sort(a) sort(a.begin(), a.end())
#define Rort(a) sort(a.rbegin(), a.rend())
#define fi first
#define se second
// #include <atcoder/all>
// using namespace atcoder;
constexpr int dx[8] = {1, 0, -1, 0, 1, -1, -1, 1};
constexpr int dy[8] = {0, 1, 0, -1, 1, 1, -1, -1};
template <class T, class U>
inline bool chmax(T& a, U b) {
    if (a < b) {
        a = b;
        return 1;
    }
    return 0;
}
template <class T, class U>
inline bool chmin(T& a, U b) {
    if (a > b) {
        a = b;
        return 1;
    }
    return 0;
}
template <class T>
inline void dump(T& v) {
    irep(i, v) { cout << (*i) << ((i == --v.end()) ? '\n' : ' '); }
}
template <class T, class U>
inline void dump(map<T, U>& v) {
    irep(i, v) { cout << i->first << " " << i->second << '\n'; }
}
template <class T, class U>
inline void dump(pair<T, U>& p) {
    cout << p.first << " " << p.second << '\n';
}
string getline() {
    string s;
    fflush(stdin);
    getline(cin, s);
    return s;
}
inline void yn(const bool b) { b ? fin("yes") : fin("no"); }
inline void Yn(const bool b) { b ? fin("Yes") : fin("No"); }
inline void YN(const bool b) { b ? fin("YES") : fin("NO"); }
template <typename Head, typename Value>
auto vectors(const Head& head, const Value& v) {
    return vector<Value>(head, v);
}
template <typename Head, typename... Tail>
auto vectors(Head x, Tail... tail) {
    auto inner = vectors(tail...);
    return vector<decltype(inner)>(x, inner);
}
const int INF = INT_MAX;
constexpr ll LLINF = 1LL << 61;
constexpr ll MOD = 1000000007;  // 998244353;
constexpr ld EPS = 1e-11;

/* --------------------   ここまでテンプレ   -------------------- */

map<int, int> zip;
int compress(vector<int> x) {
    int unzip[x.size()];
    sort(x.begin(), x.end());
    x.erase(unique(x.begin(), x.end()), x.end());
    for (int i = 0; i < x.size(); i++) {
        zip[x[i]] = i;
        unzip[i] = x[i];
    }
    return x.size();
}

int main() {
    set<int> sx, sa, sb;
    ll n, C;
    cin >> n >> C;
    vll a(n), b(n), c(n), mid(n);
    rep(i, n) {
        cin >> a[i] >> b[i] >> c[i];
        a[i]--;
        b[i]--;
        sa.insert(a[i]);
        sb.insert(b[i]);
        sx.insert(a[i]);
        sx.insert(b[i]);
    }
    vi x, rx, tmp;
    for (auto it = sx.begin(); it != sx.end(); it++) {
        rx.pb(*it);
    }
    rep(i, rx.size() - 1) {
        if (rx[i + 1] - rx[i] == 1)
            continue;
        else {
            sx.insert((rx[i + 1] + rx[i]) / 2);
        }
    }
    rx.clear();
    for (auto it = sx.begin(); it != sx.end(); it++) {
        rx.pb(*it);
    }
    compress(rx);
    rep(i, rx.size()) { x.pb(zip[rx[i]]); }
    x.pb(INF);
    // fin("X: ");
    // dump(x);
    // fin("RX: ");
    // dump(rx);
    // fin("ZIP: ");
    // dump(zip);
    vll imos(x.size(), 0);
    rep(i, n) {
        imos[zip[a[i]]] += c[i];
        imos[zip[b[i]] + 1] -= c[i];
    }
    // fin("IMOS: ");
    // dump(imos);
    ll csum = 0;
    ll ans = 0;
    rep(i, imos.size() - 1) {
        csum += imos[i];
        // cout << i << " " << csum << endl;
        if (sa.count(rx[i]) || sb.count(rx[i])) {
            ans += min(csum, C);
        } else {
            ll span = rx[i + 1] - rx[i - 1] - 1;
            // fin(i);
            ans += min(csum, C) * span;
        }
    }
    fin(ans);
}
