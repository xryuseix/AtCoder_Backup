問題文の引用元：https://atcoder.jp/contests/joi2019ho/tasks/joi2019ho_b
B - 展覧会 (Exhibition)Editorial / $(function() {var ts = $('#task-statement span.lang');if (ts.children('span').size() <= 1) {$('#task-lang-btn').hide();ts.children('span').show();return;}var REMEMBER_LB = 5;var LS_KEY = 'task_lang';var taskLang = getLS(LS_KEY) || '';var changeTimes = 0;if (taskLang == 'ja' || taskLang == 'en') {changeTimes = REMEMBER_LB;} else {var changeTimes = parseInt(taskLang, 10);if (isNaN(changeTimes)) {changeTimes = 0;delLS(LS_KEY);}changeTimes++;taskLang = LANG;}ts.children('span.lang-' + taskLang).show();$('#task-lang-btn span').click(function() {var l = $(this).data('lang');ts.children('span').hide();ts.children('span.lang-' + l).show();if (changeTimes < REMEMBER_LB) setLS(LS_KEY, changeTimes);else setLS(LS_KEY, l);});});
Time Limit : 1 sec / Memory Limit : 256 MB
配点: 100 点あなたは，絵の展覧会を開催しようとしている．展覧会では，いくつかの絵を額縁に入れ，左から右に一列に並べて展示する．展覧会で展示する候補となる絵が N 枚あり，1 から N までの番号が付けられている．絵 i (1 \leqq i \leqq N) の大きさは S_i，価値は V_i である．また，これらの絵を入れるための額縁が M 枚あり，1 から M までの番号が付けられている．額縁 j (1 \leqq j \leqq M) の大きさは C_j である．額縁 j には，大きさが C_j 以下の絵のみを入れることができる．1 枚の額縁には高々 1 枚の絵しか入れることができない．展示する絵はすべて何らかの額縁に入っていなければならない．見栄えを良くするため，展示する絵は以下の条件を満たさなければならない：左右に隣り合うどの 2 枚の絵についても，右側の絵が入っている額縁の大きさは左側の絵が入っている額縁の大きさ以上である．左右に隣り合うどの 2 枚の絵についても，右側の絵の価値は左側の絵の価値以上である．あなたは，できるだけ多くの絵を展示したい．展示候補の絵の枚数，額縁の枚数，及びそれらの大きさや価値が与えられたとき，展示する絵の枚数の最大値を求めるプログラムを作成せよ．入力入力は以下の形式で標準入力から与えられる．N MS_1 V_1\vdotsS_N V_NC_1\vdotsC_M出力標準出力に，展覧会に展示する絵の枚数の最大値を 1 行で出力せよ．
制約1 \leqq N \leqq 100\,000．1 \leqq M \leqq 100\,000．1 \leqq S_i \leqq 1\,000\,000\,000 (1 \leqq i \leqq N)．1 \leqq V_i \leqq 1\,000\,000\,000 (1 \leqq i \leqq N)．1 \leqq C_j \leqq 1\,000\,000\,000 (1 \leqq j \leqq M)．小課題(10 点) N \leqq 10，M \leqq 10．(40 点) N \leqq 1000，M \leqq 1000．(50 点) 追加の
制約はない．
// ソースコードの引用元 : https://atcoder.jp/contests/joi2019ho/submissions/10737017
// 提出ID : 10737017
// 問題ID : joi2019ho_b
// コンテストID : joi2019ho
// ユーザID : xryuseix
// コード長 : 2318
// 実行時間 : 151



#include <iostream>
#include <cstdio>
#include <algorithm>
#include <cmath>
#include <vector>
#include <list>
#include <set>
#include <map>
#include <queue>
#include <stack>
#include <cctype>
#include <cassert>
#include <climits>
#include <string>
#include <bitset>
#include <cfloat>
#include <unordered_set>
#pragma GCC optimize("Ofast")
using namespace std;
typedef long double ld;
typedef long long int ll;
typedef unsigned long long int ull;
typedef vector<int> vi;
typedef vector<char> vc;
typedef vector<bool> vb;
typedef vector<double> vd;
typedef vector<string> vs;
typedef vector<ll> vll;
typedef vector<pair<int,int> > vpii;
typedef vector<vector<int> > vvi;
typedef vector<vector<char> > vvc;
typedef vector<vector<string> > vvs;
typedef vector<vector<ll> > vvll;
#define rep(i,n) for(int i = 0; i < (n); ++i)
#define rrep(i,n) for(int i = 1; i <= (n); ++i)
#define irep(it, stl) for(auto it = stl.begin(); it != stl.end(); it++)
#define drep(i,n) for(int i = (n) - 1; i >= 0; --i)
#define fin(ans) cout << (ans) << '\n'
#define STLL(s) strtoll(s.c_str(), NULL, 10)
#define mp(p,q) make_pair(p, q)
#define pb(n) push_back(n)
#define all(a) a.begin(), a.end()
#define rall(a) a.rbegin(), a.rend()
#define Sort(a) sort(a.begin(), a.end())
#define Rort(a) sort(a.rbegin(), a.rend())
#define MATHPI acos(-1)
#define itn int;
#define endl '\n';
int dx[8] = {1, 0, -1, 0, 1, -1, -1, 1};
int dy[8] = {0, 1, 0, -1, 1, 1, -1, -1};
template <class T> inline bool chmax(T& a,T b){if(a<b){a=b;return 1;} return 0;}
template <class T> inline bool chmin(T& a,T b){if(a>b){a=b;return 1;} return 0;}
struct io{io(){ios::sync_with_stdio(false);cin.tie(0);}};
const int INF = INT_MAX;
const ll LLINF = 1LL<<60;
const ll MOD = 1000000007;
const double EPS = 1e-9;



int main() {
    
    int n,m;
    cin>>n>>m;
    vpii v(n);
    rep(i,n){
        int s,t;
        cin>>s>>t;
        v[i]=mp(t,s);
    }
    vi c(m);
    rep(i,m)cin>>c[i];
    Sort(v);
    Sort(c);
    int ans=0;
    int pos=n-1;
    drep(i,m){
        if(pos<0) {
            continue;
        }
        else if(pos<n&&v[pos].second<=c[i]){
            ans++;
            pos--; 
        } else {
            pos--;
            i++;
        }
    }
    fin(ans);

}
