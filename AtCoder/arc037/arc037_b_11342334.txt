問題文の引用元：https://atcoder.jp/contests/arc037/tasks/arc037_b
B - バウムテストEditorial / $(function() {var ts = $('#task-statement span.lang');if (ts.children('span').size() <= 1) {$('#task-lang-btn').hide();ts.children('span').show();return;}var REMEMBER_LB = 5;var LS_KEY = 'task_lang';var taskLang = getLS(LS_KEY) || '';var changeTimes = 0;if (taskLang == 'ja' || taskLang == 'en') {changeTimes = REMEMBER_LB;} else {var changeTimes = parseInt(taskLang, 10);if (isNaN(changeTimes)) {changeTimes = 0;delLS(LS_KEY);}changeTimes++;taskLang = LANG;}ts.children('span.lang-' + taskLang).show();$('#task-lang-btn span').click(function() {var l = $(this).data('lang');ts.children('span').hide();ts.children('span.lang-' + l).show();if (changeTimes < REMEMBER_LB) setLS(LS_KEY, changeTimes);else setLS(LS_KEY, l);});});
Time Limit : 2 sec / Memory Limit : 256 MB  
問題文 : バウムテストとは、被験者に「木」の絵を描かせることで被験者の心理状態を読み取る心理検査である。この検査を受けた高橋君は、 N 個の頂点と M 本の辺からなる無向グラフを描いた。このグラフの連結成分のうち木であるようなもの、すなわち閉路を持たないものの個数を求めよ。入力入力は以下の形式で標準入力から与えられる。N Mu_1 v_1u_2 v_2:u_M v_M1 行目には、高橋君が描いた無向グラフに含まれる頂点の数 N (2 ≦ N ≦ 100) と辺の数 M (1 ≦ M ≦ N×(N-1)/2) がスペース区切りで与えられる。頂点には 1 から N の番号が振られている。2 行目から M+1 行目は各辺の情報を含む。 i+1 行目 (1 ≦ i ≦ M) には、辺 i が結ぶ 2 頂点の番号 u_i, v_i (1 ≦ u_i ＜ v_i ≦ N) がスペース区切りで与えられる。どの 2 頂点についても、それらを直接結ぶ辺は高々 1 本しか存在しない。出力標準出力に、高橋君が描いた無向グラフの連結成分のうち木であるものの個数を出力し、末尾で改行せよ。
// ソースコードの引用元 : https://atcoder.jp/contests/arc037/submissions/11342334
// 提出ID : 11342334
// 問題ID : arc037_b
// コンテストID : arc037
// ユーザID : xryuseix
// コード長 : 2747
// 実行時間 : 3



#include <iostream>
#include <cstdio>
#include <algorithm>
#include <cmath>
#include <vector>
#include <list>
#include <set>
#include <map>
#include <queue>
#include <stack>
#include <cctype>
#include <cassert>
#include <climits>
#include <string>
#include <bitset>
#include <cfloat>
#include <unordered_set>
#pragma GCC optimize("Ofast")
using namespace std;
typedef long double ld;
typedef long long int ll;
typedef unsigned long long int ull;
typedef vector<int> vi;
typedef vector<char> vc;
typedef vector<bool> vb;
typedef vector<double> vd;
typedef vector<string> vs;
typedef vector<ll> vll;
typedef vector<pair<int,int> > vpii;
typedef vector<vector<int> > vvi;
typedef vector<vector<char> > vvc;
typedef vector<vector<string> > vvs;
typedef vector<vector<ll> > vvll;
#define rep(i,n) for(int i = 0; i < (n); ++i)
#define rrep(i,n) for(int i = 1; i <= (n); ++i)
#define irep(it, stl) for(auto it = stl.begin(); it != stl.end(); it++)
#define drep(i,n) for(int i = (n) - 1; i >= 0; --i)
#define fin(ans) cout << (ans) << '\n'
#define STLL(s) strtoll(s.c_str(), NULL, 10)
#define mp(p,q) make_pair(p, q)
#define pb(n) push_back(n)
#define all(a) a.begin(), a.end()
#define rall(a) a.rbegin(), a.rend()
#define Sort(a) sort(a.begin(), a.end())
#define Rort(a) sort(a.rbegin(), a.rend())
#define MATHPI acos(-1)
#define itn int;
#define endl '\n';
const int dx[8] = {1, 0, -1, 0, 1, -1, -1, 1};
const int dy[8] = {0, 1, 0, -1, 1, 1, -1, -1};
template <class T> inline bool chmax(T& a,T b){if(a<b){a=b;return 1;} return 0;}
template <class T> inline bool chmin(T& a,T b){if(a>b){a=b;return 1;} return 0;}
inline string getline(){string s; getline(cin,s); return s;}
inline void yn(const bool b){b?fin("yes"):fin("no");}
inline void Yn(const bool b){b?fin("Yes"):fin("No");}
inline void YN(const bool b){b?fin("YES"):fin("NO");}
struct io{io(){ios::sync_with_stdio(false);cin.tie(0);}};
const int INF = INT_MAX;
const ll LLINF = 1LL<<60;
const ll MOD = 1000000007;
const double EPS = 1e-9;

vi ispassed(200, false);

int dfs(int pos,int bef,vvi &v) {
    // cout<<pos<<endl;
    ispassed[pos]=1;
    int res=1;
    for(int i=0;i<v[pos].size();i++){
        if(v[pos][i]==bef)continue;
        if(ispassed[v[pos][i]]){
            res=0;
            break;
        }
        res*=dfs(v[pos][i],pos, v);
    }
    return res;
}

int main() {
    
    int n,m;
    cin>>n>>m;
    vvi v(n);
    rep(i,m){
        int a,b;
        cin>>a>>b;
        a--;b--;
        v[a].pb(b);
        v[b].pb(a);
    }
    int ans=0;
    rep(i,n){
        if(ispassed[i])continue;
        ans+=dfs(i,-1,v);
        // cout<<"========"<<endl;
    }
    fin(ans);
}

