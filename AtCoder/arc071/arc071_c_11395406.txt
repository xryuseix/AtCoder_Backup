問題文の引用元：https://atcoder.jp/contests/arc071/tasks/arc071_c
E - TrBBnsformBBtionEditorial / $(function() {var ts = $('#task-statement span.lang');if (ts.children('span').size() <= 1) {$('#task-lang-btn').hide();ts.children('span').show();return;}var REMEMBER_LB = 5;var LS_KEY = 'task_lang';var taskLang = getLS(LS_KEY) || '';var changeTimes = 0;if (taskLang == 'ja' || taskLang == 'en') {changeTimes = REMEMBER_LB;} else {var changeTimes = parseInt(taskLang, 10);if (isNaN(changeTimes)) {changeTimes = 0;delLS(LS_KEY);}changeTimes++;taskLang = LANG;}ts.children('span.lang-' + taskLang).show();$('#task-lang-btn span').click(function() {var l = $(this).data('lang');ts.children('span').hide();ts.children('span.lang-' + l).show();if (changeTimes < REMEMBER_LB) setLS(LS_KEY, changeTimes);else setLS(LS_KEY, l);});});
Time Limit : 2 sec / Memory Limit : 256 MB
配点 : 600 点
問題文 : A, B からなる文字列に対して、次の操作を考えます。文字列中の 1 文字を選ぶ。それが A なら BB で、 B なら AA で置き換える。AAA か BBB であるような部分文字列を選び、消す。例えば、ABA という文字列で 1 番目の操作を 1 文字目に対して行うと、 BBBA となります。また、BBBAAAA に対して 2 番目の操作を 4 文字目から 6 文字目に対して行うと、 BBBA となります。これらの操作を何回でも好きな順で行うことができます。文字列 S,T と q 個のクエリ a_i, b_i, c_i, d_i が与えられます。各クエリに対して、 S の部分文字列 S_{a_i} S_{{a_i}+1} ... S_{b_i} をT の部分文字列 T_{c_i} T_{{c_i}+1} ... T_{d_i} にすることができるか判定してください。
制約1 \leq |S|, |T| \leq 10^5S,T は文字A,Bからなる。1 \leq q \leq 10^51 \leq a_i \leq b_i \leq |S|1 \leq c_i \leq d_i \leq |T|入力入力は以下の形式で標準入力から与えられる。STqa_1 b_1 c_1 d_1...a_q b_q c_q d_q出力q 行出力せよ。 i 行目には、 i 番目のクエリに対する答えを出力せよ。 S_{a_i} S_{{a_i}+1} ... S_{b_i} を T_{c_i} T_{{c_i}+1} ... T_{d_i} にすることができる場合は YES を、 できない場合は NO を出力せよ。
// ソースコードの引用元 : https://atcoder.jp/contests/arc071/submissions/11395406
// 提出ID : 11395406
// 問題ID : arc071_c
// コンテストID : arc071
// ユーザID : xryuseix
// コード長 : 2587
// 実行時間 : 290



#include <iostream>
#include <cstdio>
#include <algorithm>
#include <cmath>
#include <vector>
#include <list>
#include <set>
#include <map>
#include <queue>
#include <stack>
#include <cctype>
#include <cassert>
#include <climits>
#include <string>
#include <bitset>
#include <cfloat>
#include <unordered_set>
#pragma GCC optimize("Ofast")
using namespace std;
typedef long double ld;
typedef long long int ll;
typedef unsigned long long int ull;
typedef vector<int> vi;
typedef vector<char> vc;
typedef vector<bool> vb;
typedef vector<double> vd;
typedef vector<string> vs;
typedef vector<ll> vll;
typedef vector<pair<int,int> > vpii;
typedef vector<vector<int> > vvi;
typedef vector<vector<char> > vvc;
typedef vector<vector<string> > vvs;
typedef vector<vector<ll> > vvll;
#define rep(i,n) for(int i = 0; i < (n); ++i)
#define rrep(i,n) for(int i = 1; i <= (n); ++i)
#define irep(it, stl) for(auto it = stl.begin(); it != stl.end(); it++)
#define drep(i,n) for(int i = (n) - 1; i >= 0; --i)
#define fin(ans) cout << (ans) << '\n'
#define STLL(s) strtoll(s.c_str(), NULL, 10)
#define mp(p,q) make_pair(p, q)
#define pb(n) push_back(n)
#define all(a) a.begin(), a.end()
#define rall(a) a.rbegin(), a.rend()
#define Sort(a) sort(a.begin(), a.end())
#define Rort(a) sort(a.rbegin(), a.rend())
#define MATHPI acos(-1)
#define itn int;
#define endl '\n';
const int dx[8] = {1, 0, -1, 0, 1, -1, -1, 1};
const int dy[8] = {0, 1, 0, -1, 1, 1, -1, -1};
template <class T> inline bool chmax(T& a,T b){if(a<b){a=b;return 1;} return 0;}
template <class T> inline bool chmin(T& a,T b){if(a>b){a=b;return 1;} return 0;}
inline string getline(){string s; getline(cin,s); return s;}
inline void yn(const bool b){b?fin("yes"):fin("no");}
inline void Yn(const bool b){b?fin("Yes"):fin("No");}
inline void YN(const bool b){b?fin("YES"):fin("NO");}
struct io{io(){ios::sync_with_stdio(false);cin.tie(0);}};
const int INF = INT_MAX;
const ll LLINF = 1LL<<60;
const ll MOD = 1000000007;
const double EPS = 1e-9;


int main() {
    
    string s,t;
    cin>>s>>t;
    vi Scsum(1,0),Tcsum(1,0);
    rep(i,s.size()){
        if(s[i]=='A')Scsum.pb(*Scsum.rbegin()+1);
        else Scsum.pb(*Scsum.rbegin()+2);
    }
    rep(i,t.size()){
        if(t[i]=='A')Tcsum.pb(*Tcsum.rbegin()+1);
        else Tcsum.pb(*Tcsum.rbegin()+2);
    }
    int q;
    cin>>q;
    rep(i,q){
        int a,b,c,d;
        cin>>a>>b>>c>>d;
        int sA=Scsum[b]-Scsum[a-1];
        int tA=Tcsum[d]-Tcsum[c-1];
        YN(sA%3==tA%3);
    }

}

