問題文の引用元：https://atcoder.jp/contests/diverta2019-2/tasks/diverta2019_2_c
C - Successive SubtractionEditorial / $(function() {var ts = $('#task-statement span.lang');if (ts.children('span').size() <= 1) {$('#task-lang-btn').hide();ts.children('span').show();return;}var REMEMBER_LB = 5;var LS_KEY = 'task_lang';var taskLang = getLS(LS_KEY) || '';var changeTimes = 0;if (taskLang == 'ja' || taskLang == 'en') {changeTimes = REMEMBER_LB;} else {var changeTimes = parseInt(taskLang, 10);if (isNaN(changeTimes)) {changeTimes = 0;delLS(LS_KEY);}changeTimes++;taskLang = LANG;}ts.children('span.lang-' + taskLang).show();$('#task-lang-btn span').click(function() {var l = $(this).data('lang');ts.children('span').hide();ts.children('span.lang-' + l).show();if (changeTimes < REMEMBER_LB) setLS(LS_KEY, changeTimes);else setLS(LS_KEY, l);});});
Time Limit : 2 sec / Memory Limit : 1024 MB
配点 : 500 点
問題文 : 黒板に A_1, A_2, ..., A_N の N 個の整数が書かれています。以下の操作を N-1 回繰り返して黒板にただ 1 つの整数が書かれているようにします。2 個の整数 x, y を選んで消し、新たに 1 個の整数 x-y を書く。ただ 1 つ残る整数としてありうる値の最大値と、その最大値を達成する操作列を求めてください。
制約2 \leq N \leq 10^5-10^4 \leq A_i \leq 10^4入力は全て整数である入力入力は以下の形式で標準入力から与えられる。NA_1 A_2 ... A_N出力ただ 1 つ残る整数としてありうる値の最大値 M と、その最大値を達成する操作列 x_i, y_i を以下の形式に従って出力せよ。ただし、x_i, y_i は i 回目の操作で選ぶ x, y を表す。また、最大値を達成する操作列が複数存在する場合は、そのうちどれを出力しても良い。Mx_1 y_1:x_{N-1} y_{N-1}
// ソースコードの引用元 : https://atcoder.jp/contests/diverta2019-2/submissions/8285663
// 提出ID : 8285663
// 問題ID : diverta2019_2_c
// コンテストID : diverta2019-2
// ユーザID : xryuseix
// コード長 : 2878
// 実行時間 : 204



#include <iostream>
#include <cstdio>
#include <algorithm>
#include <cmath>
#include <vector>
#include <list>
#include <set>
#include <map>
#include <queue>
#include <stack>
#include <cctype>
#include <climits>
#include <string>
#include <bitset>
#include <cfloat>
#include <unordered_set>
using namespace std;
typedef long double ld;
typedef long long int ll;
typedef unsigned long long int ull;
typedef vector<int> vi;
typedef vector<char> vc;
typedef vector<bool> vb;
typedef vector<double> vd;
typedef vector<string> vs;
typedef vector<ll> vll;
typedef vector<pair<int,int> > vpii;
typedef vector<vector<int> > vvi;
typedef vector<vector<char> > vvc;
typedef vector<vector<string> > vvs;
typedef vector<vector<ll> > vvll;
#define rep(i,n) for(int i = 0; i < (n); ++i)
#define rrep(i,n) for(int i = 1; i <= (n); ++i)
#define drep(i,n) for(int i = (n) - 1; i >= 0; --i)
#define fin(ans) cout<<(ans)<<endl
#define STI(s) atoi(s.c_str())
#define mp(p,q) make_pair(p, q)
#define pb(n) push_back(n)
#define all(a) a.begin(), a.end()
#define rall(a) a.rbegin(), a.rend()
#define Sort(a) sort(a.begin(), a.end())
#define Rort(a) sort(a.rbegin(), a.rend())
#define MATHPI acos(-1)
#define itn int
template <class T> inline bool chmax(T& a,T b){if(a<b){a=b;return 1;}return 0;}
template <class T> inline bool chmin(T& a,T b){if(a>b){a=b;return 1;}return 0;}
struct io{io(){ios::sync_with_stdio(false);cin.tie(0);};};
const int MOD = 1000000007;
const int INF = INT_MAX;
const ll LLINF = 1LL<<62;



int main(void) {

    int n;
    cin>>n;
    vi v(n);
    ll ans=0;
    vector<pair<int,int> > log;
    bool isneg=false,ispos=false;
    rep(i,n){
        cin>>v[i];
        if(v[i]>=0)ispos=true;
        else isneg=true;
    }
    Sort(v);

    if(ispos&&isneg){
        for(int i=v.size()-2;i>0;i--){
            if(v[i]<0)break;
            log.push_back(mp(v[0],v[i]));
            v[0]-=v[i];
            v[i]=INF;
        }
        for(int i=0;i<v.size()-1;i++){
            if(v[i]==INF)continue;
            else {
                log.push_back(mp(v[v.size()-1],v[i]));
                v[v.size()-1]-=v[i];
            }
        }
        ans=v[v.size()-1];
    }
    else if(ispos){
        for(int i=1;i<v.size()-1;i++){
            log.push_back(mp(v[0],v[i]));
            v[0]-=v[i];
        }
        log.push_back(mp(v[v.size()-1],v[0]));
        v[v.size()-1]-=v[0];
        ans=v[v.size()-1];
    }
    else if(isneg){
        Rort(v);
        log.push_back(mp(v[0],v[1]));
        v[0]-=v[1];
        for(int i=2;i<v.size();i++){
            log.push_back(mp(v[0],v[i]));
            v[0]-=v[i];
        }
        ans=v[0];
    }
    
    cout<<ans<<endl;
    for(int i=0;i<log.size();i++){
        cout<<log[i].first<<" "<<log[i].second<<endl;
    }

}

