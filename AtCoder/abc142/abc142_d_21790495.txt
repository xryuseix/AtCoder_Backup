問題文の引用元：https://atcoder.jp/contests/abc142/tasks/abc142_d
D - Disjoint Set of Common DivisorsEditorial / $(function() {var ts = $('#task-statement span.lang');if (ts.children('span').size() <= 1) {$('#task-lang-btn').hide();ts.children('span').show();return;}var REMEMBER_LB = 5;var LS_KEY = 'task_lang';var taskLang = getLS(LS_KEY) || '';var changeTimes = 0;if (taskLang == 'ja' || taskLang == 'en') {changeTimes = REMEMBER_LB;} else {var changeTimes = parseInt(taskLang, 10);if (isNaN(changeTimes)) {changeTimes = 0;delLS(LS_KEY);}changeTimes++;taskLang = LANG;}ts.children('span.lang-' + taskLang).show();$('#task-lang-btn span').click(function() {var l = $(this).data('lang');ts.children('span').hide();ts.children('span.lang-' + l).show();if (changeTimes < REMEMBER_LB) setLS(LS_KEY, changeTimes);else setLS(LS_KEY, l);});});
Time Limit : 2 sec / Memory Limit : 1024 MB
配点 : 400 点
問題文 : 正整数 A, B が与えられます。A と B の正の公約数の中からいくつかを選びます。ただし、選んだ整数の中のどの異なる 2 つの整数についても互いに素でなければなりません。最大でいくつ選べるでしょうか。公約数とは整数 d が整数 x と整数 y の公約数であるとは、d が x と y をともに割り切ることをいいます。互いに素とは整数 x, y が互いに素であるとは、x, y の正の公約数が 1 のみであることをいいます。割り切るとは整数 x が整数 y を割り切るとは、y = \alpha x なる整数 \alpha が存在することをいいます。
制約入力は全て整数である。1 \leq A, B \leq 10^{12}入力入力は以下の形式で標準入力から与えられる。A B出力条件を満たすように選べる整数の個数の最大値を出力せよ。



#include <algorithm>
#include <bitset>
#include <cassert>
#include <cctype>
#include <cfloat>
#include <climits>
#include <cmath>
#include <cstdio>
#include <deque>
#include <iomanip>
#include <iostream>
#include <list>
#include <map>
#include <queue>
#include <random>
#include <set>
#include <stack>
#include <string>
#include <unordered_set>
#include <vector>
#pragma GCC target("avx2")
#pragma GCC optimize("O3")
#pragma GCC optimize("unroll-loops")
using namespace std;
typedef long double ld;
typedef long long int ll;
typedef unsigned long long int ull;
typedef vector<int> vi;
typedef vector<char> vc;
typedef vector<bool> vb;
typedef vector<double> vd;
typedef vector<string> vs;
typedef vector<ll> vll;
typedef vector<pair<int, int>> vpii;
typedef vector<pair<ll, ll>> vpll;
typedef vector<vi> vvi;
typedef vector<vvi> vvvi;
typedef vector<vc> vvc;
typedef vector<vs> vvs;
typedef vector<vll> vvll;
typedef pair<int, int> P;
typedef map<int, int> mii;
typedef set<int> si;
#define rep(i, n) for (ll i = 0; i < (n); ++i)
#define rrep(i, n) for (int i = 1; i <= (n); ++i)
#define irep(it, stl) for (auto it = stl.begin(); it != stl.end(); it++)
#define drep(i, n) for (int i = (n)-1; i >= 0; --i)
#define fin(ans) cout << (ans) << '\n'
#define STLL(s) strtoll(s.c_str(), NULL, 10)
#define mp(p, q) make_pair(p, q)
#define pb(n) push_back(n)
#define all(a) a.begin(), a.end()
#define Sort(a) sort(a.begin(), a.end())
#define Rort(a) sort(a.rbegin(), a.rend())
#define fi first
#define se second
// #include <atcoder/all>
// using namespace atcoder;
constexpr int dx[8] = {1, 0, -1, 0, 1, -1, -1, 1};
constexpr int dy[8] = {0, 1, 0, -1, 1, 1, -1, -1};
template <class T, class U>
inline bool chmax(T& a, U b) {
    if (a < b) {
        a = b;
        return 1;
    }
    return 0;
}
template <class T, class U>
inline bool chmin(T& a, U b) {
    if (a > b) {
        a = b;
        return 1;
    }
    return 0;
}
template <class T, class U>
ostream& operator<<(ostream& os, pair<T, U>& p) {
    cout << "(" << p.first << ", " << p.second << ")";
    return os;
}
template <class T>
inline void dump(T& v) {
    // if (v.size() > 100) {
    //     cout << "ARRAY IS TOO LARGE!!!" << endl;
    // } else {
    irep(i, v) { cout << (*i) << ((i == --v.end()) ? '\n' : ' '); }
    // }
}
template <class T, class U>
inline void dump(map<T, U>& v) {
    if (v.size() > 100) {
        cout << "ARRAY IS TOO LARGE!!!" << endl;
    } else {
        irep(i, v) { cout << i->first << " " << i->second << '\n'; }
    }
}
template <class T, class U>
inline void dump(pair<T, U>& p) {
    cout << p.first << " " << p.second << '\n';
}
inline void yn(const bool b) { b ? fin("yes") : fin("no"); }
inline void Yn(const bool b) { b ? fin("Yes") : fin("No"); }
inline void YN(const bool b) { b ? fin("YES") : fin("NO"); }
const int INF = INT_MAX;
constexpr ll LLINF = 1LL << 61;
constexpr ll MOD = 1000000007;  // 998244353; //
constexpr ld EPS = 1e-11;
void Case(int i) { printf("Case #%d: ", i); }
/* --------------------   ここまでテンプレ   -------------------- */

vector<ll> enum_div(ll n) {
    vector<ll> ret;
    for (ll i = 2; i * i <= n; ++i) {
        if (n % i == 0) {
            ret.push_back(i);
            if (i != 1 && i * i != n) {
                ret.push_back(n / i);
            }
        }
    }
    if (ret.size() == 0) ret.pb(n);
    return ret;
}
void intersect(set<ll>& Set_A, set<ll>& Set_B, set<ll>& Set_res) {
    set_intersection(Set_A.begin(), Set_A.end(), Set_B.begin(), Set_B.end(),
                     inserter(Set_res, Set_res.end()));
}
vector<ll> enum_div2(ll n, ll m) {
    vector<ll> ret;
    vll a = enum_div(n);
    vll b = enum_div(m);
    set<ll> A, B;
    rep(i, a.size()) A.insert(a[i]);
    rep(i, b.size()) B.insert(b[i]);
    set<ll> ans;
    intersect(A, B, ans);
    ans.insert(1);
    irep(i,ans)ret.pb(*i);
    return ret;
}

int main() {
    ll n, m;
    cin >> n >> m;
    vll v = enum_div2(n, m);
    set<ll> insu;
    ll ans = 0;
    rep(i, v.size()) {
        vll w = enum_div(v[i]);
        // fin(v[i]);
        // dump(w);
        // fin("--------");
        bool ch = 0;
        rep(j, w.size()) {
            if (insu.count(w[j])) ch = 1;
        }
        if (ch) continue;
        ans++;
        rep(j, w.size()) { insu.insert(w[j]); }
    }
    fin(ans);
}
