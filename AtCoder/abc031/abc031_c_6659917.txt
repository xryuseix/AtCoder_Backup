問題文の引用元：https://atcoder.jp/contests/abc031/tasks/abc031_c
C - 数列ゲームEditorial / $(function() {var ts = $('#task-statement span.lang');if (ts.children('span').size() <= 1) {$('#task-lang-btn').hide();ts.children('span').show();return;}var REMEMBER_LB = 5;var LS_KEY = 'task_lang';var taskLang = getLS(LS_KEY) || '';var changeTimes = 0;if (taskLang == 'ja' || taskLang == 'en') {changeTimes = REMEMBER_LB;} else {var changeTimes = parseInt(taskLang, 10);if (isNaN(changeTimes)) {changeTimes = 0;delLS(LS_KEY);}changeTimes++;taskLang = LANG;}ts.children('span.lang-' + taskLang).show();$('#task-lang-btn span').click(function() {var l = $(this).data('lang');ts.children('span').hide();ts.children('span.lang-' + l).show();if (changeTimes < REMEMBER_LB) setLS(LS_KEY, changeTimes);else setLS(LS_KEY, l);});});
Time Limit : 2 sec / Memory Limit : 256 MB
問題文 : 高橋君と青木君は長さ N の数列 S を用いたゲームを行う。ゲームは高橋君の手番と青木君の手番 1 回ずつからなる。ゲームは以下の要領で行われる。最初に高橋君が数列の要素のうち 1 つに丸をつける。次に青木君が数列の要素で高橋君が丸を付けなかったもののうち 1 つに丸をつける。高橋君と青木君が丸を付けた 2 つの要素に対して、その 2 つの要素およびそれらの間にあるすべての要素を残して、それ以外の要素をすべて削除する。残った数列を T と置く。数列 T のうち、数列 T 内で左から奇数番目の要素の合計が高橋君の得点、偶数番目の要素の合計が青木君の得点となる。青木君は、丸を付けられる要素の中で、青木君が得点を最も多く得られる要素に丸を付ける。そのような要素が複数あるならばそれらのうち最も左側にある要素に丸を付ける。高橋君は青木君の丸の付け方を知っている。高橋君が得られる得点として考えられる得点の最大値を求めよ。入力入力は以下の形式で標準入力から与えられる。Na_1 a_2 ... a_N1 行目には、整数 N (2≦N≦50) が与えられる。N は数列 S の要素数である。2 行目には、N 個の整数 a_1, a_2, ... , a_N (-50≦a_i≦50, 1≦i≦N) が与えられる。整数 a_i は数列 S の左から i 番目の要素を表す。出力高橋君が得られる得点の最大値を 1 行に出力せよ。出力の末尾にも改行を入れること。
// ソースコードの引用元 : https://atcoder.jp/contests/abc031/submissions/6659917
// 提出ID : 6659917
// 問題ID : abc031_c
// コンテストID : abc031
// ユーザID : xryuseix
// コード長 : 2666
// 実行時間 : 1



#include <iostream>
#include <cstdio>
#include <algorithm>
#include <cmath>
#include <vector>
#include <list>
#include <set>
#include <map>
#include <queue>
#include <stack>
#include <cctype>
#include <climits>
#include <string>
#include <bitset>
using namespace std;
typedef long double ld;
typedef long long int ll;
typedef unsigned long long int ull;
typedef vector<int> vi;
typedef vector<char> vc;
typedef vector<string> vs;
typedef vector<ll> vll;
typedef vector<pair<int,int> > vpii;
typedef vector<vector<int> > vvi;
typedef vector<vector<char> > vvc;
typedef vector<vector<string> > vvs;
typedef vector<vector<ll> > vvll;
#define rep(i,n) for(int i = 0; i < (n); ++i)
#define rrep(i,n) for(int i = 1; i <= (n); ++i)
#define drep(i,n) for(int i = (n)-1; i >= 0; --i)
#define fin(ans) cout<<(ans)<<endl
#define STI(s) atoi(s.c_str())
#define mp(p,q) make_pair(p,q)
#define pb(n) push_back(n)
#define all(a) a.begin(),a.end()
#define rall(a) a.rbegin(),a.rend()
#define Sort(a) sort(a.begin(),a.end())
#define Rort(a) sort(a.rbegin(),a.rend())
template<class T> inline bool chmax(T& a,T b){if(a<b){a=b;return 1;}return 0;}
template<class T> inline bool chmin(T& a,T b){if(a>b){a=b;return 1;}return 0;}
const int P = 1000000007;
const int INF = INT_MAX;
const ll LLINF = 1LL<<60;


int main(void){ios::sync_with_stdio(false);cin.tie(0);
//////////////////////////////////////////////////////

    int n;
    cin>>n;
    vi v(n);
    rep(i,n)cin>>v[i];
    int t,a;
    int ans=10-INF;
    for(t=0;t<n;t++){
        int amax=10-INF;
        int tmax=10-INF;

        for(a=0;a<n;a++){
            if(t==a)continue;
            int tpoint=0,apoint=0;

            if(t<a){
                for(int i=t;i<=a;i+=2){
                    tpoint+=v[i];
                }
                for(int i=t+1;i<=a;i+=2){
                    apoint+=v[i];
                }
            } else {
                for(int i=a;i<=t;i+=2){
                    tpoint+=v[i];
                    // if(a==0&&t==2){
                    //     cout<<v[i]<<":";
                    // }
                }
                for(int i=a+1;i<=t;i+=2){
                    apoint+=v[i];
                }
                // cout<<endl;
            }

            // cout<<amax<<"apoint:"<<apoint<<" "<<tpoint<<endl;
            if(amax<apoint){
                tmax=tpoint;
                amax=apoint;
            }
        }
        // cout<<"----------------"<<endl;

        ans=max(ans,tmax);
    }
    cout<<ans<<endl;
    


//////////////////////////////////////////////////////
return 0;}
