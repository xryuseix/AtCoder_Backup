問題文の引用元：https://atcoder.jp/contests/code-festival-2014-quala/tasks/code_festival_qualA_d
D - 壊れた電卓Editorial / $(function() {var ts = $('#task-statement span.lang');if (ts.children('span').size() <= 1) {$('#task-lang-btn').hide();ts.children('span').show();return;}var REMEMBER_LB = 5;var LS_KEY = 'task_lang';var taskLang = getLS(LS_KEY) || '';var changeTimes = 0;if (taskLang == 'ja' || taskLang == 'en') {changeTimes = REMEMBER_LB;} else {var changeTimes = parseInt(taskLang, 10);if (isNaN(changeTimes)) {changeTimes = 0;delLS(LS_KEY);}changeTimes++;taskLang = LANG;}ts.children('span.lang-' + taskLang).show();$('#task-lang-btn span').click(function() {var l = $(this).data('lang');ts.children('span').hide();ts.children('span.lang-' + l).show();if (changeTimes < REMEMBER_LB) setLS(LS_KEY, changeTimes);else setLS(LS_KEY, l);});});
Time Limit : 2 sec / Memory Limit : 256 MB
問題文 : 高橋君の電卓は壊れてしまっています。K 種類より多くの種類の数字を打つと、電卓が壊れてしまいます。整数 A が与えられます。高橋君は、この整数を入力したいです。ですが、普通にその整数を打とうとすると、電卓が壊れてしまうことがあるため、電卓が壊れない範囲で、出来るだけ整数 A との差の大きさが小さい整数を入力します。この時、高橋君が入力する整数と、整数 A の差の大きさがいくつになるかを出力しなさい。入力入力は以下の形式で標準入力から与えられる。A K1 行目には、入力したい整数 A (1 ≦ A ≦ 10^{15}) と、入力可能な数字の種類数 K (1 ≦ K ≦ 10) が、スペース区切りで与えられる。部分点1 ≦ A ≦ 100,000 の全てのケースに正解すると、 30 点が与えられる。残りの全てのケースに正解すると、さらに 70 点が与えられる。出力高橋君が入力する整数と、整数 A の差の大きさの最小値を 1 行で出力せよ。出力の末尾には改行をいれること。
// ソースコードの引用元 : https://atcoder.jp/contests/code-festival-2014-quala/submissions/12234557
// 提出ID : 12234557
// 問題ID : code_festival_qualA_d
// コンテストID : code-festival-2014-quala
// ユーザID : xryuseix
// コード長 : 3185
// 実行時間 : 13



#include <iostream>
#include <cstdio>
#include <algorithm>
#include <cmath>
#include <vector>
#include <list>
#include <set>
#include <map>
#include <queue>
#include <stack>
#include <cctype>
#include <cassert>
#include <climits>
#include <string>
#include <bitset>
#include <cfloat>
#include <random>
#include <iomanip>
#include <unordered_set>
#pragma GCC optimize("Ofast")
using namespace std;
typedef long double ld;
typedef long long int ll;
typedef unsigned long long int ull;
typedef vector<int> vi;
typedef vector<char> vc;
typedef vector<bool> vb;
typedef vector<double> vd;
typedef vector<string> vs;
typedef vector<ll> vll;
typedef vector<pair<int,int> > vpii;
typedef vector<pair<ll,ll> > vpll;
typedef vector<vector<int> > vvi;
typedef vector<vector<char> > vvc;
typedef vector<vector<string> > vvs;
typedef vector<vector<ll> > vvll;
typedef map<int, int> mii;
typedef set<int> si;
#define rep(i,n) for(int i = 0; i < (n); ++i)
#define rrep(i,n) for(int i = 1; i <= (n); ++i)
#define irep(it, stl) for(auto it = stl.begin(); it != stl.end(); it++)
#define drep(i,n) for(int i = (n) - 1; i >= 0; --i)
#define fin(ans) cout << (ans) << '\n'
#define STLL(s) strtoll(s.c_str(), NULL, 10)
#define mp(p,q) make_pair(p, q)
#define pb(n) push_back(n)
#define all(a) a.begin(), a.end()
#define rall(a) a.rbegin(), a.rend()
#define Sort(a) sort(a.begin(), a.end())
#define Rort(a) sort(a.rbegin(), a.rend())
#define MATHPI acos(-1)
#define itn int
// #define endl '\n';
#define fi first
#define se second
#define NONVOID [[nodiscard]]
const int dx[8] = {1, 0, -1, 0, 1, -1, -1, 1};
const int dy[8] = {0, 1, 0, -1, 1, 1, -1, -1};
template <class T> inline bool chmax(T& a,T b){if(a<b){a=b;return 1;} return 0;}
template <class T> inline bool chmin(T& a,T b){if(a>b){a=b;return 1;} return 0;}
template <class T> inline void dump(T &v){irep(i, v){cout<<*i<<((i==--v.end())?'\n':' ');}}
inline string getline(){string s; getline(cin,s); return s;}
inline void yn(const bool b){b?fin("yes"):fin("no");}
inline void Yn(const bool b){b?fin("Yes"):fin("No");}
inline void YN(const bool b){b?fin("YES"):fin("NO");}
struct io{io(){ios::sync_with_stdio(false);cin.tie(0);}};
const int INF = INT_MAX;
const ll LLINF = 1LL<<60;
const ll MOD = 1000000007;
const double EPS = 1e-9;

int stringcount(string s, char c) {
    return count(s.cbegin(), s.cend(), c);
}

int main() {

    string a;ll K,na;
    cin>>a>>K;
    na=STLL(a);
    ll ans=LLINF;
    rep(i,15){ // substr
        rep(j,10){ // 次につける文字
            rep(k,10){ // その次につける文字(基本0か9)
                rep(l,15){ // kをいくつつけるか
                    string s = a.substr(0,i);
                    s+=(j+'0');
                    rep(m,l)s+=(k+'0');
                    if(s.size()>16)continue;
                    int set=0;
                    rep(m,10){
                        set+=(bool)stringcount(s, '0'+m);
                    }
                    if(set>K)continue;
                    chmin(ans,abs(na-STLL(s)));
                }
            }
        }
    }
    fin(ans);
}
